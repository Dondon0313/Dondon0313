{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled10.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNfs6peyWUt0pQGVf352fdW",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Dondon0313/Dondon0313/blob/master/yolov4%20mask\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1EvqmXmqoeV8",
        "outputId": "e0d2a839-cc21-4e58-db08-4d2fd20f4348"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/\n",
            "Mounted at /content/gdrive\n",
            " 1\n",
            " 105-2歷史與文化分組名單.docx\n",
            "'107(上)文化與生活-3古代到現在服裝介紹.pptx 的副本.pptx'\n",
            " 22.oxps\n",
            " 379009_贊助摸彩品清冊.pdf\n",
            " 399336_三系聯合迎新宿營徵才報名表.docx\n",
            "'431186_靜宜 社工 資工 財數 -棠春報價單.pdf'\n",
            "'433640_靜宜大學 (社工X資工X財數) 棠春 合約.pdf'\n",
            "'Allianz-POS Func_SPEC-保全复核_v1.0.doc'\n",
            " blizzard.ax\n",
            "'(C-12)1051迎新宿營.pdf'\n",
            "'ch01python-introductionsetup-environment-20140903-tsycph2 (1).pptx'\n",
            "'Colab Notebooks'\n",
            " dondon1.pdf\n",
            " dondon.pdf\n",
            " etd-0804113-160651.pdf\n",
            " fb211117094817.pdf\n",
            " fb211117101541.pdf\n",
            " handtrackinggpu.apk\n",
            " handtrackinggpu_unsigned.apk\n",
            " matlab\n",
            " mediapipe_pose_tracking_gpu\n",
            " posetrackinggpu.apk\n",
            " PUSC9010_財數系系學會特色簡報.pptx\n",
            " SLOAN110-8-2.pdf\n",
            "'Warcraft III.rar'\n",
            " yolov4\n",
            "'一驗 (1).pdf'\n",
            "'一驗2 (1).pdf'\n",
            "'一驗3 (1).pdf'\n",
            "'二驗 (1).pdf'\n",
            "'二驗2 (1).pdf'\n",
            "'二驗3 (1).pdf'\n",
            "'二驗4'\\'' (1).pdf'\n",
            "'二驗5 (1).pdf'\n",
            " 交接音樂\n",
            " 各項資料表.docx.gdoc\n",
            " 報告\n",
            " 巨量報告.pptx\n",
            " 幹訓.pptx\n",
            " 手冊.docx\n",
            " 數統社三系聯合宿營企畫書.pdf\n",
            " 活動整合與時間管理.pptx\n",
            " 網路通訊概論.doc\n",
            " 網路通訊概論-李東昇.pptx\n",
            " 網路通訊概論-陳柏丞.pptx\n",
            " 行前1.pdf\n",
            " 行前2.pdf\n",
            " 行前3.pdf\n",
            " 行前4.pdf\n",
            " 行前5.pdf\n",
            " 財數三合一選舉.docx\n",
            "'財數之夜細流 (1).docx 33 (1).docx.gdoc'\n",
            "'財數之夜細流 (1).docx 33.docx'\n",
            "'財數之夜細流 (1).docx 33.docx.gdoc'\n",
            "/content/gdrive/My Drive/yolov4\n"
          ]
        }
      ],
      "source": [
        "#mount drive\n",
        "%cd ..\n",
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')\n",
        "\n",
        "# this creates a symbolic link so that now the path /content/gdrive/My\\ Drive/ is equal to /mydrive\n",
        "!ln -s /content/gdrive/My\\ Drive/ /mydrive\n",
        "\n",
        "# list the contents of /mydrive\n",
        "!ls /mydrive\n",
        "\n",
        "#Navigate to /mydrive/yolov4\n",
        "%cd /mydrive/yolov4"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/AlexeyAB/darknet"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dNHcp1u1pnbp",
        "outputId": "4a15fa4b-9993-4040-d70f-d00c98caf865"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'darknet'...\n",
            "remote: Enumerating objects: 15490, done.\u001b[K\n",
            "remote: Counting objects: 100% (30/30), done.\u001b[K\n",
            "remote: Compressing objects: 100% (19/19), done.\u001b[K\n",
            "remote: Total 15490 (delta 10), reused 21 (delta 9), pack-reused 15460\u001b[K\n",
            "Receiving objects: 100% (15490/15490), 14.10 MiB | 7.92 MiB/s, done.\n",
            "Resolving deltas: 100% (10397/10397), done.\n",
            "Checking out files: 100% (2057/2057), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# change makefile to have GPU and OPENCV enabled\n",
        "# also set CUDNN, CUDNN_HALF and LIBSO to 1\n",
        "\n",
        "%cd darknet/\n",
        "!sed -i 's/OPENCV=0/OPENCV=1/' Makefile\n",
        "!sed -i 's/GPU=0/GPU=1/' Makefile\n",
        "!sed -i 's/CUDNN=0/CUDNN=1/' Makefile\n",
        "!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile\n",
        "!sed -i 's/LIBSO=0/LIBSO=1/' Makefile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W9FTTKFRqLJI",
        "outputId": "f7d2ab2e-31a6-46ce-cca5-767db522a3f9"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/gdrive/MyDrive/yolov4/darknet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# build darknet \n",
        "!make"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-QdBHOCsqMVY",
        "outputId": "d7f412fb-b10d-48c5-ecbc-b18190b91caa"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "mkdir -p ./obj/\n",
            "mkdir -p backup\n",
            "chmod +x *.sh\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/image_opencv.cpp -o obj/image_opencv.o\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid draw_detections_cv_v3(void**, detection*, int, float, char**, image**, int, int)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:946:23:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Krgb\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "                 float \u001b[01;35m\u001b[Krgb\u001b[m\u001b[K[3];\n",
            "                       \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid draw_train_loss(char*, void**, int, float, float, int, int, float, int, char*, float, int, int, double)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1147:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K-Wmisleading-indentation\u001b[m\u001b[K]\n",
            "             \u001b[01;35m\u001b[Kif\u001b[m\u001b[K (iteration_old == 0)\n",
            "             \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1150:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n",
            "          \u001b[01;36m\u001b[Kif\u001b[m\u001b[K (iteration_old != 0){\n",
            "          \u001b[01;36m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid cv_draw_object(image, float*, int, int, int*, float*, int*, int, char**)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1444:14:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbuff\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         char \u001b[01;35m\u001b[Kbuff\u001b[m\u001b[K[100];\n",
            "              \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1420:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kit_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kit_tb_res\u001b[m\u001b[K = cv::createTrackbar(it_trackbar_name, window_name, &it_trackbar_value, 1000);\n",
            "         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1424:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Klr_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Klr_tb_res\u001b[m\u001b[K = cv::createTrackbar(lr_trackbar_name, window_name, &lr_trackbar_value, 20);\n",
            "         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1428:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kcl_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kcl_tb_res\u001b[m\u001b[K = cv::createTrackbar(cl_trackbar_name, window_name, &cl_trackbar_value, classes-1);\n",
            "         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1431:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbo_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kbo_tb_res\u001b[m\u001b[K = cv::createTrackbar(bo_trackbar_name, window_name, boxonly, 1);\n",
            "         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/http_stream.cpp -o obj/http_stream.o\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kbool JSON_sender::write(const char*)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:253:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kn\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "                 int \u001b[01;35m\u001b[Kn\u001b[m\u001b[K = _write(client, outputbuf, outlen);\n",
            "                     \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kbool MJPG_sender::write(const cv::Mat&)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:511:113:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%zu\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "                 sprintf(head, \"--mjpegstream\\r\\nContent-Type: image/jpeg\\r\\nContent-Length: %zu\\r\\n\\r\\n\", outlen\u001b[01;35m\u001b[K)\u001b[m\u001b[K;\n",
            "                                                                                                                 \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid set_track_id(detection*, int, float, float, float, int, int, int)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:867:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (int i = 0; \u001b[01;35m\u001b[Ki < v.size()\u001b[m\u001b[K; ++i) {\n",
            "                         \u001b[01;35m\u001b[K~~^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:875:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "     for (int old_id = 0; \u001b[01;35m\u001b[Kold_id < old_dets.size()\u001b[m\u001b[K; ++old_id) {\n",
            "                          \u001b[01;35m\u001b[K~~~~~~~^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:894:31:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "     for (int index = 0; \u001b[01;35m\u001b[Kindex < new_dets_num*old_dets.size()\u001b[m\u001b[K; ++index) {\n",
            "                         \u001b[01;35m\u001b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:930:28:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "     if (\u001b[01;35m\u001b[Kold_dets_dq.size() > deque_size\u001b[m\u001b[K) old_dets_dq.pop_front();\n",
            "         \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/gemm.c -o obj/gemm.o\n",
            "\u001b[01m\u001b[K./src/gemm.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kconvolution_2d\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/gemm.c:2044:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kout_w\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     const int \u001b[01;35m\u001b[Kout_w\u001b[m\u001b[K = (w + 2 * pad - ksize) / stride + 1;    // output_width=input_width for stride=1 and pad=1\n",
            "               \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gemm.c:2043:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kout_h\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     const int \u001b[01;35m\u001b[Kout_h\u001b[m\u001b[K = (h + 2 * pad - ksize) / stride + 1;    // output_height=input_height for stride=1 and pad=1\n",
            "               \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/utils.c -o obj/utils.o\n",
            "\u001b[01m\u001b[K./src/utils.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcustom_hash\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/utils.c:1061:12:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Ksuggest parentheses around assignment used as truth value [\u001b[01;35m\u001b[K-Wparentheses\u001b[m\u001b[K]\n",
            "     while (\u001b[01;35m\u001b[Kc\u001b[m\u001b[K = *str++)\n",
            "            \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/dark_cuda.c -o obj/dark_cuda.o\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcudnn_check_error_extended\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:230:20:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between ‘\u001b[01m\u001b[KcudaError_t {aka enum cudaError}\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kenum <anonymous>\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wenum-compare\u001b[m\u001b[K]\n",
            "         if (status \u001b[01;35m\u001b[K!=\u001b[m\u001b[K CUDNN_STATUS_SUCCESS)\n",
            "                    \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcublas_check_error_extended\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:264:18:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between ‘\u001b[01m\u001b[KcudaError_t {aka enum cudaError}\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kenum cudaError_enum\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wenum-compare\u001b[m\u001b[K]\n",
            "       if (status \u001b[01;35m\u001b[K!=\u001b[m\u001b[K CUDA_SUCCESS)\n",
            "                  \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kpre_allocate_pinned_memory\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:395:40:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%u\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kunsigned int\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\"pre_allocate: size = \u001b[01;35m\u001b[K%Iu\u001b[m\u001b[K MB, num_of_blocks = %Iu, block_size = %Iu MB \\n\",\n",
            "                                      \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "                                      \u001b[32m\u001b[K%Ilu\u001b[m\u001b[K\n",
            "             \u001b[32m\u001b[Ksize / (1024*1024)\u001b[m\u001b[K, num_of_blocks, pinned_block_size / (1024 * 1024));\n",
            "             \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K          \n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:395:64:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%u\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kunsigned int\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\"pre_allocate: size = %Iu MB, num_of_blocks = \u001b[01;35m\u001b[K%Iu\u001b[m\u001b[K, block_size = %Iu MB \\n\",\n",
            "                                                              \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "                                                              \u001b[32m\u001b[K%Ilu\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:395:82:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%u\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kunsigned int\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\"pre_allocate: size = %Iu MB, num_of_blocks = %Iu, block_size = \u001b[01;35m\u001b[K%Iu\u001b[m\u001b[K MB \\n\",\n",
            "                                                                                \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "                                                                                \u001b[32m\u001b[K%Ilu\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:405:37:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "                 printf(\" Allocated \u001b[01;35m\u001b[K%d\u001b[m\u001b[K pinned block \\n\", pinned_block_size);\n",
            "                                    \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                    \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcuda_make_array_pinned_preallocated\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:426:43:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "             printf(\"\\n Pinned block_id = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, filled = %f %% \\n\", pinned_block_id, filled);\n",
            "                                          \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                          \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:441:64:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "             printf(\"Try to allocate new pinned memory, size = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K MB \\n\", \u001b[32m\u001b[Ksize / (1024 * 1024)\u001b[m\u001b[K);\n",
            "                                                               \u001b[01;35m\u001b[K~^\u001b[m\u001b[K         \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "                                                               \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:447:63:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "             printf(\"Try to allocate new pinned BLOCK, size = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K MB \\n\", \u001b[32m\u001b[Ksize / (1024 * 1024)\u001b[m\u001b[K);\n",
            "                                                              \u001b[01;35m\u001b[K~^\u001b[m\u001b[K         \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "                                                              \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "At top level:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:287:23:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KswitchBlasHandle\u001b[m\u001b[K’ defined but not used [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " static cublasHandle_t \u001b[01;35m\u001b[KswitchBlasHandle\u001b[m\u001b[K[16];\n",
            "                       \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:286:12:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KswitchBlasInit\u001b[m\u001b[K’ defined but not used [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " static int \u001b[01;35m\u001b[KswitchBlasInit\u001b[m\u001b[K[16] = { 0 };\n",
            "            \u001b[01;35m\u001b[K^~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/convolutional_layer.c -o obj/convolutional_layer.o\n",
            "\u001b[01m\u001b[K./src/convolutional_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_convolutional_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/convolutional_layer.c:1342:32:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kt_intput_size\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "                         size_t \u001b[01;35m\u001b[Kt_intput_size\u001b[m\u001b[K = binary_transpose_align_input(k, n, state.workspace, &l.t_bit_input, ldb_align, l.bit_align);\n",
            "                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/list.c -o obj/list.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/image.c -o obj/image.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/activations.c -o obj/activations.o\n",
            "\u001b[01m\u001b[K./src/activations.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kactivate\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KRELU6\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "     \u001b[01;35m\u001b[Kswitch\u001b[m\u001b[K(a){\n",
            "     \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KSWISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KMISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KHARD_MISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KNORM_CHAN\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KNORM_CHAN_SOFTMAX\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KNORM_CHAN_SOFTMAX_MAXVAL\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kgradient\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/activations.c:310:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KSWISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "     \u001b[01;35m\u001b[Kswitch\u001b[m\u001b[K(a){\n",
            "     \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/activations.c:310:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KMISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:310:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KHARD_MISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/im2col.c -o obj/im2col.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/col2im.c -o obj/col2im.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/blas.c -o obj/blas.o\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kbackward_shortcut_multilayer_cpu\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:207:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kout_index\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "                 int \u001b[01;35m\u001b[Kout_index\u001b[m\u001b[K = id;\n",
            "                     \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfind_sim\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:597:59:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\" Error: find_sim(): sim isn't found: i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, j = %d, z = %d \\n\", i, j, z);\n",
            "                                                          \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                          \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:597:67:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\" Error: find_sim(): sim isn't found: i = %d, j = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, z = %d \\n\", i, j, z);\n",
            "                                                                  \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                  \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:597:75:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\" Error: find_sim(): sim isn't found: i = %d, j = %d, z = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, j, z);\n",
            "                                                                          \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                          \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfind_P_constrastive\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:611:68:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\" Error: find_P_constrastive(): P isn't found: i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, j = %d, z = %d \\n\", i, j, z);\n",
            "                                                                   \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                   \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:611:76:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\" Error: find_P_constrastive(): P isn't found: i = %d, j = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, z = %d \\n\", i, j, z);\n",
            "                                                                           \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                           \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:611:84:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         printf(\" Error: find_P_constrastive(): P isn't found: i = %d, j = %d, z = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, j, z);\n",
            "                                                                                   \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                                   \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[KP_constrastive_f\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:651:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, l = %d \\n\", i, l);\n",
            "                                                                              \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                              \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:651:87:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = %d, l = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, l);\n",
            "                                                                                      \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                                      \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[KP_constrastive\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:785:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, l = %d \\n\", i, l);\n",
            "                                                                              \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                              \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:785:87:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = %d, l = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, l);\n",
            "                                                                                      \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                                      \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/crop_layer.c -o obj/crop_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/dropout_layer.c -o obj/dropout_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/maxpool_layer.c -o obj/maxpool_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/softmax_layer.c -o obj/softmax_layer.o\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_contrastive_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:203:101:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 9 has type ‘\u001b[01m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "     fprintf(stderr, \"contrastive %4d x%4d x%4d x emb_size %4d x batch: %4d  classes = %4d, step = \u001b[01;35m\u001b[K%4d\u001b[m\u001b[K \\n\", w, h, l.n, l.embedding_size, batch, l.classes, step);\n",
            "                                                                                                   \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "                                                                                                   \u001b[32m\u001b[K%4ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_contrastive_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:244:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kmax_truth\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "                     float \u001b[01;35m\u001b[Kmax_truth\u001b[m\u001b[K = 0;\n",
            "                           \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:423:71:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "             printf(\" Error: too large number of bboxes: contr_size = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K > max_contr_size  = %d \\n\", contr_size, max_contr_size);\n",
            "                                                                      \u001b[01;35m\u001b[K~^\u001b[m\u001b[K\n",
            "                                                                      \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/data.c -o obj/data.o\n",
            "\u001b[01m\u001b[K./src/data.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kload_data_detection\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/data.c:1297:24:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kx\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "                 int k, \u001b[01;35m\u001b[Kx\u001b[m\u001b[K, y;\n",
            "                        \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:1090:43:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kr_scale\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "     float r1 = 0, r2 = 0, r3 = 0, r4 = 0, \u001b[01;35m\u001b[Kr_scale\u001b[m\u001b[K = 0;\n",
            "                                           \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/matrix.c -o obj/matrix.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/network.c -o obj/network.o\n",
            "\u001b[01m\u001b[K./src/network.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ktrain_network_waitkey\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/network.c:435:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kema_period\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         int \u001b[01;35m\u001b[Kema_period\u001b[m\u001b[K = (net.max_batches - ema_start_point - 1000) * (1.0 - net.ema_alpha);\n",
            "             \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/network.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_network\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/network.c:660:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "         if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Knet->input_pinned_cpu, size * sizeof(float), cudaHostRegisterMapped))\n",
            "                                          \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/network.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/connected_layer.c -o obj/connected_layer.o\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_connected_layer_gpu\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:346:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kone\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Kone\u001b[m\u001b[K = 1;    // alpha[0], beta[0]\n",
            "           \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:344:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kc\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float * \u001b[01;35m\u001b[Kc\u001b[m\u001b[K = l.output_gpu;\n",
            "             \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:343:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kb\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float * \u001b[01;35m\u001b[Kb\u001b[m\u001b[K = l.weights_gpu;\n",
            "             \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:342:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ka\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float * \u001b[01;35m\u001b[Ka\u001b[m\u001b[K = state.input;\n",
            "             \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:341:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kn\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kn\u001b[m\u001b[K = l.outputs;\n",
            "         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:340:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kk\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kk\u001b[m\u001b[K = l.inputs;\n",
            "         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:339:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Km\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Km\u001b[m\u001b[K = l.batch;\n",
            "         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/cost_layer.c -o obj/cost_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/parser.c -o obj/parser.o\n",
            "\u001b[01m\u001b[K./src/parser.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kparse_network_cfg_custom\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/parser.c:1777:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "         if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Knet.input_pinned_cpu, size * sizeof(float), cudaHostRegisterMapped)) net.input_pinned_cpu_flag = 1;\n",
            "                                          \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activation_layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/parser.c:6\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/parser.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ksave_implicit_weights\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/parser.c:1909:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ki\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Ki\u001b[m\u001b[K;\n",
            "         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/parser.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kget_classes_multipliers\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/parser.c:438:29:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kargument 1 range [18446744071562067968, 18446744073709551615] exceeds maximum object size 9223372036854775807 [\u001b[01;35m\u001b[K-Walloc-size-larger-than=\u001b[m\u001b[K]\n",
            "         \u001b[01;35m\u001b[Kclasses_multipliers = (float *)calloc(classes_counters, sizeof(float))\u001b[m\u001b[K;\n",
            "         \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K./src/parser.c:3:0\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/stdlib.h:541:14:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kin a call to allocation function ‘\u001b[01m\u001b[Kcalloc\u001b[m\u001b[K’ declared here\n",
            " extern void *\u001b[01;36m\u001b[Kcalloc\u001b[m\u001b[K (size_t __nmemb, size_t __size)\n",
            "              \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/option_list.c -o obj/option_list.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/darknet.c -o obj/darknet.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/detection_layer.c -o obj/detection_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/captcha.c -o obj/captcha.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/route_layer.c -o obj/route_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/writing.c -o obj/writing.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/box.c -o obj/box.o\n",
            "\u001b[01m\u001b[K./src/box.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kbox_iou_kind\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/box.c:154:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KMSE\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "     \u001b[01;35m\u001b[Kswitch\u001b[m\u001b[K(iou_kind) {\n",
            "     \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/box.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdiounms_sort\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/box.c:898:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbeta_prob\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "                     float \u001b[01;35m\u001b[Kbeta_prob\u001b[m\u001b[K = pow(dets[j].prob[k], 2) / sum_prob;\n",
            "                           \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/box.c:897:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kalpha_prob\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "                     float \u001b[01;35m\u001b[Kalpha_prob\u001b[m\u001b[K = pow(dets[i].prob[k], 2) / sum_prob;\n",
            "                           \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/nightmare.c -o obj/nightmare.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/normalization_layer.c -o obj/normalization_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/avgpool_layer.c -o obj/avgpool_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/coco.c -o obj/coco.o\n",
            "\u001b[01m\u001b[K./src/coco.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvalidate_coco_recall\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/coco.c:248:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbase\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     char *\u001b[01;35m\u001b[Kbase\u001b[m\u001b[K = \"results/comp4_det_test_\";\n",
            "           \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/dice.c -o obj/dice.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/yolo.c -o obj/yolo.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/detector.c -o obj/detector.o\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ktrain_detector\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:395:72:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Ksuggest parentheses around ‘\u001b[01m\u001b[K&&\u001b[m\u001b[K’ within ‘\u001b[01m\u001b[K||\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wparentheses\u001b[m\u001b[K]\n",
            "             \u001b[01;35m\u001b[K(iteration >= (iter_save + 1000) || iteration % 1000 == 0) && net.max_batches < 10000\u001b[m\u001b[K)\n",
            "             \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Keliminate_bdd\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:588:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kstatement with no effect [\u001b[01;35m\u001b[K-Wunused-value\u001b[m\u001b[K]\n",
            "                     \u001b[01;35m\u001b[Kfor\u001b[m\u001b[K (k; buf[k + n] != '\\0'; k++)\n",
            "                     \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvalidate_detector\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:709:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kmkd2\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         int \u001b[01;35m\u001b[Kmkd2\u001b[m\u001b[K = make_directory(buff2, 0777);\n",
            "             \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:707:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kmkd\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         int \u001b[01;35m\u001b[Kmkd\u001b[m\u001b[K = make_directory(buff, 0777);\n",
            "             \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvalidate_detector_map\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:1326:24:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kcur_prob\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "                 double \u001b[01;35m\u001b[Kcur_prob\u001b[m\u001b[K = 0;\n",
            "                        \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:1347:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kclass_recall\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         float \u001b[01;35m\u001b[Kclass_recall\u001b[m\u001b[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)(truth_classes_count[i] - tp_for_thresh_per_class[i]));\n",
            "               \u001b[01;35m\u001b[K^~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:1346:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kclass_precision\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         float \u001b[01;35m\u001b[Kclass_precision\u001b[m\u001b[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)fp_for_thresh_per_class[i]);\n",
            "               \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdraw_object\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:1890:19:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kinv_loss\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "             float \u001b[01;35m\u001b[Kinv_loss\u001b[m\u001b[K = 1.0 / max_val_cmp(0.01, avg_loss);\n",
            "                   \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/layer.c -o obj/layer.o\n",
            "\u001b[01m\u001b[K./src/layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfree_layer_custom\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/layer.c:208:68:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Ksuggest parentheses around ‘\u001b[01m\u001b[K&&\u001b[m\u001b[K’ within ‘\u001b[01m\u001b[K||\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wparentheses\u001b[m\u001b[K]\n",
            "     if (l.delta_gpu && (l.optimized_memory < 1 || \u001b[01;35m\u001b[Kl.keep_delta_gpu && l.optimized_memory < 3\u001b[m\u001b[K)) cuda_free(l.delta_gpu), l.delta_gpu = NULL;\n",
            "                                                   \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/compare.c -o obj/compare.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/classifier.c -o obj/classifier.o\n",
            "\u001b[01m\u001b[K./src/classifier.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ktrain_classifier\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/classifier.c:146:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kcount\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kcount\u001b[m\u001b[K = 0;\n",
            "         \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/classifier.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kpredict_classifier\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/classifier.c:855:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktime\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     clock_t \u001b[01;35m\u001b[Ktime\u001b[m\u001b[K;\n",
            "             \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/classifier.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdemo_classifier\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/classifier.c:1287:49:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktval_result\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         struct timeval tval_before, tval_after, \u001b[01;35m\u001b[Ktval_result\u001b[m\u001b[K;\n",
            "                                                 \u001b[01;35m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/classifier.c:1287:37:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktval_after\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         struct timeval tval_before, \u001b[01;35m\u001b[Ktval_after\u001b[m\u001b[K, tval_result;\n",
            "                                     \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/local_layer.c -o obj/local_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/swag.c -o obj/swag.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/shortcut_layer.c -o obj/shortcut_layer.o\n",
            "\u001b[01m\u001b[K./src/shortcut_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_shortcut_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/shortcut_layer.c:55:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kscale\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         float \u001b[01;35m\u001b[Kscale\u001b[m\u001b[K = sqrt(2. / l.nweights);\n",
            "               \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/representation_layer.c -o obj/representation_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/activation_layer.c -o obj/activation_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/rnn_layer.c -o obj/rnn_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/gru_layer.c -o obj/gru_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/rnn.c -o obj/rnn.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/rnn_vid.c -o obj/rnn_vid.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/crnn_layer.c -o obj/crnn_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/demo.c -o obj/demo.o\n",
            "\u001b[01m\u001b[K./src/demo.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdetect_in_thread\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/demo.c:101:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kl\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "         layer \u001b[01;35m\u001b[Kl\u001b[m\u001b[K = net.layers[net.n - 1];\n",
            "               \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/tag.c -o obj/tag.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/cifar.c -o obj/cifar.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/go.c -o obj/go.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/batchnorm_layer.c -o obj/batchnorm_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/art.c -o obj/art.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/region_layer.c -o obj/region_layer.o\n",
            "\u001b[01m\u001b[K./src/region_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_region_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/region_layer.c:63:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kold_h\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kold_h\u001b[m\u001b[K = l->h;\n",
            "         \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/region_layer.c:62:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kold_w\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int \u001b[01;35m\u001b[Kold_w\u001b[m\u001b[K = l->w;\n",
            "         \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/reorg_layer.c -o obj/reorg_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/reorg_old_layer.c -o obj/reorg_old_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/super.c -o obj/super.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/voxel.c -o obj/voxel.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/tree.c -o obj/tree.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/yolo_layer.c -o obj/yolo_layer.o\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:68:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl.output, batch*l.outputs*sizeof(float), cudaHostRegisterMapped)) l.output_pinned = 1;\n",
            "                                      \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:75:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl.delta, batch*l.outputs*sizeof(float), cudaHostRegisterMapped)) l.delta_pinned = 1;\n",
            "                                      \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:106:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl->output, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "                                          \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:115:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl->delta, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "                                          \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kprocess_batch\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:426:25:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kbest_match_t\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "                     int \u001b[01;35m\u001b[Kbest_match_t\u001b[m\u001b[K = 0;\n",
            "                         \u001b[01;35m\u001b[K^~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:707:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kavg_anyobj\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Kavg_anyobj\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:706:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kavg_obj\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Kavg_obj\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:705:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kavg_cat\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Kavg_cat\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:704:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krecall75\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Krecall75\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:703:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krecall\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Krecall\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:702:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_ciou_loss\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Ktot_ciou_loss\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:701:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_diou_loss\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Ktot_diou_loss\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:698:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_ciou\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Ktot_ciou\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:697:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_diou\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Ktot_diou\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:696:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_giou\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     float \u001b[01;35m\u001b[Ktot_giou\u001b[m\u001b[K = 0;\n",
            "           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:668:12:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kn\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int b, \u001b[01;35m\u001b[Kn\u001b[m\u001b[K;\n",
            "            \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/gaussian_yolo_layer.c -o obj/gaussian_yolo_layer.o\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_gaussian_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:72:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl.output, batch*l.outputs * sizeof(float), cudaHostRegisterMapped)) l.output_pinned = 1;\n",
            "                                      \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:79:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl.delta, batch*l.outputs * sizeof(float), cudaHostRegisterMapped)) l.delta_pinned = 1;\n",
            "                                      \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_gaussian_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:111:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl->output, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "                                          \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:120:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&\u001b[m\u001b[Kl->delta, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "                                          \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:4811:39:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " extern __host__ cudaError_t CUDARTAPI \u001b[01;36m\u001b[KcudaHostAlloc\u001b[m\u001b[K(void **pHost, size_t size, unsigned int flags);\n",
            "                                       \u001b[01;36m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/upsample_layer.c -o obj/upsample_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/lstm_layer.c -o obj/lstm_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/conv_lstm_layer.c -o obj/conv_lstm_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/scale_channels_layer.c -o obj/scale_channels_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -c ./src/sam_layer.c -o obj/sam_layer.o\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/convolutional_kernels.cu -o obj/convolutional_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/activation_kernels.cu -o obj/activation_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "./src/activation_kernels.cu(263): warning: variable \"MISH_THRESHOLD\" was declared but never referenced\n",
            "\n",
            "./src/activation_kernels.cu(263): warning: variable \"MISH_THRESHOLD\" was declared but never referenced\n",
            "\n",
            "./src/activation_kernels.cu(263): warning: variable \"MISH_THRESHOLD\" was declared but never referenced\n",
            "\n",
            "./src/activation_kernels.cu(263): warning: variable \"MISH_THRESHOLD\" was declared but never referenced\n",
            "\n",
            "./src/activation_kernels.cu(263): warning: variable \"MISH_THRESHOLD\" was declared but never referenced\n",
            "\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/im2col_kernels.cu -o obj/im2col_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "./src/im2col_kernels.cu(1354): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1361): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1364): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1389): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1354): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1361): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1364): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1389): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1354): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1361): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1364): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1389): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1354): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1361): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1364): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1389): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1354): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1361): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1364): warning: unrecognized #pragma in device code\n",
            "\n",
            "./src/im2col_kernels.cu(1389): warning: unrecognized #pragma in device code\n",
            "\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/col2im_kernels.cu -o obj/col2im_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/blas_kernels.cu -o obj/blas_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "./src/blas_kernels.cu(1086): warning: variable \"out_index\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1130): warning: variable \"step\" was set but never used\n",
            "\n",
            "./src/blas_kernels.cu(1736): warning: variable \"stage_id\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1086): warning: variable \"out_index\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1130): warning: variable \"step\" was set but never used\n",
            "\n",
            "./src/blas_kernels.cu(1736): warning: variable \"stage_id\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1086): warning: variable \"out_index\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1130): warning: variable \"step\" was set but never used\n",
            "\n",
            "./src/blas_kernels.cu(1736): warning: variable \"stage_id\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1086): warning: variable \"out_index\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1130): warning: variable \"step\" was set but never used\n",
            "\n",
            "./src/blas_kernels.cu(1736): warning: variable \"stage_id\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1086): warning: variable \"out_index\" was declared but never referenced\n",
            "\n",
            "./src/blas_kernels.cu(1130): warning: variable \"step\" was set but never used\n",
            "\n",
            "./src/blas_kernels.cu(1736): warning: variable \"stage_id\" was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[K./src/blas_kernels.cu:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid backward_shortcut_multilayer_gpu(int, int, int, int*, float**, float*, float*, float*, float*, int, float*, float**, WEIGHTS_NORMALIZATION_T)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas_kernels.cu:1130:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kstep\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "     \u001b[01;35m\u001b[Kint \u001b[m\u001b[Kstep = 0;\n",
            "     \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/crop_layer_kernels.cu -o obj/crop_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/dropout_layer_kernels.cu -o obj/dropout_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/maxpool_layer_kernels.cu -o obj/maxpool_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/network_kernels.cu -o obj/network_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "./src/network_kernels.cu(379): warning: variable \"l\" was declared but never referenced\n",
            "\n",
            "./src/network_kernels.cu(379): warning: variable \"l\" was declared but never referenced\n",
            "\n",
            "./src/network_kernels.cu(379): warning: variable \"l\" was declared but never referenced\n",
            "\n",
            "./src/network_kernels.cu(379): warning: variable \"l\" was declared but never referenced\n",
            "\n",
            "./src/network_kernels.cu(379): warning: variable \"l\" was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[K./src/network_kernels.cu:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfloat train_network_datum_gpu(network, float*, float*)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/network_kernels.cu:379:7:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kl\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "       \u001b[01;35m\u001b[K \u001b[m\u001b[K layer l = net.layers[net.n - 1];\n",
            "       \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC\" -c ./src/avgpool_layer_kernels.cu -o obj/avgpool_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'compute_50', 'sm_35', 'sm_37' and 'sm_50' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC obj/image_opencv.o obj/http_stream.o obj/gemm.o obj/utils.o obj/dark_cuda.o obj/convolutional_layer.o obj/list.o obj/image.o obj/activations.o obj/im2col.o obj/col2im.o obj/blas.o obj/crop_layer.o obj/dropout_layer.o obj/maxpool_layer.o obj/softmax_layer.o obj/data.o obj/matrix.o obj/network.o obj/connected_layer.o obj/cost_layer.o obj/parser.o obj/option_list.o obj/darknet.o obj/detection_layer.o obj/captcha.o obj/route_layer.o obj/writing.o obj/box.o obj/nightmare.o obj/normalization_layer.o obj/avgpool_layer.o obj/coco.o obj/dice.o obj/yolo.o obj/detector.o obj/layer.o obj/compare.o obj/classifier.o obj/local_layer.o obj/swag.o obj/shortcut_layer.o obj/representation_layer.o obj/activation_layer.o obj/rnn_layer.o obj/gru_layer.o obj/rnn.o obj/rnn_vid.o obj/crnn_layer.o obj/demo.o obj/tag.o obj/cifar.o obj/go.o obj/batchnorm_layer.o obj/art.o obj/region_layer.o obj/reorg_layer.o obj/reorg_old_layer.o obj/super.o obj/voxel.o obj/tree.o obj/yolo_layer.o obj/gaussian_yolo_layer.o obj/upsample_layer.o obj/lstm_layer.o obj/conv_lstm_layer.o obj/scale_channels_layer.o obj/sam_layer.o obj/convolutional_kernels.o obj/activation_kernels.o obj/im2col_kernels.o obj/col2im_kernels.o obj/blas_kernels.o obj/crop_layer_kernels.o obj/dropout_layer_kernels.o obj/maxpool_layer_kernels.o obj/network_kernels.o obj/avgpool_layer_kernels.o -o darknet -lm -pthread `pkg-config --libs opencv4 2> /dev/null || pkg-config --libs opencv` -L/usr/local/cuda/lib64 -lcuda -lcudart -lcublas -lcurand -L/usr/local/cudnn/lib64 -lcudnn -lstdc++\n",
            "g++ -std=c++11 -shared -std=c++11 -fvisibility=hidden -DLIB_EXPORTS -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC ./obj/image_opencv.o ./obj/http_stream.o ./obj/gemm.o ./obj/utils.o ./obj/dark_cuda.o ./obj/convolutional_layer.o ./obj/list.o ./obj/image.o ./obj/activations.o ./obj/im2col.o ./obj/col2im.o ./obj/blas.o ./obj/crop_layer.o ./obj/dropout_layer.o ./obj/maxpool_layer.o ./obj/softmax_layer.o ./obj/data.o ./obj/matrix.o ./obj/network.o ./obj/connected_layer.o ./obj/cost_layer.o ./obj/parser.o ./obj/option_list.o ./obj/darknet.o ./obj/detection_layer.o ./obj/captcha.o ./obj/route_layer.o ./obj/writing.o ./obj/box.o ./obj/nightmare.o ./obj/normalization_layer.o ./obj/avgpool_layer.o ./obj/coco.o ./obj/dice.o ./obj/yolo.o ./obj/detector.o ./obj/layer.o ./obj/compare.o ./obj/classifier.o ./obj/local_layer.o ./obj/swag.o ./obj/shortcut_layer.o ./obj/representation_layer.o ./obj/activation_layer.o ./obj/rnn_layer.o ./obj/gru_layer.o ./obj/rnn.o ./obj/rnn_vid.o ./obj/crnn_layer.o ./obj/demo.o ./obj/tag.o ./obj/cifar.o ./obj/go.o ./obj/batchnorm_layer.o ./obj/art.o ./obj/region_layer.o ./obj/reorg_layer.o ./obj/reorg_old_layer.o ./obj/super.o ./obj/voxel.o ./obj/tree.o ./obj/yolo_layer.o ./obj/gaussian_yolo_layer.o ./obj/upsample_layer.o ./obj/lstm_layer.o ./obj/conv_lstm_layer.o ./obj/scale_channels_layer.o ./obj/sam_layer.o ./obj/convolutional_kernels.o ./obj/activation_kernels.o ./obj/im2col_kernels.o ./obj/col2im_kernels.o ./obj/blas_kernels.o ./obj/crop_layer_kernels.o ./obj/dropout_layer_kernels.o ./obj/maxpool_layer_kernels.o ./obj/network_kernels.o ./obj/avgpool_layer_kernels.o src/yolo_v2_class.cpp -o libdarknet.so -lm -pthread `pkg-config --libs opencv4 2> /dev/null || pkg-config --libs opencv` -L/usr/local/cuda/lib64 -lcuda -lcudart -lcublas -lcurand -L/usr/local/cudnn/lib64 -lcudnn -lstdc++\n",
            "In file included from \u001b[01m\u001b[Ksrc/yolo_v2_class.cpp:2:0\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid track_kalman_t::clear_old_states()\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:879:50:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "                 if ((result_vec_pred[state_id].x > img_size.width) ||\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:880:50:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "                     (result_vec_pred[state_id].y > img_size.height))\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Ktrack_kalman_t::tst_t track_kalman_t::get_state_id(bbox_t, std::vector<bool>&)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:900:30:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (size_t i = 0; \u001b[01;35m\u001b[Ki < max_objects\u001b[m\u001b[K; ++i)\n",
            "                            \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kstd::vector<bbox_t> track_kalman_t::predict()\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:990:30:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (size_t i = 0; \u001b[01;35m\u001b[Ki < max_objects\u001b[m\u001b[K; ++i)\n",
            "                            \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kstd::vector<bbox_t> track_kalman_t::correct(std::vector<bbox_t>)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:1025:30:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (size_t i = 0; \u001b[01;35m\u001b[Ki < max_objects\u001b[m\u001b[K; ++i)\n",
            "                            \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Ksrc/yolo_v2_class.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kstd::vector<bbox_t> Detector::tracking_id(std::vector<bbox_t>, bool, int, int)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Ksrc/yolo_v2_class.cpp:439:40:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         if (\u001b[01;35m\u001b[Kprev_bbox_vec_deque.size() > frames_story\u001b[m\u001b[K) prev_bbox_vec_deque.pop_back();\n",
            "             \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Ksrc/yolo_v2_class.cpp:454:34:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "                     if (\u001b[01;35m\u001b[Kcur_dist < max_dist\u001b[m\u001b[K && (k.track_id == 0 || dist_vec[m] > cur_dist)) {\n",
            "                         \u001b[01;35m\u001b[K~~~~~~~~~^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Ksrc/yolo_v2_class.cpp:478:40:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         if (\u001b[01;35m\u001b[Kprev_bbox_vec_deque.size() > frames_story\u001b[m\u001b[K) prev_bbox_vec_deque.pop_back();\n",
            "             \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -fPIC -o uselib src/yolo_console_dll.cpp -lm -pthread `pkg-config --libs opencv4 2> /dev/null || pkg-config --libs opencv` -L/usr/local/cuda/lib64 -lcuda -lcudart -lcublas -lcurand -L/usr/local/cudnn/lib64 -lcudnn -lstdc++ -L ./ -l:libdarknet.so\n",
            "In file included from \u001b[01m\u001b[Ksrc/yolo_console_dll.cpp:23:0\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid track_kalman_t::clear_old_states()\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:879:50:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "                 if ((result_vec_pred[state_id].x > img_size.width) ||\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:880:50:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "                     (result_vec_pred[state_id].y > img_size.height))\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Ktrack_kalman_t::tst_t track_kalman_t::get_state_id(bbox_t, std::vector<bool>&)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:900:30:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (size_t i = 0; \u001b[01;35m\u001b[Ki < max_objects\u001b[m\u001b[K; ++i)\n",
            "                            \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kstd::vector<bbox_t> track_kalman_t::predict()\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:990:30:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (size_t i = 0; \u001b[01;35m\u001b[Ki < max_objects\u001b[m\u001b[K; ++i)\n",
            "                            \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kstd::vector<bbox_t> track_kalman_t::correct(std::vector<bbox_t>)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Kinclude/yolo_v2_class.hpp:1025:30:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "         for (size_t i = 0; \u001b[01;35m\u001b[Ki < max_objects\u001b[m\u001b[K; ++i)\n",
            "                            \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Ksrc/yolo_console_dll.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid draw_boxes(cv::Mat, std::vector<bbox_t>, std::vector<std::__cxx11::basic_string<char> >, int, int)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[Ksrc/yolo_console_dll.cpp:192:46:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "             int max_width = (\u001b[01;35m\u001b[Ktext_size.width > i.w + 2\u001b[m\u001b[K) ? text_size.width : (i.w + 2);\n",
            "                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Ksrc/yolo_console_dll.cpp:201:62:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between signed and unsigned integer expressions [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "                 int const max_width_3d = (\u001b[01;35m\u001b[Ktext_size_3d.width > i.w + 2\u001b[m\u001b[K) ? text_size_3d.width : (i.w + 2);\n",
            "                                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[Ksrc/yolo_console_dll.cpp:183:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kcolors\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "     int const \u001b[01;35m\u001b[Kcolors\u001b[m\u001b[K[6][3] = { { 1,0,1 },{ 0,0,1 },{ 0,1,1 },{ 0,1,0 },{ 1,1,0 },{ 1,0,0 } };\n",
            "               \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Clean the data and cfg folders first except the labels folder in data which is required\n",
        "\n",
        "%cd data/\n",
        "!find -maxdepth 1 -type f -exec rm -rf {} \\;\n",
        "%cd ..\n",
        "\n",
        "%rm -rf cfg/\n",
        "%mkdir cfg"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CEqMG7CEqMbB",
        "outputId": "2cddee36-6f8a-486d-e19c-80f7de25572c"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/gdrive/MyDrive/yolov4/darknet/data\n",
            "/content/gdrive/MyDrive/yolov4/darknet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip /mydrive/yolov4/obj.zip -d data/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XY_z-oRHrVk6",
        "outputId": "88d7c780-d14e-4db5-a29a-8d95323a36f0"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  /mydrive/yolov4/obj.zip\n",
            "  inflating: data/obj/0.jpg          \n",
            "  inflating: data/obj/0.txt          \n",
            "  inflating: data/obj/0-with-mask.jpg  \n",
            "  inflating: data/obj/0-with-mask.txt  \n",
            "  inflating: data/obj/100-with-mask.jpg  \n",
            "  inflating: data/obj/100-with-mask.txt  \n",
            "  inflating: data/obj/101-with-mask.jpg  \n",
            "  inflating: data/obj/101-with-mask.txt  \n",
            "  inflating: data/obj/103-with-mask.jpg  \n",
            "  inflating: data/obj/103-with-mask.txt  \n",
            "  inflating: data/obj/104-with-mask.jpg  \n",
            "  inflating: data/obj/104-with-mask.txt  \n",
            "  inflating: data/obj/105-with-mask.jpg  \n",
            "  inflating: data/obj/105-with-mask.txt  \n",
            "  inflating: data/obj/106-with-mask.jpg  \n",
            "  inflating: data/obj/106-with-mask.txt  \n",
            "  inflating: data/obj/107-with-mask.jpg  \n",
            "  inflating: data/obj/107-with-mask.txt  \n",
            "  inflating: data/obj/108-with-mask.jpg  \n",
            "  inflating: data/obj/108-with-mask.txt  \n",
            "  inflating: data/obj/109-with-mask.jpg  \n",
            "  inflating: data/obj/109-with-mask.txt  \n",
            "  inflating: data/obj/10-with-mask.jpg  \n",
            "  inflating: data/obj/10-with-mask.txt  \n",
            "  inflating: data/obj/110-with-mask.jpg  \n",
            "  inflating: data/obj/110-with-mask.txt  \n",
            "  inflating: data/obj/111-with-mask.jpg  \n",
            "  inflating: data/obj/111-with-mask.txt  \n",
            "  inflating: data/obj/112-with-mask.jpg  \n",
            "  inflating: data/obj/112-with-mask.txt  \n",
            "  inflating: data/obj/113-with-mask.jpg  \n",
            "  inflating: data/obj/113-with-mask.txt  \n",
            "  inflating: data/obj/114-with-mask.jpg  \n",
            "  inflating: data/obj/114-with-mask.txt  \n",
            "  inflating: data/obj/115-with-mask.jpg  \n",
            "  inflating: data/obj/115-with-mask.txt  \n",
            "  inflating: data/obj/116-with-mask.jpg  \n",
            "  inflating: data/obj/116-with-mask.txt  \n",
            "  inflating: data/obj/117-with-mask.jpg  \n",
            "  inflating: data/obj/117-with-mask.txt  \n",
            "  inflating: data/obj/118-with-mask.jpg  \n",
            "  inflating: data/obj/118-with-mask.txt  \n",
            "  inflating: data/obj/119-with-mask.jpg  \n",
            "  inflating: data/obj/119-with-mask.txt  \n",
            "  inflating: data/obj/11-with-mask.jpg  \n",
            "  inflating: data/obj/11-with-mask.txt  \n",
            "  inflating: data/obj/120-with-mask.jpg  \n",
            "  inflating: data/obj/120-with-mask.txt  \n",
            "  inflating: data/obj/121-with-mask.jpg  \n",
            "  inflating: data/obj/121-with-mask.txt  \n",
            "  inflating: data/obj/122-with-mask.jpg  \n",
            "  inflating: data/obj/122-with-mask.txt  \n",
            "  inflating: data/obj/123-with-mask.jpg  \n",
            "  inflating: data/obj/123-with-mask.txt  \n",
            "  inflating: data/obj/124-with-mask.jpg  \n",
            "  inflating: data/obj/124-with-mask.txt  \n",
            "  inflating: data/obj/125-with-mask.jpg  \n",
            "  inflating: data/obj/125-with-mask.txt  \n",
            "  inflating: data/obj/126-with-mask.jpg  \n",
            "  inflating: data/obj/126-with-mask.txt  \n",
            "  inflating: data/obj/127-with-mask.jpg  \n",
            "  inflating: data/obj/127-with-mask.txt  \n",
            "  inflating: data/obj/128-with-mask.jpg  \n",
            "  inflating: data/obj/128-with-mask.txt  \n",
            "  inflating: data/obj/129-with-mask.jpg  \n",
            "  inflating: data/obj/129-with-mask.txt  \n",
            "  inflating: data/obj/12-with-mask.jpg  \n",
            "  inflating: data/obj/12-with-mask.txt  \n",
            "  inflating: data/obj/131-with-mask.jpg  \n",
            "  inflating: data/obj/131-with-mask.txt  \n",
            "  inflating: data/obj/132.jpg        \n",
            "  inflating: data/obj/132.txt        \n",
            "  inflating: data/obj/132-with-mask.jpg  \n",
            "  inflating: data/obj/132-with-mask.txt  \n",
            "  inflating: data/obj/133-with-mask.jpg  \n",
            "  inflating: data/obj/133-with-mask.txt  \n",
            "  inflating: data/obj/134.jpg        \n",
            "  inflating: data/obj/134.txt        \n",
            "  inflating: data/obj/134-with-mask.jpg  \n",
            "  inflating: data/obj/134-with-mask.txt  \n",
            "  inflating: data/obj/135-with-mask.jpg  \n",
            "  inflating: data/obj/135-with-mask.txt  \n",
            "  inflating: data/obj/136-with-mask.jpg  \n",
            "  inflating: data/obj/136-with-mask.txt  \n",
            "  inflating: data/obj/137.jpg        \n",
            "  inflating: data/obj/137.txt        \n",
            "  inflating: data/obj/137-with-mask.jpg  \n",
            "  inflating: data/obj/137-with-mask.txt  \n",
            "  inflating: data/obj/138.jpg        \n",
            "  inflating: data/obj/138.txt        \n",
            "  inflating: data/obj/138-with-mask.jpg  \n",
            "  inflating: data/obj/138-with-mask.txt  \n",
            "  inflating: data/obj/139-with-mask.jpg  \n",
            "  inflating: data/obj/139-with-mask.txt  \n",
            "  inflating: data/obj/13-with-mask.jpg  \n",
            "  inflating: data/obj/13-with-mask.txt  \n",
            "  inflating: data/obj/140-with-mask.jpg  \n",
            "  inflating: data/obj/140-with-mask.txt  \n",
            "  inflating: data/obj/141-with-mask.jpg  \n",
            "  inflating: data/obj/141-with-mask.txt  \n",
            "  inflating: data/obj/144-with-mask.jpg  \n",
            "  inflating: data/obj/144-with-mask.txt  \n",
            "  inflating: data/obj/146-with-mask.jpg  \n",
            "  inflating: data/obj/146-with-mask.txt  \n",
            "  inflating: data/obj/147-with-mask.jpg  \n",
            "  inflating: data/obj/147-with-mask.txt  \n",
            "  inflating: data/obj/148.jpg        \n",
            "  inflating: data/obj/148.txt        \n",
            "  inflating: data/obj/148-with-mask.jpg  \n",
            "  inflating: data/obj/148-with-mask.txt  \n",
            "  inflating: data/obj/149.jpg        \n",
            "  inflating: data/obj/149.txt        \n",
            "  inflating: data/obj/14-with-mask.jpg  \n",
            "  inflating: data/obj/14-with-mask.txt  \n",
            "  inflating: data/obj/150-with-mask.jpg  \n",
            "  inflating: data/obj/150-with-mask.txt  \n",
            "  inflating: data/obj/151.jpg        \n",
            "  inflating: data/obj/151.txt        \n",
            "  inflating: data/obj/151-with-mask.jpg  \n",
            "  inflating: data/obj/151-with-mask.txt  \n",
            "  inflating: data/obj/152-with-mask.jpg  \n",
            "  inflating: data/obj/152-with-mask.txt  \n",
            "  inflating: data/obj/153-with-mask.jpg  \n",
            "  inflating: data/obj/153-with-mask.txt  \n",
            "  inflating: data/obj/154-with-mask.jpg  \n",
            "  inflating: data/obj/154-with-mask.txt  \n",
            "  inflating: data/obj/155-with-mask.jpg  \n",
            "  inflating: data/obj/155-with-mask.txt  \n",
            "  inflating: data/obj/156-with-mask.jpg  \n",
            "  inflating: data/obj/156-with-mask.txt  \n",
            "  inflating: data/obj/157-with-mask.jpg  \n",
            "  inflating: data/obj/157-with-mask.txt  \n",
            "  inflating: data/obj/158-with-mask.jpg  \n",
            "  inflating: data/obj/158-with-mask.txt  \n",
            "  inflating: data/obj/159.jpg        \n",
            "  inflating: data/obj/159.txt        \n",
            "  inflating: data/obj/159-with-mask.jpg  \n",
            "  inflating: data/obj/159-with-mask.txt  \n",
            "  inflating: data/obj/160-with-mask.jpg  \n",
            "  inflating: data/obj/160-with-mask.txt  \n",
            "  inflating: data/obj/161-with-mask.jpg  \n",
            "  inflating: data/obj/161-with-mask.txt  \n",
            "  inflating: data/obj/162-with-mask.jpg  \n",
            "  inflating: data/obj/162-with-mask.txt  \n",
            "  inflating: data/obj/163-with-mask.jpg  \n",
            "  inflating: data/obj/163-with-mask.txt  \n",
            "  inflating: data/obj/165-with-mask.jpg  \n",
            "  inflating: data/obj/165-with-mask.txt  \n",
            "  inflating: data/obj/167-with-mask.jpg  \n",
            "  inflating: data/obj/167-with-mask.txt  \n",
            "  inflating: data/obj/168-with-mask.jpg  \n",
            "  inflating: data/obj/168-with-mask.txt  \n",
            "  inflating: data/obj/169.jpg        \n",
            "  inflating: data/obj/169.txt        \n",
            "  inflating: data/obj/169-with-mask.jpg  \n",
            "  inflating: data/obj/169-with-mask.txt  \n",
            "  inflating: data/obj/170-with-mask.jpg  \n",
            "  inflating: data/obj/170-with-mask.txt  \n",
            "  inflating: data/obj/171-with-mask.jpg  \n",
            "  inflating: data/obj/171-with-mask.txt  \n",
            "  inflating: data/obj/172-with-mask.jpg  \n",
            "  inflating: data/obj/172-with-mask.txt  \n",
            "  inflating: data/obj/173-with-mask.jpg  \n",
            "  inflating: data/obj/173-with-mask.txt  \n",
            "  inflating: data/obj/174-with-mask.jpg  \n",
            "  inflating: data/obj/174-with-mask.txt  \n",
            "  inflating: data/obj/175-with-mask.jpg  \n",
            "  inflating: data/obj/175-with-mask.txt  \n",
            "  inflating: data/obj/176-with-mask.jpg  \n",
            "  inflating: data/obj/176-with-mask.txt  \n",
            "  inflating: data/obj/177-with-mask.jpg  \n",
            "  inflating: data/obj/177-with-mask.txt  \n",
            "  inflating: data/obj/178.jpg        \n",
            "  inflating: data/obj/178.txt        \n",
            "  inflating: data/obj/179-with-mask.jpg  \n",
            "  inflating: data/obj/179-with-mask.txt  \n",
            "  inflating: data/obj/180-with-mask.jpg  \n",
            "  inflating: data/obj/180-with-mask.txt  \n",
            "  inflating: data/obj/181-with-mask.jpg  \n",
            "  inflating: data/obj/181-with-mask.txt  \n",
            "  inflating: data/obj/182-with-mask.jpg  \n",
            "  inflating: data/obj/182-with-mask.txt  \n",
            "  inflating: data/obj/183-with-mask.jpg  \n",
            "  inflating: data/obj/183-with-mask.txt  \n",
            "  inflating: data/obj/184-with-mask.jpg  \n",
            "  inflating: data/obj/184-with-mask.txt  \n",
            "  inflating: data/obj/185-with-mask.jpg  \n",
            "  inflating: data/obj/185-with-mask.txt  \n",
            "  inflating: data/obj/186-with-mask.jpg  \n",
            "  inflating: data/obj/186-with-mask.txt  \n",
            "  inflating: data/obj/187-with-mask.jpg  \n",
            "  inflating: data/obj/187-with-mask.txt  \n",
            "  inflating: data/obj/189-with-mask.jpg  \n",
            "  inflating: data/obj/189-with-mask.txt  \n",
            "  inflating: data/obj/190-with-mask.jpg  \n",
            "  inflating: data/obj/190-with-mask.txt  \n",
            "  inflating: data/obj/192-with-mask.jpg  \n",
            "  inflating: data/obj/192-with-mask.txt  \n",
            "  inflating: data/obj/193-with-mask.jpg  \n",
            "  inflating: data/obj/193-with-mask.txt  \n",
            "  inflating: data/obj/194-with-mask.jpg  \n",
            "  inflating: data/obj/194-with-mask.txt  \n",
            "  inflating: data/obj/195.jpg        \n",
            "  inflating: data/obj/195.txt        \n",
            "  inflating: data/obj/195-with-mask.jpg  \n",
            "  inflating: data/obj/195-with-mask.txt  \n",
            "  inflating: data/obj/196-with-mask.jpg  \n",
            "  inflating: data/obj/196-with-mask.txt  \n",
            "  inflating: data/obj/197-with-mask.jpg  \n",
            "  inflating: data/obj/197-with-mask.txt  \n",
            "  inflating: data/obj/198-with-mask.jpg  \n",
            "  inflating: data/obj/198-with-mask.txt  \n",
            "  inflating: data/obj/1-with-mask.jpg  \n",
            "  inflating: data/obj/1-with-mask.txt  \n",
            "  inflating: data/obj/200-with-mask.jpg  \n",
            "  inflating: data/obj/200-with-mask.txt  \n",
            "  inflating: data/obj/201.jpg        \n",
            "  inflating: data/obj/201.txt        \n",
            "  inflating: data/obj/201-with-mask.jpg  \n",
            "  inflating: data/obj/201-with-mask.txt  \n",
            "  inflating: data/obj/202-with-mask.jpg  \n",
            "  inflating: data/obj/202-with-mask.txt  \n",
            "  inflating: data/obj/203-with-mask.jpg  \n",
            "  inflating: data/obj/203-with-mask.txt  \n",
            "  inflating: data/obj/204-with-mask.jpg  \n",
            "  inflating: data/obj/204-with-mask.txt  \n",
            "  inflating: data/obj/205-with-mask.jpg  \n",
            "  inflating: data/obj/205-with-mask.txt  \n",
            "  inflating: data/obj/206-with-mask.jpg  \n",
            "  inflating: data/obj/206-with-mask.txt  \n",
            "  inflating: data/obj/207-with-mask.jpg  \n",
            "  inflating: data/obj/207-with-mask.txt  \n",
            "  inflating: data/obj/209-with-mask.jpg  \n",
            "  inflating: data/obj/209-with-mask.txt  \n",
            "  inflating: data/obj/211-with-mask.jpg  \n",
            "  inflating: data/obj/211-with-mask.txt  \n",
            "  inflating: data/obj/212-with-mask.jpg  \n",
            "  inflating: data/obj/212-with-mask.txt  \n",
            "  inflating: data/obj/214-with-mask.jpg  \n",
            "  inflating: data/obj/214-with-mask.txt  \n",
            "  inflating: data/obj/215-with-mask.jpg  \n",
            "  inflating: data/obj/215-with-mask.txt  \n",
            "  inflating: data/obj/217-with-mask.jpg  \n",
            "  inflating: data/obj/217-with-mask.txt  \n",
            "  inflating: data/obj/218-with-mask.jpg  \n",
            "  inflating: data/obj/218-with-mask.txt  \n",
            "  inflating: data/obj/219-with-mask.jpg  \n",
            "  inflating: data/obj/219-with-mask.txt  \n",
            "  inflating: data/obj/221-with-mask.jpg  \n",
            "  inflating: data/obj/221-with-mask.txt  \n",
            "  inflating: data/obj/222-with-mask.jpg  \n",
            "  inflating: data/obj/222-with-mask.txt  \n",
            "  inflating: data/obj/223-with-mask.jpg  \n",
            "  inflating: data/obj/223-with-mask.txt  \n",
            "  inflating: data/obj/224-with-mask.jpg  \n",
            "  inflating: data/obj/224-with-mask.txt  \n",
            "  inflating: data/obj/225-with-mask.jpg  \n",
            "  inflating: data/obj/225-with-mask.txt  \n",
            "  inflating: data/obj/227-with-mask.jpg  \n",
            "  inflating: data/obj/227-with-mask.txt  \n",
            "  inflating: data/obj/228-with-mask.jpg  \n",
            "  inflating: data/obj/228-with-mask.txt  \n",
            "  inflating: data/obj/229-with-mask.jpg  \n",
            "  inflating: data/obj/229-with-mask.txt  \n",
            "  inflating: data/obj/231-with-mask.jpg  \n",
            "  inflating: data/obj/231-with-mask.txt  \n",
            "  inflating: data/obj/232-with-mask.jpg  \n",
            "  inflating: data/obj/232-with-mask.txt  \n",
            "  inflating: data/obj/233-with-mask.jpg  \n",
            "  inflating: data/obj/233-with-mask.txt  \n",
            "  inflating: data/obj/234-with-mask.jpg  \n",
            "  inflating: data/obj/234-with-mask.txt  \n",
            "  inflating: data/obj/235-with-mask.jpg  \n",
            "  inflating: data/obj/235-with-mask.txt  \n",
            "  inflating: data/obj/236-with-mask.jpg  \n",
            "  inflating: data/obj/236-with-mask.txt  \n",
            "  inflating: data/obj/237-with-mask.jpg  \n",
            "  inflating: data/obj/237-with-mask.txt  \n",
            "  inflating: data/obj/238-with-mask.jpg  \n",
            "  inflating: data/obj/238-with-mask.txt  \n",
            "  inflating: data/obj/239-with-mask.jpg  \n",
            "  inflating: data/obj/239-with-mask.txt  \n",
            "  inflating: data/obj/240-with-mask.jpg  \n",
            "  inflating: data/obj/240-with-mask.txt  \n",
            "  inflating: data/obj/241-with-mask.jpg  \n",
            "  inflating: data/obj/241-with-mask.txt  \n",
            "  inflating: data/obj/242-with-mask.jpg  \n",
            "  inflating: data/obj/242-with-mask.txt  \n",
            "  inflating: data/obj/243-with-mask.jpg  \n",
            "  inflating: data/obj/243-with-mask.txt  \n",
            "  inflating: data/obj/244-with-mask.jpg  \n",
            "  inflating: data/obj/244-with-mask.txt  \n",
            "  inflating: data/obj/245-with-mask.jpg  \n",
            "  inflating: data/obj/245-with-mask.txt  \n",
            "  inflating: data/obj/246-with-mask.jpg  \n",
            "  inflating: data/obj/246-with-mask.txt  \n",
            "  inflating: data/obj/251-with-mask.jpg  \n",
            "  inflating: data/obj/251-with-mask.txt  \n",
            "  inflating: data/obj/252-with-mask.jpg  \n",
            "  inflating: data/obj/252-with-mask.txt  \n",
            "  inflating: data/obj/253-with-mask.jpg  \n",
            "  inflating: data/obj/253-with-mask.txt  \n",
            "  inflating: data/obj/254-with-mask.jpg  \n",
            "  inflating: data/obj/254-with-mask.txt  \n",
            "  inflating: data/obj/256-with-mask.jpg  \n",
            "  inflating: data/obj/256-with-mask.txt  \n",
            "  inflating: data/obj/257-with-mask.jpg  \n",
            "  inflating: data/obj/257-with-mask.txt  \n",
            "  inflating: data/obj/259-with-mask.jpg  \n",
            "  inflating: data/obj/259-with-mask.txt  \n",
            "  inflating: data/obj/260-with-mask.jpg  \n",
            "  inflating: data/obj/260-with-mask.txt  \n",
            "  inflating: data/obj/261-with-mask.jpg  \n",
            "  inflating: data/obj/261-with-mask.txt  \n",
            "  inflating: data/obj/262-with-mask.jpg  \n",
            "  inflating: data/obj/262-with-mask.txt  \n",
            "  inflating: data/obj/263-with-mask.jpg  \n",
            "  inflating: data/obj/263-with-mask.txt  \n",
            "  inflating: data/obj/267-with-mask.jpg  \n",
            "  inflating: data/obj/267-with-mask.txt  \n",
            "  inflating: data/obj/268-with-mask.jpg  \n",
            "  inflating: data/obj/268-with-mask.txt  \n",
            "  inflating: data/obj/269-with-mask.jpg  \n",
            "  inflating: data/obj/269-with-mask.txt  \n",
            "  inflating: data/obj/26-with-mask.jpg  \n",
            "  inflating: data/obj/26-with-mask.txt  \n",
            "  inflating: data/obj/270-with-mask.jpg  \n",
            "  inflating: data/obj/270-with-mask.txt  \n",
            "  inflating: data/obj/272-with-mask.jpg  \n",
            "  inflating: data/obj/272-with-mask.txt  \n",
            "  inflating: data/obj/273-with-mask.jpg  \n",
            "  inflating: data/obj/273-with-mask.txt  \n",
            "  inflating: data/obj/274-with-mask.jpg  \n",
            "  inflating: data/obj/274-with-mask.txt  \n",
            "  inflating: data/obj/275-with-mask.jpg  \n",
            "  inflating: data/obj/275-with-mask.txt  \n",
            "  inflating: data/obj/276-with-mask.jpg  \n",
            "  inflating: data/obj/276-with-mask.txt  \n",
            "  inflating: data/obj/277-with-mask.jpg  \n",
            "  inflating: data/obj/277-with-mask.txt  \n",
            "  inflating: data/obj/278-with-mask.jpg  \n",
            "  inflating: data/obj/278-with-mask.txt  \n",
            "  inflating: data/obj/279-with-mask.jpg  \n",
            "  inflating: data/obj/279-with-mask.txt  \n",
            "  inflating: data/obj/27-with-mask.jpg  \n",
            "  inflating: data/obj/27-with-mask.txt  \n",
            "  inflating: data/obj/281-with-mask.jpg  \n",
            "  inflating: data/obj/281-with-mask.txt  \n",
            "  inflating: data/obj/282-with-mask.jpg  \n",
            "  inflating: data/obj/282-with-mask.txt  \n",
            "  inflating: data/obj/283-with-mask.jpg  \n",
            "  inflating: data/obj/283-with-mask.txt  \n",
            "  inflating: data/obj/284-with-mask.jpg  \n",
            "  inflating: data/obj/284-with-mask.txt  \n",
            "  inflating: data/obj/285-with-mask.jpg  \n",
            "  inflating: data/obj/285-with-mask.txt  \n",
            "  inflating: data/obj/286-with-mask.jpg  \n",
            "  inflating: data/obj/286-with-mask.txt  \n",
            "  inflating: data/obj/287-with-mask.jpg  \n",
            "  inflating: data/obj/287-with-mask.txt  \n",
            "  inflating: data/obj/288-with-mask.jpg  \n",
            "  inflating: data/obj/288-with-mask.txt  \n",
            "  inflating: data/obj/289-with-mask.jpg  \n",
            "  inflating: data/obj/289-with-mask.txt  \n",
            "  inflating: data/obj/290-with-mask.jpg  \n",
            "  inflating: data/obj/290-with-mask.txt  \n",
            "  inflating: data/obj/291-with-mask.jpg  \n",
            "  inflating: data/obj/291-with-mask.txt  \n",
            "  inflating: data/obj/293-with-mask.jpg  \n",
            "  inflating: data/obj/293-with-mask.txt  \n",
            "  inflating: data/obj/294-with-mask.jpg  \n",
            "  inflating: data/obj/294-with-mask.txt  \n",
            "  inflating: data/obj/295-with-mask.jpg  \n",
            "  inflating: data/obj/295-with-mask.txt  \n",
            "  inflating: data/obj/296-with-mask.jpg  \n",
            "  inflating: data/obj/296-with-mask.txt  \n",
            "  inflating: data/obj/298-with-mask.jpg  \n",
            "  inflating: data/obj/298-with-mask.txt  \n",
            "  inflating: data/obj/299-with-mask.jpg  \n",
            "  inflating: data/obj/299-with-mask.txt  \n",
            "  inflating: data/obj/29-with-mask.jpg  \n",
            "  inflating: data/obj/29-with-mask.txt  \n",
            "  inflating: data/obj/2-with-mask.jpg  \n",
            "  inflating: data/obj/2-with-mask.txt  \n",
            "  inflating: data/obj/301-with-mask.jpg  \n",
            "  inflating: data/obj/301-with-mask.txt  \n",
            "  inflating: data/obj/302-with-mask.jpg  \n",
            "  inflating: data/obj/302-with-mask.txt  \n",
            "  inflating: data/obj/303-with-mask.jpg  \n",
            "  inflating: data/obj/303-with-mask.txt  \n",
            "  inflating: data/obj/304-with-mask.jpg  \n",
            "  inflating: data/obj/304-with-mask.txt  \n",
            "  inflating: data/obj/305-with-mask.jpg  \n",
            "  inflating: data/obj/305-with-mask.txt  \n",
            "  inflating: data/obj/306-with-mask.jpg  \n",
            "  inflating: data/obj/306-with-mask.txt  \n",
            "  inflating: data/obj/307-with-mask.jpg  \n",
            "  inflating: data/obj/307-with-mask.txt  \n",
            "  inflating: data/obj/308-with-mask.jpg  \n",
            "  inflating: data/obj/308-with-mask.txt  \n",
            "  inflating: data/obj/309-with-mask.jpg  \n",
            "  inflating: data/obj/309-with-mask.txt  \n",
            "  inflating: data/obj/30-with-mask.jpg  \n",
            "  inflating: data/obj/30-with-mask.txt  \n",
            "  inflating: data/obj/311-with-mask.jpg  \n",
            "  inflating: data/obj/311-with-mask.txt  \n",
            "  inflating: data/obj/313-with-mask.jpg  \n",
            "  inflating: data/obj/313-with-mask.txt  \n",
            "  inflating: data/obj/314-with-mask.jpg  \n",
            "  inflating: data/obj/314-with-mask.txt  \n",
            "  inflating: data/obj/315-with-mask.jpg  \n",
            "  inflating: data/obj/315-with-mask.txt  \n",
            "  inflating: data/obj/316-with-mask.jpg  \n",
            "  inflating: data/obj/316-with-mask.txt  \n",
            "  inflating: data/obj/317-with-mask.jpg  \n",
            "  inflating: data/obj/317-with-mask.txt  \n",
            "  inflating: data/obj/318-with-mask.jpg  \n",
            "  inflating: data/obj/318-with-mask.txt  \n",
            "  inflating: data/obj/319-with-mask.jpg  \n",
            "  inflating: data/obj/319-with-mask.txt  \n",
            "  inflating: data/obj/31-with-mask.jpg  \n",
            "  inflating: data/obj/31-with-mask.txt  \n",
            "  inflating: data/obj/322-with-mask.jpg  \n",
            "  inflating: data/obj/322-with-mask.txt  \n",
            "  inflating: data/obj/323-with-mask.jpg  \n",
            "  inflating: data/obj/323-with-mask.txt  \n",
            "  inflating: data/obj/324-with-mask.jpg  \n",
            "  inflating: data/obj/324-with-mask.txt  \n",
            "  inflating: data/obj/325-with-mask.jpg  \n",
            "  inflating: data/obj/325-with-mask.txt  \n",
            "  inflating: data/obj/326-with-mask.jpg  \n",
            "  inflating: data/obj/326-with-mask.txt  \n",
            "  inflating: data/obj/327-with-mask.jpg  \n",
            "  inflating: data/obj/327-with-mask.txt  \n",
            "  inflating: data/obj/32-with-mask.jpg  \n",
            "  inflating: data/obj/32-with-mask.txt  \n",
            "  inflating: data/obj/330-with-mask.jpg  \n",
            "  inflating: data/obj/330-with-mask.txt  \n",
            "  inflating: data/obj/331-with-mask.jpg  \n",
            "  inflating: data/obj/331-with-mask.txt  \n",
            "  inflating: data/obj/332.jpg        \n",
            "  inflating: data/obj/332.txt        \n",
            "  inflating: data/obj/332-with-mask.jpg  \n",
            "  inflating: data/obj/332-with-mask.txt  \n",
            "  inflating: data/obj/333-with-mask.jpg  \n",
            "  inflating: data/obj/333-with-mask.txt  \n",
            "  inflating: data/obj/334-with-mask.jpg  \n",
            "  inflating: data/obj/334-with-mask.txt  \n",
            "  inflating: data/obj/335-with-mask.jpg  \n",
            "  inflating: data/obj/335-with-mask.txt  \n",
            "  inflating: data/obj/336-with-mask.jpg  \n",
            "  inflating: data/obj/336-with-mask.txt  \n",
            "  inflating: data/obj/338-with-mask.jpg  \n",
            "  inflating: data/obj/338-with-mask.txt  \n",
            "  inflating: data/obj/339-with-mask.jpg  \n",
            "  inflating: data/obj/339-with-mask.txt  \n",
            "  inflating: data/obj/33-with-mask.jpg  \n",
            "  inflating: data/obj/33-with-mask.txt  \n",
            "  inflating: data/obj/340-with-mask.jpg  \n",
            "  inflating: data/obj/340-with-mask.txt  \n",
            "  inflating: data/obj/342-with-mask.jpg  \n",
            "  inflating: data/obj/342-with-mask.txt  \n",
            "  inflating: data/obj/343-with-mask.jpg  \n",
            "  inflating: data/obj/343-with-mask.txt  \n",
            "  inflating: data/obj/344-with-mask.jpg  \n",
            "  inflating: data/obj/344-with-mask.txt  \n",
            "  inflating: data/obj/345-with-mask.jpg  \n",
            "  inflating: data/obj/345-with-mask.txt  \n",
            "  inflating: data/obj/346-with-mask.jpg  \n",
            "  inflating: data/obj/346-with-mask.txt  \n",
            "  inflating: data/obj/347-with-mask.jpg  \n",
            "  inflating: data/obj/347-with-mask.txt  \n",
            "  inflating: data/obj/348-with-mask.jpg  \n",
            "  inflating: data/obj/348-with-mask.txt  \n",
            "  inflating: data/obj/349-with-mask.jpg  \n",
            "  inflating: data/obj/349-with-mask.txt  \n",
            "  inflating: data/obj/34-with-mask.jpg  \n",
            "  inflating: data/obj/34-with-mask.txt  \n",
            "  inflating: data/obj/351-with-mask.jpg  \n",
            "  inflating: data/obj/351-with-mask.txt  \n",
            "  inflating: data/obj/353-with-mask.jpg  \n",
            "  inflating: data/obj/353-with-mask.txt  \n",
            "  inflating: data/obj/355-with-mask.jpg  \n",
            "  inflating: data/obj/355-with-mask.txt  \n",
            "  inflating: data/obj/356-with-mask.jpg  \n",
            "  inflating: data/obj/356-with-mask.txt  \n",
            "  inflating: data/obj/357-with-mask.jpg  \n",
            "  inflating: data/obj/357-with-mask.txt  \n",
            "  inflating: data/obj/358-with-mask.jpg  \n",
            "  inflating: data/obj/358-with-mask.txt  \n",
            "  inflating: data/obj/359-with-mask.jpg  \n",
            "  inflating: data/obj/359-with-mask.txt  \n",
            "  inflating: data/obj/35-with-mask.jpg  \n",
            "  inflating: data/obj/35-with-mask.txt  \n",
            "  inflating: data/obj/362-with-mask.jpg  \n",
            "  inflating: data/obj/362-with-mask.txt  \n",
            "  inflating: data/obj/364-with-mask.jpg  \n",
            "  inflating: data/obj/364-with-mask.txt  \n",
            "  inflating: data/obj/365-with-mask.jpg  \n",
            "  inflating: data/obj/365-with-mask.txt  \n",
            "  inflating: data/obj/366-with-mask.jpg  \n",
            "  inflating: data/obj/366-with-mask.txt  \n",
            "  inflating: data/obj/368-with-mask.jpg  \n",
            "  inflating: data/obj/368-with-mask.txt  \n",
            "  inflating: data/obj/369-with-mask.jpg  \n",
            "  inflating: data/obj/369-with-mask.txt  \n",
            "  inflating: data/obj/36-with-mask.jpg  \n",
            "  inflating: data/obj/36-with-mask.txt  \n",
            "  inflating: data/obj/374-with-mask.jpg  \n",
            "  inflating: data/obj/374-with-mask.txt  \n",
            "  inflating: data/obj/375-with-mask.jpg  \n",
            "  inflating: data/obj/375-with-mask.txt  \n",
            "  inflating: data/obj/376-with-mask.jpg  \n",
            "  inflating: data/obj/376-with-mask.txt  \n",
            "  inflating: data/obj/377-with-mask.jpg  \n",
            "  inflating: data/obj/377-with-mask.txt  \n",
            "  inflating: data/obj/378-with-mask.jpg  \n",
            "  inflating: data/obj/378-with-mask.txt  \n",
            "  inflating: data/obj/379-with-mask.jpg  \n",
            "  inflating: data/obj/379-with-mask.txt  \n",
            "  inflating: data/obj/37-with-mask.jpg  \n",
            "  inflating: data/obj/37-with-mask.txt  \n",
            "  inflating: data/obj/381-with-mask.jpg  \n",
            "  inflating: data/obj/381-with-mask.txt  \n",
            "  inflating: data/obj/382-with-mask.jpg  \n",
            "  inflating: data/obj/382-with-mask.txt  \n",
            "  inflating: data/obj/383-with-mask.jpg  \n",
            "  inflating: data/obj/383-with-mask.txt  \n",
            "  inflating: data/obj/384-with-mask.jpg  \n",
            "  inflating: data/obj/384-with-mask.txt  \n",
            "  inflating: data/obj/385-with-mask.jpg  \n",
            "  inflating: data/obj/385-with-mask.txt  \n",
            "  inflating: data/obj/386-with-mask.jpg  \n",
            "  inflating: data/obj/386-with-mask.txt  \n",
            "  inflating: data/obj/387-with-mask.jpg  \n",
            "  inflating: data/obj/387-with-mask.txt  \n",
            "  inflating: data/obj/38-with-mask.jpg  \n",
            "  inflating: data/obj/38-with-mask.txt  \n",
            "  inflating: data/obj/390-with-mask.jpg  \n",
            "  inflating: data/obj/390-with-mask.txt  \n",
            "  inflating: data/obj/391-with-mask.jpg  \n",
            "  inflating: data/obj/391-with-mask.txt  \n",
            "  inflating: data/obj/392-with-mask.jpg  \n",
            "  inflating: data/obj/392-with-mask.txt  \n",
            "  inflating: data/obj/393-with-mask.jpg  \n",
            "  inflating: data/obj/393-with-mask.txt  \n",
            "  inflating: data/obj/394-with-mask.jpg  \n",
            "  inflating: data/obj/394-with-mask.txt  \n",
            "  inflating: data/obj/395-with-mask.jpg  \n",
            "  inflating: data/obj/395-with-mask.txt  \n",
            "  inflating: data/obj/396-with-mask.jpg  \n",
            "  inflating: data/obj/396-with-mask.txt  \n",
            "  inflating: data/obj/397-with-mask.jpg  \n",
            "  inflating: data/obj/397-with-mask.txt  \n",
            "  inflating: data/obj/398-with-mask.jpg  \n",
            "  inflating: data/obj/398-with-mask.txt  \n",
            "  inflating: data/obj/399-with-mask.jpg  \n",
            "  inflating: data/obj/399-with-mask.txt  \n",
            "  inflating: data/obj/39-with-mask.jpg  \n",
            "  inflating: data/obj/39-with-mask.txt  \n",
            "  inflating: data/obj/3-with-mask.jpg  \n",
            "  inflating: data/obj/3-with-mask.txt  \n",
            "  inflating: data/obj/401-with-mask.jpg  \n",
            "  inflating: data/obj/401-with-mask.txt  \n",
            "  inflating: data/obj/402-with-mask.jpg  \n",
            "  inflating: data/obj/402-with-mask.txt  \n",
            "  inflating: data/obj/404-with-mask.jpg  \n",
            "  inflating: data/obj/404-with-mask.txt  \n",
            "  inflating: data/obj/405-with-mask.jpg  \n",
            "  inflating: data/obj/405-with-mask.txt  \n",
            "  inflating: data/obj/406-with-mask.jpg  \n",
            "  inflating: data/obj/406-with-mask.txt  \n",
            "  inflating: data/obj/407-with-mask.jpg  \n",
            "  inflating: data/obj/407-with-mask.txt  \n",
            "  inflating: data/obj/408-with-mask.jpg  \n",
            "  inflating: data/obj/408-with-mask.txt  \n",
            "  inflating: data/obj/409-with-mask.jpg  \n",
            "  inflating: data/obj/409-with-mask.txt  \n",
            "  inflating: data/obj/40-with-mask.jpg  \n",
            "  inflating: data/obj/40-with-mask.txt  \n",
            "  inflating: data/obj/411-with-mask.jpg  \n",
            "  inflating: data/obj/411-with-mask.txt  \n",
            "  inflating: data/obj/413-with-mask.jpg  \n",
            "  inflating: data/obj/413-with-mask.txt  \n",
            "  inflating: data/obj/414-with-mask.jpg  \n",
            "  inflating: data/obj/414-with-mask.txt  \n",
            "  inflating: data/obj/415-with-mask.jpg  \n",
            "  inflating: data/obj/415-with-mask.txt  \n",
            "  inflating: data/obj/416-with-mask.jpg  \n",
            "  inflating: data/obj/416-with-mask.txt  \n",
            "  inflating: data/obj/417-with-mask.jpg  \n",
            "  inflating: data/obj/417-with-mask.txt  \n",
            "  inflating: data/obj/418-with-mask.jpg  \n",
            "  inflating: data/obj/418-with-mask.txt  \n",
            "  inflating: data/obj/419-with-mask.jpg  \n",
            "  inflating: data/obj/419-with-mask.txt  \n",
            "  inflating: data/obj/41-with-mask.jpg  \n",
            "  inflating: data/obj/41-with-mask.txt  \n",
            "  inflating: data/obj/420-with-mask.jpg  \n",
            "  inflating: data/obj/420-with-mask.txt  \n",
            "  inflating: data/obj/421-with-mask.jpg  \n",
            "  inflating: data/obj/421-with-mask.txt  \n",
            "  inflating: data/obj/422-with-mask.jpg  \n",
            "  inflating: data/obj/422-with-mask.txt  \n",
            "  inflating: data/obj/425-with-mask.jpg  \n",
            "  inflating: data/obj/425-with-mask.txt  \n",
            "  inflating: data/obj/427-with-mask.jpg  \n",
            "  inflating: data/obj/427-with-mask.txt  \n",
            "  inflating: data/obj/429-with-mask.jpg  \n",
            "  inflating: data/obj/429-with-mask.txt  \n",
            "  inflating: data/obj/42-with-mask.jpg  \n",
            "  inflating: data/obj/42-with-mask.txt  \n",
            "  inflating: data/obj/430-with-mask.jpg  \n",
            "  inflating: data/obj/430-with-mask.txt  \n",
            "  inflating: data/obj/431.jpg        \n",
            "  inflating: data/obj/431.txt        \n",
            "  inflating: data/obj/431-with-mask.jpg  \n",
            "  inflating: data/obj/431-with-mask.txt  \n",
            "  inflating: data/obj/432-with-mask.jpg  \n",
            "  inflating: data/obj/432-with-mask.txt  \n",
            "  inflating: data/obj/433-with-mask.jpg  \n",
            "  inflating: data/obj/433-with-mask.txt  \n",
            "  inflating: data/obj/434-with-mask.jpg  \n",
            "  inflating: data/obj/434-with-mask.txt  \n",
            "  inflating: data/obj/435-with-mask.jpg  \n",
            "  inflating: data/obj/435-with-mask.txt  \n",
            "  inflating: data/obj/436-with-mask.jpg  \n",
            "  inflating: data/obj/436-with-mask.txt  \n",
            "  inflating: data/obj/438-with-mask.jpg  \n",
            "  inflating: data/obj/438-with-mask.txt  \n",
            "  inflating: data/obj/439-with-mask.jpg  \n",
            "  inflating: data/obj/439-with-mask.txt  \n",
            "  inflating: data/obj/43-with-mask.jpg  \n",
            "  inflating: data/obj/43-with-mask.txt  \n",
            "  inflating: data/obj/440-with-mask.jpg  \n",
            "  inflating: data/obj/440-with-mask.txt  \n",
            "  inflating: data/obj/441-with-mask.jpg  \n",
            "  inflating: data/obj/441-with-mask.txt  \n",
            "  inflating: data/obj/442-with-mask.jpg  \n",
            "  inflating: data/obj/442-with-mask.txt  \n",
            "  inflating: data/obj/443-with-mask.jpg  \n",
            "  inflating: data/obj/443-with-mask.txt  \n",
            "  inflating: data/obj/444-with-mask.jpg  \n",
            "  inflating: data/obj/444-with-mask.txt  \n",
            "  inflating: data/obj/445-with-mask.jpg  \n",
            "  inflating: data/obj/445-with-mask.txt  \n",
            "  inflating: data/obj/446-with-mask.jpg  \n",
            "  inflating: data/obj/446-with-mask.txt  \n",
            "  inflating: data/obj/447-with-mask.jpg  \n",
            "  inflating: data/obj/447-with-mask.txt  \n",
            "  inflating: data/obj/448-with-mask.jpg  \n",
            "  inflating: data/obj/448-with-mask.txt  \n",
            "  inflating: data/obj/449-with-mask.jpg  \n",
            "  inflating: data/obj/449-with-mask.txt  \n",
            "  inflating: data/obj/450-with-mask.jpg  \n",
            "  inflating: data/obj/450-with-mask.txt  \n",
            "  inflating: data/obj/451-with-mask.jpg  \n",
            "  inflating: data/obj/451-with-mask.txt  \n",
            "  inflating: data/obj/452-with-mask.jpg  \n",
            "  inflating: data/obj/452-with-mask.txt  \n",
            "  inflating: data/obj/453-with-mask.jpg  \n",
            "  inflating: data/obj/453-with-mask.txt  \n",
            "  inflating: data/obj/454-with-mask.jpg  \n",
            "  inflating: data/obj/454-with-mask.txt  \n",
            "  inflating: data/obj/455-with-mask.jpg  \n",
            "  inflating: data/obj/455-with-mask.txt  \n",
            "  inflating: data/obj/456-with-mask.jpg  \n",
            "  inflating: data/obj/456-with-mask.txt  \n",
            "  inflating: data/obj/457-with-mask.jpg  \n",
            "  inflating: data/obj/457-with-mask.txt  \n",
            "  inflating: data/obj/458-with-mask.jpg  \n",
            "  inflating: data/obj/458-with-mask.txt  \n",
            "  inflating: data/obj/459-with-mask.jpg  \n",
            "  inflating: data/obj/459-with-mask.txt  \n",
            "  inflating: data/obj/45-with-mask.jpg  \n",
            "  inflating: data/obj/45-with-mask.txt  \n",
            "  inflating: data/obj/460-with-mask.jpg  \n",
            "  inflating: data/obj/460-with-mask.txt  \n",
            "  inflating: data/obj/461-with-mask.jpg  \n",
            "  inflating: data/obj/461-with-mask.txt  \n",
            "  inflating: data/obj/462-with-mask.jpg  \n",
            "  inflating: data/obj/462-with-mask.txt  \n",
            "  inflating: data/obj/463-with-mask.jpg  \n",
            "  inflating: data/obj/463-with-mask.txt  \n",
            "  inflating: data/obj/464-with-mask.jpg  \n",
            "  inflating: data/obj/464-with-mask.txt  \n",
            "  inflating: data/obj/466-with-mask.jpg  \n",
            "  inflating: data/obj/466-with-mask.txt  \n",
            "  inflating: data/obj/467-with-mask.jpg  \n",
            "  inflating: data/obj/467-with-mask.txt  \n",
            "  inflating: data/obj/46-with-mask.jpg  \n",
            "  inflating: data/obj/46-with-mask.txt  \n",
            "  inflating: data/obj/471-with-mask.jpg  \n",
            "  inflating: data/obj/471-with-mask.txt  \n",
            "  inflating: data/obj/472-with-mask.jpg  \n",
            "  inflating: data/obj/472-with-mask.txt  \n",
            "  inflating: data/obj/473-with-mask.jpg  \n",
            "  inflating: data/obj/473-with-mask.txt  \n",
            "  inflating: data/obj/474-with-mask.jpg  \n",
            "  inflating: data/obj/474-with-mask.txt  \n",
            "  inflating: data/obj/475-with-mask.jpg  \n",
            "  inflating: data/obj/475-with-mask.txt  \n",
            "  inflating: data/obj/476-with-mask.jpg  \n",
            "  inflating: data/obj/476-with-mask.txt  \n",
            "  inflating: data/obj/477-with-mask.jpg  \n",
            "  inflating: data/obj/477-with-mask.txt  \n",
            "  inflating: data/obj/478-with-mask.jpg  \n",
            "  inflating: data/obj/478-with-mask.txt  \n",
            "  inflating: data/obj/479-with-mask.jpg  \n",
            "  inflating: data/obj/479-with-mask.txt  \n",
            "  inflating: data/obj/47-with-mask.jpg  \n",
            "  inflating: data/obj/47-with-mask.txt  \n",
            "  inflating: data/obj/480-with-mask.jpg  \n",
            "  inflating: data/obj/480-with-mask.txt  \n",
            "  inflating: data/obj/481-with-mask.jpg  \n",
            "  inflating: data/obj/481-with-mask.txt  \n",
            "  inflating: data/obj/48-with-mask.jpg  \n",
            "  inflating: data/obj/48-with-mask.txt  \n",
            "  inflating: data/obj/49.jpg         \n",
            "  inflating: data/obj/49.txt         \n",
            "  inflating: data/obj/49-with-mask.jpg  \n",
            "  inflating: data/obj/49-with-mask.txt  \n",
            "  inflating: data/obj/4-with-mask.jpg  \n",
            "  inflating: data/obj/4-with-mask.txt  \n",
            "  inflating: data/obj/50-with-mask.jpg  \n",
            "  inflating: data/obj/50-with-mask.txt  \n",
            "  inflating: data/obj/51-with-mask.jpg  \n",
            "  inflating: data/obj/51-with-mask.txt  \n",
            "  inflating: data/obj/52-with-mask.jpg  \n",
            "  inflating: data/obj/52-with-mask.txt  \n",
            "  inflating: data/obj/53-with-mask.jpg  \n",
            "  inflating: data/obj/53-with-mask.txt  \n",
            "  inflating: data/obj/56-with-mask.jpg  \n",
            "  inflating: data/obj/56-with-mask.txt  \n",
            "  inflating: data/obj/57-with-mask.jpg  \n",
            "  inflating: data/obj/57-with-mask.txt  \n",
            "  inflating: data/obj/59-with-mask.jpg  \n",
            "  inflating: data/obj/59-with-mask.txt  \n",
            "  inflating: data/obj/5-with-mask.jpg  \n",
            "  inflating: data/obj/5-with-mask.txt  \n",
            "  inflating: data/obj/61-with-mask.jpg  \n",
            "  inflating: data/obj/61-with-mask.txt  \n",
            "  inflating: data/obj/62-with-mask.jpg  \n",
            "  inflating: data/obj/62-with-mask.txt  \n",
            "  inflating: data/obj/63.jpg         \n",
            "  inflating: data/obj/63.txt         \n",
            "  inflating: data/obj/64-with-mask.jpg  \n",
            "  inflating: data/obj/64-with-mask.txt  \n",
            "  inflating: data/obj/65-with-mask.jpg  \n",
            "  inflating: data/obj/65-with-mask.txt  \n",
            "  inflating: data/obj/67-with-mask.jpg  \n",
            "  inflating: data/obj/67-with-mask.txt  \n",
            "  inflating: data/obj/68-with-mask.jpg  \n",
            "  inflating: data/obj/68-with-mask.txt  \n",
            "  inflating: data/obj/6-with-mask.jpg  \n",
            "  inflating: data/obj/6-with-mask.txt  \n",
            "  inflating: data/obj/70-with-mask.jpg  \n",
            "  inflating: data/obj/70-with-mask.txt  \n",
            "  inflating: data/obj/71-with-mask.jpg  \n",
            "  inflating: data/obj/71-with-mask.txt  \n",
            "  inflating: data/obj/72-with-mask.jpg  \n",
            "  inflating: data/obj/72-with-mask.txt  \n",
            "  inflating: data/obj/73-with-mask.jpg  \n",
            "  inflating: data/obj/73-with-mask.txt  \n",
            "  inflating: data/obj/74-with-mask.jpg  \n",
            "  inflating: data/obj/74-with-mask.txt  \n",
            "  inflating: data/obj/75-with-mask.jpg  \n",
            "  inflating: data/obj/75-with-mask.txt  \n",
            "  inflating: data/obj/76-with-mask.jpg  \n",
            "  inflating: data/obj/76-with-mask.txt  \n",
            "  inflating: data/obj/77-with-mask.jpg  \n",
            "  inflating: data/obj/77-with-mask.txt  \n",
            "  inflating: data/obj/78-with-mask.jpg  \n",
            "  inflating: data/obj/78-with-mask.txt  \n",
            "  inflating: data/obj/79-with-mask.jpg  \n",
            "  inflating: data/obj/79-with-mask.txt  \n",
            "  inflating: data/obj/7-with-mask.jpg  \n",
            "  inflating: data/obj/7-with-mask.txt  \n",
            "  inflating: data/obj/80-with-mask.jpg  \n",
            "  inflating: data/obj/80-with-mask.txt  \n",
            "  inflating: data/obj/81-with-mask.jpg  \n",
            "  inflating: data/obj/81-with-mask.txt  \n",
            "  inflating: data/obj/82-with-mask.jpg  \n",
            "  inflating: data/obj/82-with-mask.txt  \n",
            "  inflating: data/obj/83-with-mask.jpg  \n",
            "  inflating: data/obj/83-with-mask.txt  \n",
            "  inflating: data/obj/84-with-mask.jpg  \n",
            "  inflating: data/obj/84-with-mask.txt  \n",
            "  inflating: data/obj/85-with-mask.jpg  \n",
            "  inflating: data/obj/85-with-mask.txt  \n",
            "  inflating: data/obj/86-with-mask.jpg  \n",
            "  inflating: data/obj/86-with-mask.txt  \n",
            "  inflating: data/obj/88-with-mask.jpg  \n",
            "  inflating: data/obj/88-with-mask.txt  \n",
            "  inflating: data/obj/89-with-mask.jpg  \n",
            "  inflating: data/obj/89-with-mask.txt  \n",
            "  inflating: data/obj/8-with-mask.jpg  \n",
            "  inflating: data/obj/8-with-mask.txt  \n",
            "  inflating: data/obj/91-with-mask.jpg  \n",
            "  inflating: data/obj/91-with-mask.txt  \n",
            "  inflating: data/obj/92-with-mask.jpg  \n",
            "  inflating: data/obj/92-with-mask.txt  \n",
            "  inflating: data/obj/93-with-mask.jpg  \n",
            "  inflating: data/obj/93-with-mask.txt  \n",
            "  inflating: data/obj/94-with-mask.jpg  \n",
            "  inflating: data/obj/94-with-mask.txt  \n",
            "  inflating: data/obj/96-with-mask.jpg  \n",
            "  inflating: data/obj/96-with-mask.txt  \n",
            "  inflating: data/obj/97-with-mask.jpg  \n",
            "  inflating: data/obj/97-with-mask.txt  \n",
            "  inflating: data/obj/98-with-mask.jpg  \n",
            "  inflating: data/obj/98-with-mask.txt  \n",
            "  inflating: data/obj/99-with-mask.jpg  \n",
            "  inflating: data/obj/99-with-mask.txt  \n",
            "  inflating: data/obj/9-with-mask.jpg  \n",
            "  inflating: data/obj/9-with-mask.txt  \n",
            "  inflating: data/obj/masked (10).jpg  \n",
            "  inflating: data/obj/masked (10).txt  \n",
            "  inflating: data/obj/masked (11).jpg  \n",
            "  inflating: data/obj/masked (11).txt  \n",
            "  inflating: data/obj/masked (1257).jpg  \n",
            "  inflating: data/obj/masked (1257).txt  \n",
            "  inflating: data/obj/masked (1258).jpg  \n",
            "  inflating: data/obj/masked (1258).txt  \n",
            "  inflating: data/obj/masked (1259).jpg  \n",
            "  inflating: data/obj/masked (1259).txt  \n",
            "  inflating: data/obj/masked (1260).jpg  \n",
            "  inflating: data/obj/masked (1260).txt  \n",
            "  inflating: data/obj/masked (1261).jpg  \n",
            "  inflating: data/obj/masked (1261).txt  \n",
            "  inflating: data/obj/masked (1263).jpg  \n",
            "  inflating: data/obj/masked (1263).txt  \n",
            "  inflating: data/obj/masked (1264).jpg  \n",
            "  inflating: data/obj/masked (1264).txt  \n",
            "  inflating: data/obj/masked (1265).jpg  \n",
            "  inflating: data/obj/masked (1265).txt  \n",
            "  inflating: data/obj/masked (1266).jpg  \n",
            "  inflating: data/obj/masked (1266).txt  \n",
            "  inflating: data/obj/masked (1267).jpg  \n",
            "  inflating: data/obj/masked (1267).txt  \n",
            "  inflating: data/obj/masked (1268).jpg  \n",
            "  inflating: data/obj/masked (1268).txt  \n",
            "  inflating: data/obj/masked (1269).jpg  \n",
            "  inflating: data/obj/masked (1269).txt  \n",
            "  inflating: data/obj/masked (1270).jpg  \n",
            "  inflating: data/obj/masked (1270).txt  \n",
            "  inflating: data/obj/masked (1271).jpg  \n",
            "  inflating: data/obj/masked (1271).txt  \n",
            "  inflating: data/obj/masked (1272).jpg  \n",
            "  inflating: data/obj/masked (1272).txt  \n",
            "  inflating: data/obj/masked (1273).jpg  \n",
            "  inflating: data/obj/masked (1273).txt  \n",
            "  inflating: data/obj/masked (1274).jpg  \n",
            "  inflating: data/obj/masked (1274).txt  \n",
            "  inflating: data/obj/masked (1275).jpg  \n",
            "  inflating: data/obj/masked (1275).txt  \n",
            "  inflating: data/obj/masked (1276).jpg  \n",
            "  inflating: data/obj/masked (1276).txt  \n",
            "  inflating: data/obj/masked (1277).jpg  \n",
            "  inflating: data/obj/masked (1277).txt  \n",
            "  inflating: data/obj/masked (1278).jpg  \n",
            "  inflating: data/obj/masked (1278).txt  \n",
            "  inflating: data/obj/masked (1279).jpg  \n",
            "  inflating: data/obj/masked (1279).txt  \n",
            "  inflating: data/obj/masked (1280).jpg  \n",
            "  inflating: data/obj/masked (1280).txt  \n",
            "  inflating: data/obj/masked (1281).jpg  \n",
            "  inflating: data/obj/masked (1281).txt  \n",
            "  inflating: data/obj/masked (1282).jpg  \n",
            "  inflating: data/obj/masked (1282).txt  \n",
            "  inflating: data/obj/masked (1283).jpg  \n",
            "  inflating: data/obj/masked (1283).txt  \n",
            "  inflating: data/obj/masked (1284).jpg  \n",
            "  inflating: data/obj/masked (1284).txt  \n",
            "  inflating: data/obj/masked (1285).jpg  \n",
            "  inflating: data/obj/masked (1285).txt  \n",
            "  inflating: data/obj/masked (1286).jpg  \n",
            "  inflating: data/obj/masked (1286).txt  \n",
            "  inflating: data/obj/masked (1287).jpg  \n",
            "  inflating: data/obj/masked (1287).txt  \n",
            "  inflating: data/obj/masked (1288).jpg  \n",
            "  inflating: data/obj/masked (1288).txt  \n",
            "  inflating: data/obj/masked (1289).jpg  \n",
            "  inflating: data/obj/masked (1289).txt  \n",
            "  inflating: data/obj/masked (1290).jpg  \n",
            "  inflating: data/obj/masked (1290).txt  \n",
            "  inflating: data/obj/masked (1291).jpg  \n",
            "  inflating: data/obj/masked (1291).txt  \n",
            "  inflating: data/obj/masked (1292).jpg  \n",
            "  inflating: data/obj/masked (1292).txt  \n",
            "  inflating: data/obj/masked (1293).jpg  \n",
            "  inflating: data/obj/masked (1293).txt  \n",
            "  inflating: data/obj/masked (1296).jpg  \n",
            "  inflating: data/obj/masked (1296).txt  \n",
            "  inflating: data/obj/masked (1297).jpg  \n",
            "  inflating: data/obj/masked (1297).txt  \n",
            "  inflating: data/obj/masked (1298).jpg  \n",
            "  inflating: data/obj/masked (1298).txt  \n",
            "  inflating: data/obj/masked (1299).jpg  \n",
            "  inflating: data/obj/masked (1299).txt  \n",
            "  inflating: data/obj/masked (1300).jpg  \n",
            "  inflating: data/obj/masked (1300).txt  \n",
            "  inflating: data/obj/masked (1301).jpg  \n",
            "  inflating: data/obj/masked (1301).txt  \n",
            "  inflating: data/obj/masked (1302).jpg  \n",
            "  inflating: data/obj/masked (1302).txt  \n",
            "  inflating: data/obj/masked (1303).jpg  \n",
            "  inflating: data/obj/masked (1303).txt  \n",
            "  inflating: data/obj/masked (1304).jpg  \n",
            "  inflating: data/obj/masked (1304).txt  \n",
            "  inflating: data/obj/masked (1305).jpg  \n",
            "  inflating: data/obj/masked (1305).txt  \n",
            "  inflating: data/obj/masked (1306).jpg  \n",
            "  inflating: data/obj/masked (1306).txt  \n",
            "  inflating: data/obj/masked (1307).jpg  \n",
            "  inflating: data/obj/masked (1307).txt  \n",
            "  inflating: data/obj/masked (1308).jpg  \n",
            "  inflating: data/obj/masked (1308).txt  \n",
            "  inflating: data/obj/masked (1309).jpg  \n",
            "  inflating: data/obj/masked (1309).txt  \n",
            "  inflating: data/obj/masked (1310).jpg  \n",
            "  inflating: data/obj/masked (1310).txt  \n",
            "  inflating: data/obj/masked (1311).jpg  \n",
            "  inflating: data/obj/masked (1311).txt  \n",
            "  inflating: data/obj/masked (1312).jpg  \n",
            "  inflating: data/obj/masked (1312).txt  \n",
            "  inflating: data/obj/masked (1313).jpg  \n",
            "  inflating: data/obj/masked (1313).txt  \n",
            "  inflating: data/obj/masked (1314).jpg  \n",
            "  inflating: data/obj/masked (1314).txt  \n",
            "  inflating: data/obj/masked (1315).jpg  \n",
            "  inflating: data/obj/masked (1315).txt  \n",
            "  inflating: data/obj/masked (1316).jpg  \n",
            "  inflating: data/obj/masked (1316).txt  \n",
            "  inflating: data/obj/masked (1317).jpg  \n",
            "  inflating: data/obj/masked (1317).txt  \n",
            "  inflating: data/obj/masked (1318).jpg  \n",
            "  inflating: data/obj/masked (1318).txt  \n",
            "  inflating: data/obj/masked (1319).jpg  \n",
            "  inflating: data/obj/masked (1319).txt  \n",
            "  inflating: data/obj/masked (1320).jpg  \n",
            "  inflating: data/obj/masked (1320).txt  \n",
            "  inflating: data/obj/masked (1321).jpg  \n",
            "  inflating: data/obj/masked (1321).txt  \n",
            "  inflating: data/obj/masked (1322).jpg  \n",
            "  inflating: data/obj/masked (1322).txt  \n",
            "  inflating: data/obj/masked (1323).jpg  \n",
            "  inflating: data/obj/masked (1323).txt  \n",
            "  inflating: data/obj/masked (1324).jpg  \n",
            "  inflating: data/obj/masked (1324).txt  \n",
            "  inflating: data/obj/masked (1325).jpg  \n",
            "  inflating: data/obj/masked (1325).txt  \n",
            "  inflating: data/obj/masked (1326).jpg  \n",
            "  inflating: data/obj/masked (1326).txt  \n",
            "  inflating: data/obj/masked (1327).jpg  \n",
            "  inflating: data/obj/masked (1327).txt  \n",
            "  inflating: data/obj/masked (1328).jpg  \n",
            "  inflating: data/obj/masked (1328).txt  \n",
            "  inflating: data/obj/masked (1329).jpg  \n",
            "  inflating: data/obj/masked (1329).txt  \n",
            "  inflating: data/obj/masked (1330).jpg  \n",
            "  inflating: data/obj/masked (1330).txt  \n",
            "  inflating: data/obj/masked (1331).jpg  \n",
            "  inflating: data/obj/masked (1331).txt  \n",
            "  inflating: data/obj/masked (1332).jpg  \n",
            "  inflating: data/obj/masked (1332).txt  \n",
            "  inflating: data/obj/masked (1333).jpg  \n",
            "  inflating: data/obj/masked (1333).txt  \n",
            "  inflating: data/obj/masked (1334).jpg  \n",
            "  inflating: data/obj/masked (1334).txt  \n",
            "  inflating: data/obj/masked (1335).jpg  \n",
            "  inflating: data/obj/masked (1335).txt  \n",
            "  inflating: data/obj/masked (1336).jpg  \n",
            "  inflating: data/obj/masked (1336).txt  \n",
            "  inflating: data/obj/masked (1337).jpg  \n",
            "  inflating: data/obj/masked (1337).txt  \n",
            "  inflating: data/obj/masked (1338).jpg  \n",
            "  inflating: data/obj/masked (1338).txt  \n",
            "  inflating: data/obj/masked (1339).jpg  \n",
            "  inflating: data/obj/masked (1339).txt  \n",
            "  inflating: data/obj/masked (1340).jpg  \n",
            "  inflating: data/obj/masked (1340).txt  \n",
            "  inflating: data/obj/masked (1341).jpg  \n",
            "  inflating: data/obj/masked (1341).txt  \n",
            "  inflating: data/obj/masked (1342).jpg  \n",
            "  inflating: data/obj/masked (1342).txt  \n",
            "  inflating: data/obj/masked (1343).jpg  \n",
            "  inflating: data/obj/masked (1343).txt  \n",
            "  inflating: data/obj/masked (1344).jpg  \n",
            "  inflating: data/obj/masked (1344).txt  \n",
            "  inflating: data/obj/masked (1345).jpg  \n",
            "  inflating: data/obj/masked (1345).txt  \n",
            "  inflating: data/obj/masked (1346).jpg  \n",
            "  inflating: data/obj/masked (1346).txt  \n",
            "  inflating: data/obj/masked (1347).jpg  \n",
            "  inflating: data/obj/masked (1347).txt  \n",
            "  inflating: data/obj/masked (1348).jpg  \n",
            "  inflating: data/obj/masked (1348).txt  \n",
            "  inflating: data/obj/masked (1349).jpg  \n",
            "  inflating: data/obj/masked (1349).txt  \n",
            "  inflating: data/obj/masked (1350).jpg  \n",
            "  inflating: data/obj/masked (1350).txt  \n",
            "  inflating: data/obj/masked (1351).jpg  \n",
            "  inflating: data/obj/masked (1351).txt  \n",
            "  inflating: data/obj/masked (1352).jpg  \n",
            "  inflating: data/obj/masked (1352).txt  \n",
            "  inflating: data/obj/masked (1353).jpg  \n",
            "  inflating: data/obj/masked (1353).txt  \n",
            "  inflating: data/obj/masked (1354).jpg  \n",
            "  inflating: data/obj/masked (1354).txt  \n",
            "  inflating: data/obj/masked (1355).jpg  \n",
            "  inflating: data/obj/masked (1355).txt  \n",
            "  inflating: data/obj/masked (1356).jpg  \n",
            "  inflating: data/obj/masked (1356).txt  \n",
            "  inflating: data/obj/masked (1357).jpg  \n",
            "  inflating: data/obj/masked (1357).txt  \n",
            "  inflating: data/obj/masked (1358).jpg  \n",
            "  inflating: data/obj/masked (1358).txt  \n",
            "  inflating: data/obj/masked (1359).jpg  \n",
            "  inflating: data/obj/masked (1359).txt  \n",
            "  inflating: data/obj/masked (1360).jpg  \n",
            "  inflating: data/obj/masked (1360).txt  \n",
            "  inflating: data/obj/masked (1361).jpg  \n",
            "  inflating: data/obj/masked (1361).txt  \n",
            "  inflating: data/obj/masked (1362).jpg  \n",
            "  inflating: data/obj/masked (1362).txt  \n",
            "  inflating: data/obj/masked (1363).jpg  \n",
            "  inflating: data/obj/masked (1363).txt  \n",
            "  inflating: data/obj/masked (1364).jpg  \n",
            "  inflating: data/obj/masked (1364).txt  \n",
            "  inflating: data/obj/masked (1365).jpg  \n",
            "  inflating: data/obj/masked (1365).txt  \n",
            "  inflating: data/obj/masked (1366).jpg  \n",
            "  inflating: data/obj/masked (1366).txt  \n",
            "  inflating: data/obj/masked (1367).jpg  \n",
            "  inflating: data/obj/masked (1367).txt  \n",
            "  inflating: data/obj/masked (1368).jpg  \n",
            "  inflating: data/obj/masked (1368).txt  \n",
            "  inflating: data/obj/masked (1369).jpg  \n",
            "  inflating: data/obj/masked (1369).txt  \n",
            "  inflating: data/obj/masked (1370).jpg  \n",
            "  inflating: data/obj/masked (1370).txt  \n",
            "  inflating: data/obj/masked (1371).jpg  \n",
            "  inflating: data/obj/masked (1371).txt  \n",
            "  inflating: data/obj/masked (1372).jpg  \n",
            "  inflating: data/obj/masked (1372).txt  \n",
            "  inflating: data/obj/masked (1373).jpg  \n",
            "  inflating: data/obj/masked (1373).txt  \n",
            "  inflating: data/obj/masked (1375).jpg  \n",
            "  inflating: data/obj/masked (1375).txt  \n",
            "  inflating: data/obj/masked (1376).jpg  \n",
            "  inflating: data/obj/masked (1376).txt  \n",
            "  inflating: data/obj/masked (1377).jpg  \n",
            "  inflating: data/obj/masked (1377).txt  \n",
            "  inflating: data/obj/masked (1378).jpg  \n",
            "  inflating: data/obj/masked (1378).txt  \n",
            "  inflating: data/obj/masked (1379).jpg  \n",
            "  inflating: data/obj/masked (1379).txt  \n",
            "  inflating: data/obj/masked (1380).jpg  \n",
            "  inflating: data/obj/masked (1380).txt  \n",
            "  inflating: data/obj/masked (1381).jpg  \n",
            "  inflating: data/obj/masked (1381).txt  \n",
            "  inflating: data/obj/masked (1382).jpg  \n",
            "  inflating: data/obj/masked (1382).txt  \n",
            "  inflating: data/obj/masked (1383).jpg  \n",
            "  inflating: data/obj/masked (1383).txt  \n",
            "  inflating: data/obj/masked (1384).jpg  \n",
            "  inflating: data/obj/masked (1384).txt  \n",
            "  inflating: data/obj/masked (1385).jpg  \n",
            "  inflating: data/obj/masked (1385).txt  \n",
            "  inflating: data/obj/masked (1386).jpg  \n",
            "  inflating: data/obj/masked (1386).txt  \n",
            "  inflating: data/obj/masked (1387).jpg  \n",
            "  inflating: data/obj/masked (1387).txt  \n",
            "  inflating: data/obj/masked (1388).jpg  \n",
            "  inflating: data/obj/masked (1388).txt  \n",
            "  inflating: data/obj/masked (1389).jpg  \n",
            "  inflating: data/obj/masked (1389).txt  \n",
            "  inflating: data/obj/masked (1390).jpg  \n",
            "  inflating: data/obj/masked (1390).txt  \n",
            "  inflating: data/obj/masked (1391).jpg  \n",
            "  inflating: data/obj/masked (1391).txt  \n",
            "  inflating: data/obj/masked (1392).jpg  \n",
            "  inflating: data/obj/masked (1392).txt  \n",
            "  inflating: data/obj/masked (1393).jpg  \n",
            "  inflating: data/obj/masked (1393).txt  \n",
            "  inflating: data/obj/masked (1394).jpg  \n",
            "  inflating: data/obj/masked (1394).txt  \n",
            "  inflating: data/obj/masked (1395).jpg  \n",
            "  inflating: data/obj/masked (1395).txt  \n",
            "  inflating: data/obj/masked (1396).jpg  \n",
            "  inflating: data/obj/masked (1396).txt  \n",
            "  inflating: data/obj/masked (1397).jpg  \n",
            "  inflating: data/obj/masked (1397).txt  \n",
            "  inflating: data/obj/masked (1398).jpg  \n",
            "  inflating: data/obj/masked (1398).txt  \n",
            "  inflating: data/obj/masked (1399).jpg  \n",
            "  inflating: data/obj/masked (1399).txt  \n",
            "  inflating: data/obj/masked (1400).jpg  \n",
            "  inflating: data/obj/masked (1400).txt  \n",
            "  inflating: data/obj/masked (1401).jpg  \n",
            "  inflating: data/obj/masked (1401).txt  \n",
            "  inflating: data/obj/masked (1402).jpg  \n",
            "  inflating: data/obj/masked (1402).txt  \n",
            "  inflating: data/obj/masked (1403).jpg  \n",
            "  inflating: data/obj/masked (1403).txt  \n",
            "  inflating: data/obj/masked (1404).jpg  \n",
            "  inflating: data/obj/masked (1404).txt  \n",
            "  inflating: data/obj/masked (1405).jpg  \n",
            "  inflating: data/obj/masked (1405).txt  \n",
            "  inflating: data/obj/masked (1406).jpg  \n",
            "  inflating: data/obj/masked (1406).txt  \n",
            "  inflating: data/obj/masked (1407).jpg  \n",
            "  inflating: data/obj/masked (1407).txt  \n",
            "  inflating: data/obj/masked (1408).jpg  \n",
            "  inflating: data/obj/masked (1408).txt  \n",
            "  inflating: data/obj/masked (1409).jpg  \n",
            "  inflating: data/obj/masked (1409).txt  \n",
            "  inflating: data/obj/masked (1410).jpg  \n",
            "  inflating: data/obj/masked (1410).txt  \n",
            "  inflating: data/obj/masked (1411).jpg  \n",
            "  inflating: data/obj/masked (1411).txt  \n",
            "  inflating: data/obj/masked (1412).jpg  \n",
            "  inflating: data/obj/masked (1412).txt  \n",
            "  inflating: data/obj/masked (1413).jpg  \n",
            "  inflating: data/obj/masked (1413).txt  \n",
            "  inflating: data/obj/masked (1414).jpg  \n",
            "  inflating: data/obj/masked (1414).txt  \n",
            "  inflating: data/obj/masked (1415).jpg  \n",
            "  inflating: data/obj/masked (1415).txt  \n",
            "  inflating: data/obj/masked (1416).jpg  \n",
            "  inflating: data/obj/masked (1416).txt  \n",
            "  inflating: data/obj/masked (1417).jpg  \n",
            "  inflating: data/obj/masked (1417).txt  \n",
            "  inflating: data/obj/masked (1418).jpg  \n",
            "  inflating: data/obj/masked (1418).txt  \n",
            "  inflating: data/obj/masked (1419).jpg  \n",
            "  inflating: data/obj/masked (1419).txt  \n",
            "  inflating: data/obj/masked (1420).jpg  \n",
            "  inflating: data/obj/masked (1420).txt  \n",
            "  inflating: data/obj/masked (1421).jpg  \n",
            "  inflating: data/obj/masked (1421).txt  \n",
            "  inflating: data/obj/masked (1422).jpg  \n",
            "  inflating: data/obj/masked (1422).txt  \n",
            "  inflating: data/obj/masked (1423).jpg  \n",
            "  inflating: data/obj/masked (1423).txt  \n",
            "  inflating: data/obj/masked (1424).jpg  \n",
            "  inflating: data/obj/masked (1424).txt  \n",
            "  inflating: data/obj/masked (1425).jpg  \n",
            "  inflating: data/obj/masked (1425).txt  \n",
            "  inflating: data/obj/masked (1426).jpg  \n",
            "  inflating: data/obj/masked (1426).txt  \n",
            "  inflating: data/obj/masked (1427).jpg  \n",
            "  inflating: data/obj/masked (1427).txt  \n",
            "  inflating: data/obj/masked (1428).jpg  \n",
            "  inflating: data/obj/masked (1428).txt  \n",
            "  inflating: data/obj/masked (1429).jpg  \n",
            "  inflating: data/obj/masked (1429).txt  \n",
            "  inflating: data/obj/masked (1430).jpg  \n",
            "  inflating: data/obj/masked (1430).txt  \n",
            "  inflating: data/obj/masked (1431).jpg  \n",
            "  inflating: data/obj/masked (1431).txt  \n",
            "  inflating: data/obj/masked (1432).jpg  \n",
            "  inflating: data/obj/masked (1432).txt  \n",
            "  inflating: data/obj/masked (1433).jpg  \n",
            "  inflating: data/obj/masked (1433).txt  \n",
            "  inflating: data/obj/masked (1434).jpg  \n",
            "  inflating: data/obj/masked (1434).txt  \n",
            "  inflating: data/obj/masked (1435).jpg  \n",
            "  inflating: data/obj/masked (1435).txt  \n",
            "  inflating: data/obj/masked (1436).jpg  \n",
            "  inflating: data/obj/masked (1436).txt  \n",
            "  inflating: data/obj/masked (1437).jpg  \n",
            "  inflating: data/obj/masked (1437).txt  \n",
            "  inflating: data/obj/masked (1438).jpg  \n",
            "  inflating: data/obj/masked (1438).txt  \n",
            "  inflating: data/obj/masked (1439).jpg  \n",
            "  inflating: data/obj/masked (1439).txt  \n",
            "  inflating: data/obj/masked (1440).jpg  \n",
            "  inflating: data/obj/masked (1440).txt  \n",
            "  inflating: data/obj/masked (1441).jpg  \n",
            "  inflating: data/obj/masked (1441).txt  \n",
            "  inflating: data/obj/masked (1442).jpg  \n",
            "  inflating: data/obj/masked (1442).txt  \n",
            "  inflating: data/obj/masked (1443).jpg  \n",
            "  inflating: data/obj/masked (1443).txt  \n",
            "  inflating: data/obj/masked (1444).jpg  \n",
            "  inflating: data/obj/masked (1444).txt  \n",
            "  inflating: data/obj/masked (1445).jpg  \n",
            "  inflating: data/obj/masked (1445).txt  \n",
            "  inflating: data/obj/masked (1446).jpg  \n",
            "  inflating: data/obj/masked (1446).txt  \n",
            "  inflating: data/obj/masked (1447).jpg  \n",
            "  inflating: data/obj/masked (1447).txt  \n",
            "  inflating: data/obj/masked (1448).jpg  \n",
            "  inflating: data/obj/masked (1448).txt  \n",
            "  inflating: data/obj/masked (1449).jpg  \n",
            "  inflating: data/obj/masked (1449).txt  \n",
            "  inflating: data/obj/masked (1450).jpg  \n",
            "  inflating: data/obj/masked (1450).txt  \n",
            "  inflating: data/obj/masked (1451).jpg  \n",
            "  inflating: data/obj/masked (1451).txt  \n",
            "  inflating: data/obj/masked (1452).jpg  \n",
            "  inflating: data/obj/masked (1452).txt  \n",
            "  inflating: data/obj/masked (1453).jpg  \n",
            "  inflating: data/obj/masked (1453).txt  \n",
            "  inflating: data/obj/masked (1454).jpg  \n",
            "  inflating: data/obj/masked (1454).txt  \n",
            "  inflating: data/obj/masked (1455).jpg  \n",
            "  inflating: data/obj/masked (1455).txt  \n",
            "  inflating: data/obj/masked (1456).jpg  \n",
            "  inflating: data/obj/masked (1456).txt  \n",
            "  inflating: data/obj/masked (1457).jpg  \n",
            "  inflating: data/obj/masked (1457).txt  \n",
            "  inflating: data/obj/masked (1458).jpg  \n",
            "  inflating: data/obj/masked (1458).txt  \n",
            "  inflating: data/obj/masked (1459).jpg  \n",
            "  inflating: data/obj/masked (1459).txt  \n",
            "  inflating: data/obj/masked (1460).jpg  \n",
            "  inflating: data/obj/masked (1460).txt  \n",
            "  inflating: data/obj/masked (1461).jpg  \n",
            "  inflating: data/obj/masked (1461).txt  \n",
            "  inflating: data/obj/masked (1462).jpg  \n",
            "  inflating: data/obj/masked (1462).txt  \n",
            "  inflating: data/obj/masked (1463).jpg  \n",
            "  inflating: data/obj/masked (1463).txt  \n",
            "  inflating: data/obj/masked (1464).jpg  \n",
            "  inflating: data/obj/masked (1464).txt  \n",
            "  inflating: data/obj/masked (1465).jpg  \n",
            "  inflating: data/obj/masked (1465).txt  \n",
            "  inflating: data/obj/masked (1466).jpg  \n",
            "  inflating: data/obj/masked (1466).txt  \n",
            "  inflating: data/obj/masked (1467).jpg  \n",
            "  inflating: data/obj/masked (1467).txt  \n",
            "  inflating: data/obj/masked (1468).jpg  \n",
            "  inflating: data/obj/masked (1468).txt  \n",
            "  inflating: data/obj/masked (1469).jpg  \n",
            "  inflating: data/obj/masked (1469).txt  \n",
            "  inflating: data/obj/masked (1470).jpg  \n",
            "  inflating: data/obj/masked (1470).txt  \n",
            "  inflating: data/obj/masked (1471).jpg  \n",
            "  inflating: data/obj/masked (1471).txt  \n",
            "  inflating: data/obj/masked (1472).jpg  \n",
            "  inflating: data/obj/masked (1472).txt  \n",
            "  inflating: data/obj/masked (1473).jpg  \n",
            "  inflating: data/obj/masked (1473).txt  \n",
            "  inflating: data/obj/masked (1474).jpg  \n",
            "  inflating: data/obj/masked (1474).txt  \n",
            "  inflating: data/obj/masked (1475).jpg  \n",
            "  inflating: data/obj/masked (1475).txt  \n",
            "  inflating: data/obj/masked (1476).jpg  \n",
            "  inflating: data/obj/masked (1476).txt  \n",
            "  inflating: data/obj/masked (1477).jpg  \n",
            "  inflating: data/obj/masked (1477).txt  \n",
            "  inflating: data/obj/masked (1478).jpg  \n",
            "  inflating: data/obj/masked (1478).txt  \n",
            "  inflating: data/obj/masked (1479).jpg  \n",
            "  inflating: data/obj/masked (1479).txt  \n",
            "  inflating: data/obj/masked (1480).jpg  \n",
            "  inflating: data/obj/masked (1480).txt  \n",
            "  inflating: data/obj/masked (1481).jpg  \n",
            "  inflating: data/obj/masked (1481).txt  \n",
            "  inflating: data/obj/masked (1482).jpg  \n",
            "  inflating: data/obj/masked (1482).txt  \n",
            "  inflating: data/obj/masked (1483).jpg  \n",
            "  inflating: data/obj/masked (1483).txt  \n",
            "  inflating: data/obj/masked (1484).jpg  \n",
            "  inflating: data/obj/masked (1484).txt  \n",
            "  inflating: data/obj/masked (1485).jpg  \n",
            "  inflating: data/obj/masked (1485).txt  \n",
            "  inflating: data/obj/masked (1486).jpg  \n",
            "  inflating: data/obj/masked (1486).txt  \n",
            "  inflating: data/obj/masked (1487).jpg  \n",
            "  inflating: data/obj/masked (1487).txt  \n",
            "  inflating: data/obj/masked (1488).jpg  \n",
            "  inflating: data/obj/masked (1488).txt  \n",
            "  inflating: data/obj/masked (1489).jpg  \n",
            "  inflating: data/obj/masked (1489).txt  \n",
            "  inflating: data/obj/masked (1490).jpg  \n",
            "  inflating: data/obj/masked (1490).txt  \n",
            "  inflating: data/obj/masked (1491).jpg  \n",
            "  inflating: data/obj/masked (1491).txt  \n",
            "  inflating: data/obj/masked (1492).jpg  \n",
            "  inflating: data/obj/masked (1492).txt  \n",
            "  inflating: data/obj/masked (1493).jpg  \n",
            "  inflating: data/obj/masked (1493).txt  \n",
            "  inflating: data/obj/masked (1494).jpg  \n",
            "  inflating: data/obj/masked (1494).txt  \n",
            "  inflating: data/obj/masked (1495).jpg  \n",
            "  inflating: data/obj/masked (1495).txt  \n",
            "  inflating: data/obj/masked (1496).jpg  \n",
            "  inflating: data/obj/masked (1496).txt  \n",
            "  inflating: data/obj/masked (1497).jpg  \n",
            "  inflating: data/obj/masked (1497).txt  \n",
            "  inflating: data/obj/masked (1498).jpg  \n",
            "  inflating: data/obj/masked (1498).txt  \n",
            "  inflating: data/obj/masked (1499).jpg  \n",
            "  inflating: data/obj/masked (1499).txt  \n",
            "  inflating: data/obj/masked (1500).jpg  \n",
            "  inflating: data/obj/masked (1500).txt  \n",
            "  inflating: data/obj/masked (1501).jpg  \n",
            "  inflating: data/obj/masked (1501).txt  \n",
            "  inflating: data/obj/masked (1502).jpg  \n",
            "  inflating: data/obj/masked (1502).txt  \n",
            "  inflating: data/obj/masked (1503).jpg  \n",
            "  inflating: data/obj/masked (1503).txt  \n",
            "  inflating: data/obj/masked (1504).jpg  \n",
            "  inflating: data/obj/masked (1504).txt  \n",
            "  inflating: data/obj/masked (1505).jpg  \n",
            "  inflating: data/obj/masked (1505).txt  \n",
            "  inflating: data/obj/masked (1506).jpg  \n",
            "  inflating: data/obj/masked (1506).txt  \n",
            "  inflating: data/obj/masked (1507).jpg  \n",
            "  inflating: data/obj/masked (1507).txt  \n",
            "  inflating: data/obj/masked (1508).jpg  \n",
            "  inflating: data/obj/masked (1508).txt  \n",
            "  inflating: data/obj/masked (1509).jpg  \n",
            "  inflating: data/obj/masked (1509).txt  \n",
            "  inflating: data/obj/masked (1510).jpg  \n",
            "  inflating: data/obj/masked (1510).txt  \n",
            "  inflating: data/obj/masked (1511).jpg  \n",
            "  inflating: data/obj/masked (1511).txt  \n",
            "  inflating: data/obj/masked (1512).jpg  \n",
            "  inflating: data/obj/masked (1512).txt  \n",
            "  inflating: data/obj/masked (1513).jpg  \n",
            "  inflating: data/obj/masked (1513).txt  \n",
            "  inflating: data/obj/masked (1514).jpg  \n",
            "  inflating: data/obj/masked (1514).txt  \n",
            "  inflating: data/obj/masked (1515).jpg  \n",
            "  inflating: data/obj/masked (1515).txt  \n",
            "  inflating: data/obj/masked (1516).jpg  \n",
            "  inflating: data/obj/masked (1516).txt  \n",
            "  inflating: data/obj/masked (1517).jpg  \n",
            "  inflating: data/obj/masked (1517).txt  \n",
            "  inflating: data/obj/masked (1518).jpg  \n",
            "  inflating: data/obj/masked (1518).txt  \n",
            "  inflating: data/obj/masked (1519).jpg  \n",
            "  inflating: data/obj/masked (1519).txt  \n",
            "  inflating: data/obj/masked (1520).jpg  \n",
            "  inflating: data/obj/masked (1520).txt  \n",
            "  inflating: data/obj/masked (1521).jpg  \n",
            "  inflating: data/obj/masked (1521).txt  \n",
            "  inflating: data/obj/masked (1522).jpg  \n",
            "  inflating: data/obj/masked (1522).txt  \n",
            "  inflating: data/obj/masked (1523).jpg  \n",
            "  inflating: data/obj/masked (1523).txt  \n",
            "  inflating: data/obj/masked (1524).jpg  \n",
            "  inflating: data/obj/masked (1524).txt  \n",
            "  inflating: data/obj/masked (1525).jpg  \n",
            "  inflating: data/obj/masked (1525).txt  \n",
            "  inflating: data/obj/masked (1526).jpg  \n",
            "  inflating: data/obj/masked (1526).txt  \n",
            "  inflating: data/obj/masked (1527).jpg  \n",
            "  inflating: data/obj/masked (1527).txt  \n",
            "  inflating: data/obj/masked (1528).jpg  \n",
            "  inflating: data/obj/masked (1528).txt  \n",
            "  inflating: data/obj/masked (1529).jpg  \n",
            "  inflating: data/obj/masked (1529).txt  \n",
            "  inflating: data/obj/masked (1530).jpg  \n",
            "  inflating: data/obj/masked (1530).txt  \n",
            "  inflating: data/obj/masked (1531).jpg  \n",
            "  inflating: data/obj/masked (1531).txt  \n",
            "  inflating: data/obj/masked (1532).jpg  \n",
            "  inflating: data/obj/masked (1532).txt  \n",
            "  inflating: data/obj/masked (1533).jpg  \n",
            "  inflating: data/obj/masked (1533).txt  \n",
            "  inflating: data/obj/masked (1534).jpg  \n",
            "  inflating: data/obj/masked (1534).txt  \n",
            "  inflating: data/obj/masked (1535).jpg  \n",
            "  inflating: data/obj/masked (1535).txt  \n",
            "  inflating: data/obj/masked (1536).jpg  \n",
            "  inflating: data/obj/masked (1536).txt  \n",
            "  inflating: data/obj/masked (1537).jpg  \n",
            "  inflating: data/obj/masked (1537).txt  \n",
            "  inflating: data/obj/masked (1538).jpg  \n",
            "  inflating: data/obj/masked (1538).txt  \n",
            "  inflating: data/obj/masked (1539).jpg  \n",
            "  inflating: data/obj/masked (1539).txt  \n",
            "  inflating: data/obj/masked (1540).jpg  \n",
            "  inflating: data/obj/masked (1540).txt  \n",
            "  inflating: data/obj/masked (1541).jpg  \n",
            "  inflating: data/obj/masked (1541).txt  \n",
            "  inflating: data/obj/masked (1542).jpg  \n",
            "  inflating: data/obj/masked (1542).txt  \n",
            "  inflating: data/obj/masked (1543).jpg  \n",
            "  inflating: data/obj/masked (1543).txt  \n",
            "  inflating: data/obj/masked (1544).jpg  \n",
            "  inflating: data/obj/masked (1544).txt  \n",
            "  inflating: data/obj/masked (1545).jpg  \n",
            "  inflating: data/obj/masked (1545).txt  \n",
            "  inflating: data/obj/masked (1546).jpg  \n",
            "  inflating: data/obj/masked (1546).txt  \n",
            "  inflating: data/obj/masked (1547).jpg  \n",
            "  inflating: data/obj/masked (1547).txt  \n",
            "  inflating: data/obj/masked (1548).jpg  \n",
            "  inflating: data/obj/masked (1548).txt  \n",
            "  inflating: data/obj/masked (1549).jpg  \n",
            "  inflating: data/obj/masked (1549).txt  \n",
            "  inflating: data/obj/masked (1550).jpg  \n",
            "  inflating: data/obj/masked (1550).txt  \n",
            "  inflating: data/obj/masked (1551).jpg  \n",
            "  inflating: data/obj/masked (1551).txt  \n",
            "  inflating: data/obj/masked (1552).jpg  \n",
            "  inflating: data/obj/masked (1552).txt  \n",
            "  inflating: data/obj/masked (1553).jpg  \n",
            "  inflating: data/obj/masked (1553).txt  \n",
            "  inflating: data/obj/masked (1554).jpg  \n",
            "  inflating: data/obj/masked (1554).txt  \n",
            "  inflating: data/obj/masked (1555).jpg  \n",
            "  inflating: data/obj/masked (1555).txt  \n",
            "  inflating: data/obj/masked (1556).jpg  \n",
            "  inflating: data/obj/masked (1556).txt  \n",
            "  inflating: data/obj/masked (1557).jpg  \n",
            "  inflating: data/obj/masked (1557).txt  \n",
            "  inflating: data/obj/masked (1558).jpg  \n",
            "  inflating: data/obj/masked (1558).txt  \n",
            "  inflating: data/obj/masked (1559).jpg  \n",
            "  inflating: data/obj/masked (1559).txt  \n",
            "  inflating: data/obj/masked (1560).jpg  \n",
            "  inflating: data/obj/masked (1560).txt  \n",
            "  inflating: data/obj/masked (1561).jpg  \n",
            "  inflating: data/obj/masked (1561).txt  \n",
            "  inflating: data/obj/masked (1562).jpg  \n",
            "  inflating: data/obj/masked (1562).txt  \n",
            "  inflating: data/obj/masked (1563).jpg  \n",
            "  inflating: data/obj/masked (1563).txt  \n",
            "  inflating: data/obj/masked (1564).jpg  \n",
            "  inflating: data/obj/masked (1564).txt  \n",
            "  inflating: data/obj/masked (1565).jpg  \n",
            "  inflating: data/obj/masked (1565).txt  \n",
            "  inflating: data/obj/masked (1566).jpg  \n",
            "  inflating: data/obj/masked (1566).txt  \n",
            "  inflating: data/obj/masked (1567).jpg  \n",
            "  inflating: data/obj/masked (1567).txt  \n",
            "  inflating: data/obj/masked (1568).jpg  \n",
            "  inflating: data/obj/masked (1568).txt  \n",
            "  inflating: data/obj/masked (1569).jpg  \n",
            "  inflating: data/obj/masked (1569).txt  \n",
            "  inflating: data/obj/masked (1570).jpg  \n",
            "  inflating: data/obj/masked (1570).txt  \n",
            "  inflating: data/obj/masked (1571).jpg  \n",
            "  inflating: data/obj/masked (1571).txt  \n",
            "  inflating: data/obj/masked (1572).jpg  \n",
            "  inflating: data/obj/masked (1572).txt  \n",
            "  inflating: data/obj/masked (1573).jpg  \n",
            "  inflating: data/obj/masked (1573).txt  \n",
            "  inflating: data/obj/masked (1574).jpg  \n",
            "  inflating: data/obj/masked (1574).txt  \n",
            "  inflating: data/obj/masked (1575).jpg  \n",
            "  inflating: data/obj/masked (1575).txt  \n",
            "  inflating: data/obj/masked (1576).jpg  \n",
            "  inflating: data/obj/masked (1576).txt  \n",
            "  inflating: data/obj/masked (1577).jpg  \n",
            "  inflating: data/obj/masked (1577).txt  \n",
            "  inflating: data/obj/masked (1578).jpg  \n",
            "  inflating: data/obj/masked (1578).txt  \n",
            "  inflating: data/obj/masked (1579).jpg  \n",
            "  inflating: data/obj/masked (1579).txt  \n",
            "  inflating: data/obj/masked (1580).jpg  \n",
            "  inflating: data/obj/masked (1580).txt  \n",
            "  inflating: data/obj/masked (1581).jpg  \n",
            "  inflating: data/obj/masked (1581).txt  \n",
            "  inflating: data/obj/masked (1582).jpg  \n",
            "  inflating: data/obj/masked (1582).txt  \n",
            "  inflating: data/obj/masked (1583).jpg  \n",
            "  inflating: data/obj/masked (1583).txt  \n",
            "  inflating: data/obj/masked (1584).jpg  \n",
            "  inflating: data/obj/masked (1584).txt  \n",
            "  inflating: data/obj/masked (1585).jpg  \n",
            "  inflating: data/obj/masked (1585).txt  \n",
            "  inflating: data/obj/masked (1586).jpg  \n",
            "  inflating: data/obj/masked (1586).txt  \n",
            "  inflating: data/obj/masked (1587).jpg  \n",
            "  inflating: data/obj/masked (1587).txt  \n",
            "  inflating: data/obj/masked (1588).jpg  \n",
            "  inflating: data/obj/masked (1588).txt  \n",
            "  inflating: data/obj/masked (1589).jpg  \n",
            "  inflating: data/obj/masked (1589).txt  \n",
            "  inflating: data/obj/masked (1590).jpg  \n",
            "  inflating: data/obj/masked (1590).txt  \n",
            "  inflating: data/obj/masked (1591).jpg  \n",
            "  inflating: data/obj/masked (1591).txt  \n",
            "  inflating: data/obj/masked (1592).jpg  \n",
            "  inflating: data/obj/masked (1592).txt  \n",
            "  inflating: data/obj/masked (1593).jpg  \n",
            "  inflating: data/obj/masked (1593).txt  \n",
            "  inflating: data/obj/masked (1594).jpg  \n",
            "  inflating: data/obj/masked (1594).txt  \n",
            "  inflating: data/obj/masked (1595).jpg  \n",
            "  inflating: data/obj/masked (1595).txt  \n",
            "  inflating: data/obj/masked (1596).jpg  \n",
            "  inflating: data/obj/masked (1596).txt  \n",
            "  inflating: data/obj/masked (1597).jpg  \n",
            "  inflating: data/obj/masked (1597).txt  \n",
            "  inflating: data/obj/masked (1598).jpg  \n",
            "  inflating: data/obj/masked (1598).txt  \n",
            "  inflating: data/obj/masked (1599).jpg  \n",
            "  inflating: data/obj/masked (1599).txt  \n",
            "  inflating: data/obj/masked (1600).jpg  \n",
            "  inflating: data/obj/masked (1600).txt  \n",
            "  inflating: data/obj/masked (1601).jpg  \n",
            "  inflating: data/obj/masked (1601).txt  \n",
            "  inflating: data/obj/masked (1602).jpg  \n",
            "  inflating: data/obj/masked (1602).txt  \n",
            "  inflating: data/obj/masked (1603).jpg  \n",
            "  inflating: data/obj/masked (1603).txt  \n",
            "  inflating: data/obj/masked (1604).jpg  \n",
            "  inflating: data/obj/masked (1604).txt  \n",
            "  inflating: data/obj/masked (1605).jpg  \n",
            "  inflating: data/obj/masked (1605).txt  \n",
            "  inflating: data/obj/masked (1606).jpg  \n",
            "  inflating: data/obj/masked (1606).txt  \n",
            "  inflating: data/obj/masked (1607).jpg  \n",
            "  inflating: data/obj/masked (1607).txt  \n",
            "  inflating: data/obj/masked (1608).jpg  \n",
            "  inflating: data/obj/masked (1608).txt  \n",
            "  inflating: data/obj/masked (1609).jpg  \n",
            "  inflating: data/obj/masked (1609).txt  \n",
            "  inflating: data/obj/masked (1610).jpg  \n",
            "  inflating: data/obj/masked (1610).txt  \n",
            "  inflating: data/obj/masked (1611).jpg  \n",
            "  inflating: data/obj/masked (1611).txt  \n",
            "  inflating: data/obj/masked (1612).jpg  \n",
            "  inflating: data/obj/masked (1612).txt  \n",
            "  inflating: data/obj/masked (1613).jpg  \n",
            "  inflating: data/obj/masked (1613).txt  \n",
            "  inflating: data/obj/masked (1614).jpg  \n",
            "  inflating: data/obj/masked (1614).txt  \n",
            "  inflating: data/obj/masked (1615).jpg  \n",
            "  inflating: data/obj/masked (1615).txt  \n",
            "  inflating: data/obj/masked (1616).jpg  \n",
            "  inflating: data/obj/masked (1616).txt  \n",
            "  inflating: data/obj/masked (1617).jpg  \n",
            "  inflating: data/obj/masked (1617).txt  \n",
            "  inflating: data/obj/masked (1618).jpg  \n",
            "  inflating: data/obj/masked (1618).txt  \n",
            "  inflating: data/obj/masked (1619).jpg  \n",
            "  inflating: data/obj/masked (1619).txt  \n",
            "  inflating: data/obj/masked (1620).jpg  \n",
            "  inflating: data/obj/masked (1620).txt  \n",
            "  inflating: data/obj/masked (1621).jpg  \n",
            "  inflating: data/obj/masked (1621).txt  \n",
            "  inflating: data/obj/masked (1622).jpg  \n",
            "  inflating: data/obj/masked (1622).txt  \n",
            "  inflating: data/obj/masked (1623).jpg  \n",
            "  inflating: data/obj/masked (1623).txt  \n",
            "  inflating: data/obj/masked (1624).jpg  \n",
            "  inflating: data/obj/masked (1624).txt  \n",
            "  inflating: data/obj/masked (1625).jpg  \n",
            "  inflating: data/obj/masked (1625).txt  \n",
            "  inflating: data/obj/masked (1626).jpg  \n",
            "  inflating: data/obj/masked (1626).txt  \n",
            "  inflating: data/obj/masked (1627).jpg  \n",
            "  inflating: data/obj/masked (1627).txt  \n",
            "  inflating: data/obj/masked (1628).jpg  \n",
            "  inflating: data/obj/masked (1628).txt  \n",
            "  inflating: data/obj/masked (1629).jpg  \n",
            "  inflating: data/obj/masked (1629).txt  \n",
            "  inflating: data/obj/masked (1630).jpg  \n",
            "  inflating: data/obj/masked (1630).txt  \n",
            "  inflating: data/obj/masked (1631).jpg  \n",
            "  inflating: data/obj/masked (1631).txt  \n",
            "  inflating: data/obj/masked (1632).jpg  \n",
            "  inflating: data/obj/masked (1632).txt  \n",
            "  inflating: data/obj/masked (1633).jpg  \n",
            "  inflating: data/obj/masked (1633).txt  \n",
            "  inflating: data/obj/masked (1634).jpg  \n",
            "  inflating: data/obj/masked (1634).txt  \n",
            "  inflating: data/obj/masked (1635).jpg  \n",
            "  inflating: data/obj/masked (1635).txt  \n",
            "  inflating: data/obj/masked (1636).jpg  \n",
            "  inflating: data/obj/masked (1636).txt  \n",
            "  inflating: data/obj/masked (1637).jpg  \n",
            "  inflating: data/obj/masked (1637).txt  \n",
            "  inflating: data/obj/masked (1638).jpg  \n",
            "  inflating: data/obj/masked (1638).txt  \n",
            "  inflating: data/obj/masked (1639).jpg  \n",
            "  inflating: data/obj/masked (1639).txt  \n",
            "  inflating: data/obj/masked (1640).jpg  \n",
            "  inflating: data/obj/masked (1640).txt  \n",
            "  inflating: data/obj/masked (1641).jpg  \n",
            "  inflating: data/obj/masked (1641).txt  \n",
            "  inflating: data/obj/masked (1642).jpg  \n",
            "  inflating: data/obj/masked (1642).txt  \n",
            "  inflating: data/obj/masked (1643).jpg  \n",
            "  inflating: data/obj/masked (1643).txt  \n",
            "  inflating: data/obj/masked (1644).jpg  \n",
            "  inflating: data/obj/masked (1644).txt  \n",
            "  inflating: data/obj/masked (1645).jpg  \n",
            "  inflating: data/obj/masked (1645).txt  \n",
            "  inflating: data/obj/masked (1646).jpg  \n",
            "  inflating: data/obj/masked (1646).txt  \n",
            "  inflating: data/obj/masked (1647).jpg  \n",
            "  inflating: data/obj/masked (1647).txt  \n",
            "  inflating: data/obj/masked (1648).jpg  \n",
            "  inflating: data/obj/masked (1648).txt  \n",
            "  inflating: data/obj/masked (1649).jpg  \n",
            "  inflating: data/obj/masked (1649).txt  \n",
            "  inflating: data/obj/masked (1650).jpg  \n",
            "  inflating: data/obj/masked (1650).txt  \n",
            "  inflating: data/obj/masked (1651).jpg  \n",
            "  inflating: data/obj/masked (1651).txt  \n",
            "  inflating: data/obj/masked (1652).jpg  \n",
            "  inflating: data/obj/masked (1652).txt  \n",
            "  inflating: data/obj/masked (1653).jpg  \n",
            "  inflating: data/obj/masked (1653).txt  \n",
            "  inflating: data/obj/masked (1654).jpg  \n",
            "  inflating: data/obj/masked (1654).txt  \n",
            "  inflating: data/obj/masked (1655).jpg  \n",
            "  inflating: data/obj/masked (1655).txt  \n",
            "  inflating: data/obj/masked (1656).jpg  \n",
            "  inflating: data/obj/masked (1656).txt  \n",
            "  inflating: data/obj/masked (1657).jpg  \n",
            "  inflating: data/obj/masked (1657).txt  \n",
            "  inflating: data/obj/masked (1658).jpg  \n",
            "  inflating: data/obj/masked (1658).txt  \n",
            "  inflating: data/obj/masked (1659).jpg  \n",
            "  inflating: data/obj/masked (1659).txt  \n",
            "  inflating: data/obj/masked (1660).jpg  \n",
            "  inflating: data/obj/masked (1660).txt  \n",
            "  inflating: data/obj/masked (1661).jpg  \n",
            "  inflating: data/obj/masked (1661).txt  \n",
            "  inflating: data/obj/masked (1662).jpg  \n",
            "  inflating: data/obj/masked (1662).txt  \n",
            "  inflating: data/obj/masked (1663).jpg  \n",
            "  inflating: data/obj/masked (1663).txt  \n",
            "  inflating: data/obj/masked (1664).jpg  \n",
            "  inflating: data/obj/masked (1664).txt  \n",
            "  inflating: data/obj/masked (1665).jpg  \n",
            "  inflating: data/obj/masked (1665).txt  \n",
            "  inflating: data/obj/masked (1666).jpg  \n",
            "  inflating: data/obj/masked (1666).txt  \n",
            "  inflating: data/obj/masked (1667).jpg  \n",
            "  inflating: data/obj/masked (1667).txt  \n",
            "  inflating: data/obj/masked (1668).jpg  \n",
            "  inflating: data/obj/masked (1668).txt  \n",
            "  inflating: data/obj/masked (1669).jpg  \n",
            "  inflating: data/obj/masked (1669).txt  \n",
            "  inflating: data/obj/masked (1670).jpg  \n",
            "  inflating: data/obj/masked (1670).txt  \n",
            "  inflating: data/obj/masked (1671).jpg  \n",
            "  inflating: data/obj/masked (1671).txt  \n",
            "  inflating: data/obj/masked (1672).jpg  \n",
            "  inflating: data/obj/masked (1672).txt  \n",
            "  inflating: data/obj/masked (1673).jpg  \n",
            "  inflating: data/obj/masked (1673).txt  \n",
            "  inflating: data/obj/masked (1674).jpg  \n",
            "  inflating: data/obj/masked (1674).txt  \n",
            "  inflating: data/obj/masked (1675).jpg  \n",
            "  inflating: data/obj/masked (1675).txt  \n",
            "  inflating: data/obj/masked (1676).jpg  \n",
            "  inflating: data/obj/masked (1676).txt  \n",
            "  inflating: data/obj/masked (1677).jpg  \n",
            "  inflating: data/obj/masked (1677).txt  \n",
            "  inflating: data/obj/masked (1678).jpg  \n",
            "  inflating: data/obj/masked (1678).txt  \n",
            "  inflating: data/obj/masked (1680).jpg  \n",
            "  inflating: data/obj/masked (1680).txt  \n",
            "  inflating: data/obj/masked (1681).jpg  \n",
            "  inflating: data/obj/masked (1681).txt  \n",
            "  inflating: data/obj/masked (1682).jpg  \n",
            "  inflating: data/obj/masked (1682).txt  \n",
            "  inflating: data/obj/masked (1683).jpg  \n",
            "  inflating: data/obj/masked (1683).txt  \n",
            "  inflating: data/obj/masked (1684).jpg  \n",
            "  inflating: data/obj/masked (1684).txt  \n",
            "  inflating: data/obj/masked (1685).jpg  \n",
            "  inflating: data/obj/masked (1685).txt  \n",
            "  inflating: data/obj/masked (1686).jpg  \n",
            "  inflating: data/obj/masked (1686).txt  \n",
            "  inflating: data/obj/masked (1687).jpg  \n",
            "  inflating: data/obj/masked (1687).txt  \n",
            "  inflating: data/obj/masked (1688).jpg  \n",
            "  inflating: data/obj/masked (1688).txt  \n",
            "  inflating: data/obj/masked (1690).jpg  \n",
            "  inflating: data/obj/masked (1690).txt  \n",
            "  inflating: data/obj/masked (1691).jpg  \n",
            "  inflating: data/obj/masked (1691).txt  \n",
            "  inflating: data/obj/masked (1692).jpg  \n",
            "  inflating: data/obj/masked (1692).txt  \n",
            "  inflating: data/obj/masked (1693).jpg  \n",
            "  inflating: data/obj/masked (1693).txt  \n",
            "  inflating: data/obj/masked (1694).jpg  \n",
            "  inflating: data/obj/masked (1694).txt  \n",
            "  inflating: data/obj/masked (1695).jpg  \n",
            "  inflating: data/obj/masked (1695).txt  \n",
            "  inflating: data/obj/masked (1696).jpg  \n",
            "  inflating: data/obj/masked (1696).txt  \n",
            "  inflating: data/obj/masked (1697).jpg  \n",
            "  inflating: data/obj/masked (1697).txt  \n",
            "  inflating: data/obj/masked (1698).jpg  \n",
            "  inflating: data/obj/masked (1698).txt  \n",
            "  inflating: data/obj/masked (1699).jpg  \n",
            "  inflating: data/obj/masked (1699).txt  \n",
            "  inflating: data/obj/masked (1700).jpg  \n",
            "  inflating: data/obj/masked (1700).txt  \n",
            "  inflating: data/obj/masked (1701).jpg  \n",
            "  inflating: data/obj/masked (1701).txt  \n",
            "  inflating: data/obj/masked (1702).jpg  \n",
            "  inflating: data/obj/masked (1702).txt  \n",
            "  inflating: data/obj/masked (1703).jpg  \n",
            "  inflating: data/obj/masked (1703).txt  \n",
            "  inflating: data/obj/masked (1861).jpg  \n",
            "  inflating: data/obj/masked (1861).txt  \n",
            "  inflating: data/obj/masked (1862).jpg  \n",
            "  inflating: data/obj/masked (1862).txt  \n",
            "  inflating: data/obj/masked (1863).jpg  \n",
            "  inflating: data/obj/masked (1863).txt  \n",
            "  inflating: data/obj/masked (1864).jpg  \n",
            "  inflating: data/obj/masked (1864).txt  \n",
            "  inflating: data/obj/masked (1865).jpg  \n",
            "  inflating: data/obj/masked (1865).txt  \n",
            "  inflating: data/obj/masked (1866).jpg  \n",
            "  inflating: data/obj/masked (1866).txt  \n",
            "  inflating: data/obj/masked (1867).jpg  \n",
            "  inflating: data/obj/masked (1867).txt  \n",
            "  inflating: data/obj/masked (1868).jpg  \n",
            "  inflating: data/obj/masked (1868).txt  \n",
            "  inflating: data/obj/masked (1869).jpg  \n",
            "  inflating: data/obj/masked (1869).txt  \n",
            "  inflating: data/obj/masked (1870).jpg  \n",
            "  inflating: data/obj/masked (1870).txt  \n",
            "  inflating: data/obj/masked (1871).jpg  \n",
            "  inflating: data/obj/masked (1871).txt  \n",
            "  inflating: data/obj/masked (1872).jpg  \n",
            "  inflating: data/obj/masked (1872).txt  \n",
            "  inflating: data/obj/masked (1873).jpg  \n",
            "  inflating: data/obj/masked (1873).txt  \n",
            "  inflating: data/obj/masked (1874).jpg  \n",
            "  inflating: data/obj/masked (1874).txt  \n",
            "  inflating: data/obj/masked (1875).jpg  \n",
            "  inflating: data/obj/masked (1875).txt  \n",
            "  inflating: data/obj/masked (1876).jpg  \n",
            "  inflating: data/obj/masked (1876).txt  \n",
            "  inflating: data/obj/masked (1877).jpg  \n",
            "  inflating: data/obj/masked (1877).txt  \n",
            "  inflating: data/obj/masked (1878).jpg  \n",
            "  inflating: data/obj/masked (1878).txt  \n",
            "  inflating: data/obj/masked (1879).jpg  \n",
            "  inflating: data/obj/masked (1879).txt  \n",
            "  inflating: data/obj/masked (1880).jpg  \n",
            "  inflating: data/obj/masked (1880).txt  \n",
            "  inflating: data/obj/masked (1881).jpg  \n",
            "  inflating: data/obj/masked (1881).txt  \n",
            "  inflating: data/obj/masked (1882).jpg  \n",
            "  inflating: data/obj/masked (1882).txt  \n",
            "  inflating: data/obj/masked (1883).jpg  \n",
            "  inflating: data/obj/masked (1883).txt  \n",
            "  inflating: data/obj/masked (1884).jpg  \n",
            "  inflating: data/obj/masked (1884).txt  \n",
            "  inflating: data/obj/masked (1885).jpg  \n",
            "  inflating: data/obj/masked (1885).txt  \n",
            "  inflating: data/obj/masked (1886).jpg  \n",
            "  inflating: data/obj/masked (1886).txt  \n",
            "  inflating: data/obj/masked (1887).jpg  \n",
            "  inflating: data/obj/masked (1887).txt  \n",
            "  inflating: data/obj/masked (1888).jpg  \n",
            "  inflating: data/obj/masked (1888).txt  \n",
            "  inflating: data/obj/masked (1889).jpg  \n",
            "  inflating: data/obj/masked (1889).txt  \n",
            "  inflating: data/obj/masked (1890).jpg  \n",
            "  inflating: data/obj/masked (1890).txt  \n",
            "  inflating: data/obj/masked (1891).jpg  \n",
            "  inflating: data/obj/masked (1891).txt  \n",
            "  inflating: data/obj/masked (1892).jpg  \n",
            "  inflating: data/obj/masked (1892).txt  \n",
            "  inflating: data/obj/masked (1893).jpg  \n",
            "  inflating: data/obj/masked (1893).txt  \n",
            "  inflating: data/obj/masked (1894).jpg  \n",
            "  inflating: data/obj/masked (1894).txt  \n",
            "  inflating: data/obj/masked (1895).jpg  \n",
            "  inflating: data/obj/masked (1895).txt  \n",
            "  inflating: data/obj/masked (1896).jpg  \n",
            "  inflating: data/obj/masked (1896).txt  \n",
            "  inflating: data/obj/masked (1897).jpg  \n",
            "  inflating: data/obj/masked (1897).txt  \n",
            "  inflating: data/obj/masked (1898).jpg  \n",
            "  inflating: data/obj/masked (1898).txt  \n",
            "  inflating: data/obj/masked (1899).jpg  \n",
            "  inflating: data/obj/masked (1899).txt  \n",
            "  inflating: data/obj/masked (1900).jpg  \n",
            "  inflating: data/obj/masked (1900).txt  \n",
            "  inflating: data/obj/masked (1901).jpg  \n",
            "  inflating: data/obj/masked (1901).txt  \n",
            "  inflating: data/obj/masked (1902).jpg  \n",
            "  inflating: data/obj/masked (1902).txt  \n",
            "  inflating: data/obj/masked (1903).jpg  \n",
            "  inflating: data/obj/masked (1903).txt  \n",
            "  inflating: data/obj/masked (1904).jpg  \n",
            "  inflating: data/obj/masked (1904).txt  \n",
            "  inflating: data/obj/masked (1905).jpg  \n",
            "  inflating: data/obj/masked (1905).txt  \n",
            "  inflating: data/obj/masked (1906).jpg  \n",
            "  inflating: data/obj/masked (1906).txt  \n",
            "  inflating: data/obj/masked (1907).jpg  \n",
            "  inflating: data/obj/masked (1907).txt  \n",
            "  inflating: data/obj/masked (1908).jpg  \n",
            "  inflating: data/obj/masked (1908).txt  \n",
            "  inflating: data/obj/masked (1909).jpg  \n",
            "  inflating: data/obj/masked (1909).txt  \n",
            "  inflating: data/obj/masked (1910).jpg  \n",
            "  inflating: data/obj/masked (1910).txt  \n",
            "  inflating: data/obj/masked (1911).jpg  \n",
            "  inflating: data/obj/masked (1911).txt  \n",
            "  inflating: data/obj/masked (1912).jpg  \n",
            "  inflating: data/obj/masked (1912).txt  \n",
            "  inflating: data/obj/masked (1913).jpg  \n",
            "  inflating: data/obj/masked (1913).txt  \n",
            "  inflating: data/obj/masked (1914).jpg  \n",
            "  inflating: data/obj/masked (1914).txt  \n",
            "  inflating: data/obj/masked (1915).jpg  \n",
            "  inflating: data/obj/masked (1915).txt  \n",
            "  inflating: data/obj/masked (3).jpg  \n",
            "  inflating: data/obj/masked (3).txt  \n",
            "  inflating: data/obj/masked (4).jpg  \n",
            "  inflating: data/obj/masked (4).txt  \n",
            "  inflating: data/obj/masked (5).jpg  \n",
            "  inflating: data/obj/masked (5).txt  \n",
            "  inflating: data/obj/masked (6).jpg  \n",
            "  inflating: data/obj/masked (6).txt  \n",
            "  inflating: data/obj/masked (7).jpg  \n",
            "  inflating: data/obj/masked (7).txt  \n",
            "  inflating: data/obj/masked (8).jpg  \n",
            "  inflating: data/obj/masked (8).txt  \n",
            "  inflating: data/obj/masked (9).jpg  \n",
            "  inflating: data/obj/masked (9).txt  \n",
            "  inflating: data/obj/pra1.jpg       \n",
            "  inflating: data/obj/pra1.txt       \n",
            "  inflating: data/obj/pra2.jpg       \n",
            "  inflating: data/obj/pra2.txt       \n",
            "  inflating: data/obj/pra3.jpg       \n",
            "  inflating: data/obj/pra3.txt       \n",
            "  inflating: data/obj/prajna.jpg     \n",
            "  inflating: data/obj/prajna.txt     \n",
            "  inflating: data/obj/unmasked (1250).jpg  \n",
            "  inflating: data/obj/unmasked (1250).txt  \n",
            "  inflating: data/obj/unmasked (1251).jpg  \n",
            "  inflating: data/obj/unmasked (1251).txt  \n",
            "  inflating: data/obj/unmasked (1252).jpg  \n",
            "  inflating: data/obj/unmasked (1252).txt  \n",
            "  inflating: data/obj/unmasked (1253).jpg  \n",
            "  inflating: data/obj/unmasked (1253).txt  \n",
            "  inflating: data/obj/unmasked (1255).jpg  \n",
            "  inflating: data/obj/unmasked (1255).txt  \n",
            "  inflating: data/obj/unmasked (1256).jpg  \n",
            "  inflating: data/obj/unmasked (1256).txt  \n",
            "  inflating: data/obj/unmasked (1257).jpg  \n",
            "  inflating: data/obj/unmasked (1257).txt  \n",
            "  inflating: data/obj/unmasked (1260).jpg  \n",
            "  inflating: data/obj/unmasked (1260).txt  \n",
            "  inflating: data/obj/unmasked (1261).jpg  \n",
            "  inflating: data/obj/unmasked (1261).txt  \n",
            "  inflating: data/obj/unmasked (1262).jpg  \n",
            "  inflating: data/obj/unmasked (1262).txt  \n",
            "  inflating: data/obj/unmasked (1263).jpg  \n",
            "  inflating: data/obj/unmasked (1263).txt  \n",
            "  inflating: data/obj/unmasked (1264).jpg  \n",
            "  inflating: data/obj/unmasked (1264).txt  \n",
            "  inflating: data/obj/unmasked (1265).jpg  \n",
            "  inflating: data/obj/unmasked (1265).txt  \n",
            "  inflating: data/obj/unmasked (1266).jpg  \n",
            "  inflating: data/obj/unmasked (1266).txt  \n",
            "  inflating: data/obj/unmasked (1267).jpg  \n",
            "  inflating: data/obj/unmasked (1267).txt  \n",
            "  inflating: data/obj/unmasked (1268).jpg  \n",
            "  inflating: data/obj/unmasked (1268).txt  \n",
            "  inflating: data/obj/unmasked (1269).jpg  \n",
            "  inflating: data/obj/unmasked (1269).txt  \n",
            "  inflating: data/obj/unmasked (1270).jpg  \n",
            "  inflating: data/obj/unmasked (1270).txt  \n",
            "  inflating: data/obj/unmasked (1271).jpg  \n",
            "  inflating: data/obj/unmasked (1271).txt  \n",
            "  inflating: data/obj/unmasked (1272).jpg  \n",
            "  inflating: data/obj/unmasked (1272).txt  \n",
            "  inflating: data/obj/unmasked (1274).jpg  \n",
            "  inflating: data/obj/unmasked (1274).txt  \n",
            "  inflating: data/obj/unmasked (1275).jpg  \n",
            "  inflating: data/obj/unmasked (1275).txt  \n",
            "  inflating: data/obj/unmasked (1276).jpg  \n",
            "  inflating: data/obj/unmasked (1276).txt  \n",
            "  inflating: data/obj/unmasked (1277).jpg  \n",
            "  inflating: data/obj/unmasked (1277).txt  \n",
            "  inflating: data/obj/unmasked (1278).jpg  \n",
            "  inflating: data/obj/unmasked (1278).txt  \n",
            "  inflating: data/obj/unmasked (1279).jpg  \n",
            "  inflating: data/obj/unmasked (1279).txt  \n",
            "  inflating: data/obj/unmasked (1280).jpg  \n",
            "  inflating: data/obj/unmasked (1280).txt  \n",
            "  inflating: data/obj/unmasked (1282).jpg  \n",
            "  inflating: data/obj/unmasked (1282).txt  \n",
            "  inflating: data/obj/unmasked (1285).jpg  \n",
            "  inflating: data/obj/unmasked (1285).txt  \n",
            "  inflating: data/obj/unmasked (1286).jpg  \n",
            "  inflating: data/obj/unmasked (1286).txt  \n",
            "  inflating: data/obj/unmasked (1287).jpg  \n",
            "  inflating: data/obj/unmasked (1287).txt  \n",
            "  inflating: data/obj/unmasked (1288).jpg  \n",
            "  inflating: data/obj/unmasked (1288).txt  \n",
            "  inflating: data/obj/unmasked (1289).jpg  \n",
            "  inflating: data/obj/unmasked (1289).txt  \n",
            "  inflating: data/obj/unmasked (1290).jpg  \n",
            "  inflating: data/obj/unmasked (1290).txt  \n",
            "  inflating: data/obj/unmasked (1291).jpg  \n",
            "  inflating: data/obj/unmasked (1291).txt  \n",
            "  inflating: data/obj/unmasked (1292).jpg  \n",
            "  inflating: data/obj/unmasked (1292).txt  \n",
            "  inflating: data/obj/unmasked (1293).jpg  \n",
            "  inflating: data/obj/unmasked (1293).txt  \n",
            "  inflating: data/obj/unmasked (1295).jpg  \n",
            "  inflating: data/obj/unmasked (1295).txt  \n",
            "  inflating: data/obj/unmasked (1297).jpg  \n",
            "  inflating: data/obj/unmasked (1297).txt  \n",
            "  inflating: data/obj/unmasked (1298).jpg  \n",
            "  inflating: data/obj/unmasked (1298).txt  \n",
            "  inflating: data/obj/unmasked (1299).jpg  \n",
            "  inflating: data/obj/unmasked (1299).txt  \n",
            "  inflating: data/obj/unmasked (1301).jpg  \n",
            "  inflating: data/obj/unmasked (1301).txt  \n",
            "  inflating: data/obj/unmasked (1302).jpg  \n",
            "  inflating: data/obj/unmasked (1302).txt  \n",
            "  inflating: data/obj/unmasked (1303).jpg  \n",
            "  inflating: data/obj/unmasked (1303).txt  \n",
            "  inflating: data/obj/unmasked (1304).jpg  \n",
            "  inflating: data/obj/unmasked (1304).txt  \n",
            "  inflating: data/obj/unmasked (1306).jpg  \n",
            "  inflating: data/obj/unmasked (1306).txt  \n",
            "  inflating: data/obj/unmasked (1307).jpg  \n",
            "  inflating: data/obj/unmasked (1307).txt  \n",
            "  inflating: data/obj/unmasked (1308).jpg  \n",
            "  inflating: data/obj/unmasked (1308).txt  \n",
            "  inflating: data/obj/unmasked (1309).jpg  \n",
            "  inflating: data/obj/unmasked (1309).txt  \n",
            "  inflating: data/obj/unmasked (1310).jpg  \n",
            "  inflating: data/obj/unmasked (1310).txt  \n",
            "  inflating: data/obj/unmasked (1311).jpg  \n",
            "  inflating: data/obj/unmasked (1311).txt  \n",
            "  inflating: data/obj/unmasked (1312).jpg  \n",
            "  inflating: data/obj/unmasked (1312).txt  \n",
            "  inflating: data/obj/unmasked (1313).jpg  \n",
            "  inflating: data/obj/unmasked (1313).txt  \n",
            "  inflating: data/obj/unmasked (1314).jpg  \n",
            "  inflating: data/obj/unmasked (1314).txt  \n",
            "  inflating: data/obj/unmasked (1315).jpg  \n",
            "  inflating: data/obj/unmasked (1315).txt  \n",
            "  inflating: data/obj/unmasked (1316).jpg  \n",
            "  inflating: data/obj/unmasked (1316).txt  \n",
            "  inflating: data/obj/unmasked (1317).jpg  \n",
            "  inflating: data/obj/unmasked (1317).txt  \n",
            "  inflating: data/obj/unmasked (1318).jpg  \n",
            "  inflating: data/obj/unmasked (1318).txt  \n",
            "  inflating: data/obj/unmasked (1319).jpg  \n",
            "  inflating: data/obj/unmasked (1319).txt  \n",
            "  inflating: data/obj/unmasked (1321).jpg  \n",
            "  inflating: data/obj/unmasked (1321).txt  \n",
            "  inflating: data/obj/unmasked (1322).jpg  \n",
            "  inflating: data/obj/unmasked (1322).txt  \n",
            "  inflating: data/obj/unmasked (1323).jpg  \n",
            "  inflating: data/obj/unmasked (1323).txt  \n",
            "  inflating: data/obj/unmasked (1324).jpg  \n",
            "  inflating: data/obj/unmasked (1324).txt  \n",
            "  inflating: data/obj/unmasked (1325).jpg  \n",
            "  inflating: data/obj/unmasked (1325).txt  \n",
            "  inflating: data/obj/unmasked (1326).jpg  \n",
            "  inflating: data/obj/unmasked (1326).txt  \n",
            "  inflating: data/obj/unmasked (1327).jpg  \n",
            "  inflating: data/obj/unmasked (1327).txt  \n",
            "  inflating: data/obj/unmasked (1328).jpg  \n",
            "  inflating: data/obj/unmasked (1328).txt  \n",
            "  inflating: data/obj/unmasked (1329).jpg  \n",
            "  inflating: data/obj/unmasked (1329).txt  \n",
            "  inflating: data/obj/unmasked (1330).jpg  \n",
            "  inflating: data/obj/unmasked (1330).txt  \n",
            "  inflating: data/obj/unmasked (1331).jpg  \n",
            "  inflating: data/obj/unmasked (1331).txt  \n",
            "  inflating: data/obj/unmasked (1332).jpg  \n",
            "  inflating: data/obj/unmasked (1332).txt  \n",
            "  inflating: data/obj/unmasked (1333).jpg  \n",
            "  inflating: data/obj/unmasked (1333).txt  \n",
            "  inflating: data/obj/unmasked (1334).jpg  \n",
            "  inflating: data/obj/unmasked (1334).txt  \n",
            "  inflating: data/obj/unmasked (1335).jpg  \n",
            "  inflating: data/obj/unmasked (1335).txt  \n",
            "  inflating: data/obj/unmasked (1336).jpg  \n",
            "  inflating: data/obj/unmasked (1336).txt  \n",
            "  inflating: data/obj/unmasked (1337).jpg  \n",
            "  inflating: data/obj/unmasked (1337).txt  \n",
            "  inflating: data/obj/unmasked (1338).jpg  \n",
            "  inflating: data/obj/unmasked (1338).txt  \n",
            "  inflating: data/obj/unmasked (1339).jpg  \n",
            "  inflating: data/obj/unmasked (1339).txt  \n",
            "  inflating: data/obj/unmasked (1340).jpg  \n",
            "  inflating: data/obj/unmasked (1340).txt  \n",
            "  inflating: data/obj/unmasked (1341).jpg  \n",
            "  inflating: data/obj/unmasked (1341).txt  \n",
            "  inflating: data/obj/unmasked (1342).jpg  \n",
            "  inflating: data/obj/unmasked (1342).txt  \n",
            "  inflating: data/obj/unmasked (1343).jpg  \n",
            "  inflating: data/obj/unmasked (1343).txt  \n",
            "  inflating: data/obj/unmasked (1344).jpg  \n",
            "  inflating: data/obj/unmasked (1344).txt  \n",
            "  inflating: data/obj/unmasked (1372).jpg  \n",
            "  inflating: data/obj/unmasked (1372).txt  \n",
            "  inflating: data/obj/unmasked (1374).jpg  \n",
            "  inflating: data/obj/unmasked (1374).txt  \n",
            "  inflating: data/obj/unmasked (1375).jpg  \n",
            "  inflating: data/obj/unmasked (1375).txt  \n",
            "  inflating: data/obj/unmasked (1376).jpg  \n",
            "  inflating: data/obj/unmasked (1376).txt  \n",
            "  inflating: data/obj/unmasked (1377).jpg  \n",
            "  inflating: data/obj/unmasked (1377).txt  \n",
            "  inflating: data/obj/unmasked (1378).jpg  \n",
            "  inflating: data/obj/unmasked (1378).txt  \n",
            "  inflating: data/obj/unmasked (1380).jpg  \n",
            "  inflating: data/obj/unmasked (1380).txt  \n",
            "  inflating: data/obj/unmasked (1381).jpg  \n",
            "  inflating: data/obj/unmasked (1381).txt  \n",
            "  inflating: data/obj/unmasked (1382).jpg  \n",
            "  inflating: data/obj/unmasked (1382).txt  \n",
            "  inflating: data/obj/unmasked (1383).jpg  \n",
            "  inflating: data/obj/unmasked (1383).txt  \n",
            "  inflating: data/obj/unmasked (1384).jpg  \n",
            "  inflating: data/obj/unmasked (1384).txt  \n",
            "  inflating: data/obj/unmasked (1385).jpg  \n",
            "  inflating: data/obj/unmasked (1385).txt  \n",
            "  inflating: data/obj/unmasked (1386).jpg  \n",
            "  inflating: data/obj/unmasked (1386).txt  \n",
            "  inflating: data/obj/unmasked (1387).jpg  \n",
            "  inflating: data/obj/unmasked (1387).txt  \n",
            "  inflating: data/obj/unmasked (1388).jpg  \n",
            "  inflating: data/obj/unmasked (1388).txt  \n",
            "  inflating: data/obj/unmasked (1389).jpg  \n",
            "  inflating: data/obj/unmasked (1389).txt  \n",
            "  inflating: data/obj/unmasked (1390).jpg  \n",
            "  inflating: data/obj/unmasked (1390).txt  \n",
            "  inflating: data/obj/unmasked (1391).jpg  \n",
            "  inflating: data/obj/unmasked (1391).txt  \n",
            "  inflating: data/obj/unmasked (1392).jpg  \n",
            "  inflating: data/obj/unmasked (1392).txt  \n",
            "  inflating: data/obj/unmasked (1393).jpg  \n",
            "  inflating: data/obj/unmasked (1393).txt  \n",
            "  inflating: data/obj/unmasked (1394).jpg  \n",
            "  inflating: data/obj/unmasked (1394).txt  \n",
            "  inflating: data/obj/unmasked (1395).jpg  \n",
            "  inflating: data/obj/unmasked (1395).txt  \n",
            "  inflating: data/obj/unmasked (1396).jpg  \n",
            "  inflating: data/obj/unmasked (1396).txt  \n",
            "  inflating: data/obj/unmasked (1397).jpg  \n",
            "  inflating: data/obj/unmasked (1397).txt  \n",
            "  inflating: data/obj/unmasked (1398).jpg  \n",
            "  inflating: data/obj/unmasked (1398).txt  \n",
            "  inflating: data/obj/unmasked (1399).jpg  \n",
            "  inflating: data/obj/unmasked (1399).txt  \n",
            "  inflating: data/obj/unmasked (1400).jpg  \n",
            "  inflating: data/obj/unmasked (1400).txt  \n",
            "  inflating: data/obj/unmasked (1401).jpg  \n",
            "  inflating: data/obj/unmasked (1401).txt  \n",
            "  inflating: data/obj/unmasked (1402).jpg  \n",
            "  inflating: data/obj/unmasked (1402).txt  \n",
            "  inflating: data/obj/unmasked (1403).jpg  \n",
            "  inflating: data/obj/unmasked (1403).txt  \n",
            "  inflating: data/obj/unmasked (1404).jpg  \n",
            "  inflating: data/obj/unmasked (1404).txt  \n",
            "  inflating: data/obj/unmasked (1405).jpg  \n",
            "  inflating: data/obj/unmasked (1405).txt  \n",
            "  inflating: data/obj/unmasked (1406).jpg  \n",
            "  inflating: data/obj/unmasked (1406).txt  \n",
            "  inflating: data/obj/unmasked (1407).jpg  \n",
            "  inflating: data/obj/unmasked (1407).txt  \n",
            "  inflating: data/obj/unmasked (1408).jpg  \n",
            "  inflating: data/obj/unmasked (1408).txt  \n",
            "  inflating: data/obj/unmasked (1409).jpg  \n",
            "  inflating: data/obj/unmasked (1409).txt  \n",
            "  inflating: data/obj/unmasked (1410).jpg  \n",
            "  inflating: data/obj/unmasked (1410).txt  \n",
            "  inflating: data/obj/unmasked (1411).jpg  \n",
            "  inflating: data/obj/unmasked (1411).txt  \n",
            "  inflating: data/obj/unmasked (1412).jpg  \n",
            "  inflating: data/obj/unmasked (1412).txt  \n",
            "  inflating: data/obj/unmasked (1413).jpg  \n",
            "  inflating: data/obj/unmasked (1413).txt  \n",
            "  inflating: data/obj/unmasked (1414).jpg  \n",
            "  inflating: data/obj/unmasked (1414).txt  \n",
            "  inflating: data/obj/unmasked (1415).jpg  \n",
            "  inflating: data/obj/unmasked (1415).txt  \n",
            "  inflating: data/obj/unmasked (1416).jpg  \n",
            "  inflating: data/obj/unmasked (1416).txt  \n",
            "  inflating: data/obj/unmasked (1417).jpg  \n",
            "  inflating: data/obj/unmasked (1417).txt  \n",
            "  inflating: data/obj/unmasked (1418).jpg  \n",
            "  inflating: data/obj/unmasked (1418).txt  \n",
            "  inflating: data/obj/unmasked (1419).jpg  \n",
            "  inflating: data/obj/unmasked (1419).txt  \n",
            "  inflating: data/obj/unmasked (1420).jpg  \n",
            "  inflating: data/obj/unmasked (1420).txt  \n",
            "  inflating: data/obj/unmasked (1421).jpg  \n",
            "  inflating: data/obj/unmasked (1421).txt  \n",
            "  inflating: data/obj/unmasked (1422).jpg  \n",
            "  inflating: data/obj/unmasked (1422).txt  \n",
            "  inflating: data/obj/unmasked (1424).jpg  \n",
            "  inflating: data/obj/unmasked (1424).txt  \n",
            "  inflating: data/obj/unmasked (1425).jpg  \n",
            "  inflating: data/obj/unmasked (1425).txt  \n",
            "  inflating: data/obj/unmasked (1426).jpg  \n",
            "  inflating: data/obj/unmasked (1426).txt  \n",
            "  inflating: data/obj/unmasked (1427).jpg  \n",
            "  inflating: data/obj/unmasked (1427).txt  \n",
            "  inflating: data/obj/unmasked (1428).jpg  \n",
            "  inflating: data/obj/unmasked (1428).txt  \n",
            "  inflating: data/obj/unmasked (1429).jpg  \n",
            "  inflating: data/obj/unmasked (1429).txt  \n",
            "  inflating: data/obj/unmasked (1430).jpg  \n",
            "  inflating: data/obj/unmasked (1430).txt  \n",
            "  inflating: data/obj/unmasked (1432).jpg  \n",
            "  inflating: data/obj/unmasked (1432).txt  \n",
            "  inflating: data/obj/unmasked (1433).jpg  \n",
            "  inflating: data/obj/unmasked (1433).txt  \n",
            "  inflating: data/obj/unmasked (1434).jpg  \n",
            "  inflating: data/obj/unmasked (1434).txt  \n",
            "  inflating: data/obj/unmasked (1435).jpg  \n",
            "  inflating: data/obj/unmasked (1435).txt  \n",
            "  inflating: data/obj/unmasked (1436).jpg  \n",
            "  inflating: data/obj/unmasked (1436).txt  \n",
            "  inflating: data/obj/unmasked (1437).jpg  \n",
            "  inflating: data/obj/unmasked (1437).txt  \n",
            "  inflating: data/obj/unmasked (1438).jpg  \n",
            "  inflating: data/obj/unmasked (1438).txt  \n",
            "  inflating: data/obj/unmasked (1439).jpg  \n",
            "  inflating: data/obj/unmasked (1439).txt  \n",
            "  inflating: data/obj/unmasked (1440).jpg  \n",
            "  inflating: data/obj/unmasked (1440).txt  \n",
            "  inflating: data/obj/unmasked (1441).jpg  \n",
            "  inflating: data/obj/unmasked (1441).txt  \n",
            "  inflating: data/obj/unmasked (1442).jpg  \n",
            "  inflating: data/obj/unmasked (1442).txt  \n",
            "  inflating: data/obj/unmasked (1443).jpg  \n",
            "  inflating: data/obj/unmasked (1443).txt  \n",
            "  inflating: data/obj/unmasked (1444).jpg  \n",
            "  inflating: data/obj/unmasked (1444).txt  \n",
            "  inflating: data/obj/unmasked (1445).jpg  \n",
            "  inflating: data/obj/unmasked (1445).txt  \n",
            "  inflating: data/obj/unmasked (1446).jpg  \n",
            "  inflating: data/obj/unmasked (1446).txt  \n",
            "  inflating: data/obj/unmasked (1447).jpg  \n",
            "  inflating: data/obj/unmasked (1447).txt  \n",
            "  inflating: data/obj/unmasked (1448).jpg  \n",
            "  inflating: data/obj/unmasked (1448).txt  \n",
            "  inflating: data/obj/unmasked (1449).jpg  \n",
            "  inflating: data/obj/unmasked (1449).txt  \n",
            "  inflating: data/obj/unmasked (1450).jpg  \n",
            "  inflating: data/obj/unmasked (1450).txt  \n",
            "  inflating: data/obj/unmasked (1451).jpg  \n",
            "  inflating: data/obj/unmasked (1451).txt  \n",
            "  inflating: data/obj/unmasked (1452).jpg  \n",
            "  inflating: data/obj/unmasked (1452).txt  \n",
            "  inflating: data/obj/unmasked (1453).jpg  \n",
            "  inflating: data/obj/unmasked (1453).txt  \n",
            "  inflating: data/obj/unmasked (1454).jpg  \n",
            "  inflating: data/obj/unmasked (1454).txt  \n",
            "  inflating: data/obj/unmasked (1455).jpg  \n",
            "  inflating: data/obj/unmasked (1455).txt  \n",
            "  inflating: data/obj/unmasked (1456).jpg  \n",
            "  inflating: data/obj/unmasked (1456).txt  \n",
            "  inflating: data/obj/unmasked (1457).jpg  \n",
            "  inflating: data/obj/unmasked (1457).txt  \n",
            "  inflating: data/obj/unmasked (1458).jpg  \n",
            "  inflating: data/obj/unmasked (1458).txt  \n",
            "  inflating: data/obj/unmasked (1459).jpg  \n",
            "  inflating: data/obj/unmasked (1459).txt  \n",
            "  inflating: data/obj/unmasked (1460).jpg  \n",
            "  inflating: data/obj/unmasked (1460).txt  \n",
            "  inflating: data/obj/unmasked (1461).jpg  \n",
            "  inflating: data/obj/unmasked (1461).txt  \n",
            "  inflating: data/obj/unmasked (1462).jpg  \n",
            "  inflating: data/obj/unmasked (1462).txt  \n",
            "  inflating: data/obj/unmasked (1463).jpg  \n",
            "  inflating: data/obj/unmasked (1463).txt  \n",
            "  inflating: data/obj/unmasked (1464).jpg  \n",
            "  inflating: data/obj/unmasked (1464).txt  \n",
            "  inflating: data/obj/unmasked (1465).jpg  \n",
            "  inflating: data/obj/unmasked (1465).txt  \n",
            "  inflating: data/obj/unmasked (1466).jpg  \n",
            "  inflating: data/obj/unmasked (1466).txt  \n",
            "  inflating: data/obj/unmasked (1467).jpg  \n",
            "  inflating: data/obj/unmasked (1467).txt  \n",
            "  inflating: data/obj/unmasked (1468).jpg  \n",
            "  inflating: data/obj/unmasked (1468).txt  \n",
            "  inflating: data/obj/unmasked (1469).jpg  \n",
            "  inflating: data/obj/unmasked (1469).txt  \n",
            "  inflating: data/obj/unmasked (1470).jpg  \n",
            "  inflating: data/obj/unmasked (1470).txt  \n",
            "  inflating: data/obj/unmasked (1471).jpg  \n",
            "  inflating: data/obj/unmasked (1471).txt  \n",
            "  inflating: data/obj/unmasked (1472).jpg  \n",
            "  inflating: data/obj/unmasked (1472).txt  \n",
            "  inflating: data/obj/unmasked (1473).jpg  \n",
            "  inflating: data/obj/unmasked (1473).txt  \n",
            "  inflating: data/obj/unmasked (1475).jpg  \n",
            "  inflating: data/obj/unmasked (1475).txt  \n",
            "  inflating: data/obj/unmasked (1476).jpg  \n",
            "  inflating: data/obj/unmasked (1476).txt  \n",
            "  inflating: data/obj/unmasked (1477).jpg  \n",
            "  inflating: data/obj/unmasked (1477).txt  \n",
            "  inflating: data/obj/unmasked (1478).jpg  \n",
            "  inflating: data/obj/unmasked (1478).txt  \n",
            "  inflating: data/obj/unmasked (1479).jpg  \n",
            "  inflating: data/obj/unmasked (1479).txt  \n",
            "  inflating: data/obj/unmasked (1480).jpg  \n",
            "  inflating: data/obj/unmasked (1480).txt  \n",
            "  inflating: data/obj/unmasked (1481).jpg  \n",
            "  inflating: data/obj/unmasked (1481).txt  \n",
            "  inflating: data/obj/unmasked (1482).jpg  \n",
            "  inflating: data/obj/unmasked (1482).txt  \n",
            "  inflating: data/obj/unmasked (1483).jpg  \n",
            "  inflating: data/obj/unmasked (1483).txt  \n",
            "  inflating: data/obj/unmasked (1484).jpg  \n",
            "  inflating: data/obj/unmasked (1484).txt  \n",
            "  inflating: data/obj/unmasked (1485).jpg  \n",
            "  inflating: data/obj/unmasked (1485).txt  \n",
            "  inflating: data/obj/unmasked (1486).jpg  \n",
            "  inflating: data/obj/unmasked (1486).txt  \n",
            "  inflating: data/obj/unmasked (1487).jpg  \n",
            "  inflating: data/obj/unmasked (1487).txt  \n",
            "  inflating: data/obj/unmasked (1488).jpg  \n",
            "  inflating: data/obj/unmasked (1488).txt  \n",
            "  inflating: data/obj/unmasked (1489).jpg  \n",
            "  inflating: data/obj/unmasked (1489).txt  \n",
            "  inflating: data/obj/unmasked (1490).jpg  \n",
            "  inflating: data/obj/unmasked (1490).txt  \n",
            "  inflating: data/obj/unmasked (1491).jpg  \n",
            "  inflating: data/obj/unmasked (1491).txt  \n",
            "  inflating: data/obj/unmasked (1492).jpg  \n",
            "  inflating: data/obj/unmasked (1492).txt  \n",
            "  inflating: data/obj/unmasked (1493).jpg  \n",
            "  inflating: data/obj/unmasked (1493).txt  \n",
            "  inflating: data/obj/unmasked (1494).jpg  \n",
            "  inflating: data/obj/unmasked (1494).txt  \n",
            "  inflating: data/obj/unmasked (1495).jpg  \n",
            "  inflating: data/obj/unmasked (1495).txt  \n",
            "  inflating: data/obj/unmasked (1496).jpg  \n",
            "  inflating: data/obj/unmasked (1496).txt  \n",
            "  inflating: data/obj/unmasked (1497).jpg  \n",
            "  inflating: data/obj/unmasked (1497).txt  \n",
            "  inflating: data/obj/unmasked (1498).jpg  \n",
            "  inflating: data/obj/unmasked (1498).txt  \n",
            "  inflating: data/obj/unmasked (1499).jpg  \n",
            "  inflating: data/obj/unmasked (1499).txt  \n",
            "  inflating: data/obj/unmasked (1500).jpg  \n",
            "  inflating: data/obj/unmasked (1500).txt  \n",
            "  inflating: data/obj/unmasked (1501).jpg  \n",
            "  inflating: data/obj/unmasked (1501).txt  \n",
            "  inflating: data/obj/unmasked (1502).jpg  \n",
            "  inflating: data/obj/unmasked (1502).txt  \n",
            "  inflating: data/obj/unmasked (1503).jpg  \n",
            "  inflating: data/obj/unmasked (1503).txt  \n",
            "  inflating: data/obj/unmasked (1504).jpg  \n",
            "  inflating: data/obj/unmasked (1504).txt  \n",
            "  inflating: data/obj/unmasked (1505).jpg  \n",
            "  inflating: data/obj/unmasked (1505).txt  \n",
            "  inflating: data/obj/unmasked (1506).jpg  \n",
            "  inflating: data/obj/unmasked (1506).txt  \n",
            "  inflating: data/obj/unmasked (1507).jpg  \n",
            "  inflating: data/obj/unmasked (1507).txt  \n",
            "  inflating: data/obj/unmasked (1508).jpg  \n",
            "  inflating: data/obj/unmasked (1508).txt  \n",
            "  inflating: data/obj/unmasked (1509).jpg  \n",
            "  inflating: data/obj/unmasked (1509).txt  \n",
            "  inflating: data/obj/unmasked (1510).jpg  \n",
            "  inflating: data/obj/unmasked (1510).txt  \n",
            "  inflating: data/obj/unmasked (1511).jpg  \n",
            "  inflating: data/obj/unmasked (1511).txt  \n",
            "  inflating: data/obj/unmasked (1512).jpg  \n",
            "  inflating: data/obj/unmasked (1512).txt  \n",
            "  inflating: data/obj/unmasked (1513).jpg  \n",
            "  inflating: data/obj/unmasked (1513).txt  \n",
            "  inflating: data/obj/unmasked (1514).jpg  \n",
            "  inflating: data/obj/unmasked (1514).txt  \n",
            "  inflating: data/obj/unmasked (1515).jpg  \n",
            "  inflating: data/obj/unmasked (1515).txt  \n",
            "  inflating: data/obj/unmasked (1516).jpg  \n",
            "  inflating: data/obj/unmasked (1516).txt  \n",
            "  inflating: data/obj/unmasked (1517).jpg  \n",
            "  inflating: data/obj/unmasked (1517).txt  \n",
            "  inflating: data/obj/unmasked (1518).jpg  \n",
            "  inflating: data/obj/unmasked (1518).txt  \n",
            "  inflating: data/obj/unmasked (1519).jpg  \n",
            "  inflating: data/obj/unmasked (1519).txt  \n",
            "  inflating: data/obj/unmasked (1520).jpg  \n",
            "  inflating: data/obj/unmasked (1520).txt  \n",
            "  inflating: data/obj/unmasked (1521).jpg  \n",
            "  inflating: data/obj/unmasked (1521).txt  \n",
            "  inflating: data/obj/unmasked (1522).jpg  \n",
            "  inflating: data/obj/unmasked (1522).txt  \n",
            "  inflating: data/obj/unmasked (1523).jpg  \n",
            "  inflating: data/obj/unmasked (1523).txt  \n",
            "  inflating: data/obj/unmasked (1524).jpg  \n",
            "  inflating: data/obj/unmasked (1524).txt  \n",
            "  inflating: data/obj/unmasked (1525).jpg  \n",
            "  inflating: data/obj/unmasked (1525).txt  \n",
            "  inflating: data/obj/unmasked (1526).jpg  \n",
            "  inflating: data/obj/unmasked (1526).txt  \n",
            "  inflating: data/obj/unmasked (1527).jpg  \n",
            "  inflating: data/obj/unmasked (1527).txt  \n",
            "  inflating: data/obj/unmasked (1528).jpg  \n",
            "  inflating: data/obj/unmasked (1528).txt  \n",
            "  inflating: data/obj/unmasked (1529).jpg  \n",
            "  inflating: data/obj/unmasked (1529).txt  \n",
            "  inflating: data/obj/unmasked (1530).jpg  \n",
            "  inflating: data/obj/unmasked (1530).txt  \n",
            "  inflating: data/obj/unmasked (1531).jpg  \n",
            "  inflating: data/obj/unmasked (1531).txt  \n",
            "  inflating: data/obj/unmasked (1532).jpg  \n",
            "  inflating: data/obj/unmasked (1532).txt  \n",
            "  inflating: data/obj/unmasked (1533).jpg  \n",
            "  inflating: data/obj/unmasked (1533).txt  \n",
            "  inflating: data/obj/unmasked (1534).jpg  \n",
            "  inflating: data/obj/unmasked (1534).txt  \n",
            "  inflating: data/obj/unmasked (1535).jpg  \n",
            "  inflating: data/obj/unmasked (1535).txt  \n",
            "  inflating: data/obj/unmasked (1536).jpg  \n",
            "  inflating: data/obj/unmasked (1536).txt  \n",
            "  inflating: data/obj/unmasked (1537).jpg  \n",
            "  inflating: data/obj/unmasked (1537).txt  \n",
            "  inflating: data/obj/unmasked (1538).jpg  \n",
            "  inflating: data/obj/unmasked (1538).txt  \n",
            "  inflating: data/obj/unmasked (1539).jpg  \n",
            "  inflating: data/obj/unmasked (1539).txt  \n",
            "  inflating: data/obj/unmasked (1540).jpg  \n",
            "  inflating: data/obj/unmasked (1540).txt  \n",
            "  inflating: data/obj/unmasked (1541).jpg  \n",
            "  inflating: data/obj/unmasked (1541).txt  \n",
            "  inflating: data/obj/unmasked (1542).jpg  \n",
            "  inflating: data/obj/unmasked (1542).txt  \n",
            "  inflating: data/obj/unmasked (1543).jpg  \n",
            "  inflating: data/obj/unmasked (1543).txt  \n",
            "  inflating: data/obj/unmasked (1544).jpg  \n",
            "  inflating: data/obj/unmasked (1544).txt  \n",
            "  inflating: data/obj/unmasked (1545).jpg  \n",
            "  inflating: data/obj/unmasked (1545).txt  \n",
            "  inflating: data/obj/unmasked (1546).jpg  \n",
            "  inflating: data/obj/unmasked (1546).txt  \n",
            "  inflating: data/obj/unmasked (1547).jpg  \n",
            "  inflating: data/obj/unmasked (1547).txt  \n",
            "  inflating: data/obj/unmasked (1549).jpg  \n",
            "  inflating: data/obj/unmasked (1549).txt  \n",
            "  inflating: data/obj/unmasked (1550).jpg  \n",
            "  inflating: data/obj/unmasked (1550).txt  \n",
            "  inflating: data/obj/unmasked (1551).jpg  \n",
            "  inflating: data/obj/unmasked (1551).txt  \n",
            "  inflating: data/obj/unmasked (1552).jpg  \n",
            "  inflating: data/obj/unmasked (1552).txt  \n",
            "  inflating: data/obj/unmasked (1553).jpg  \n",
            "  inflating: data/obj/unmasked (1553).txt  \n",
            "  inflating: data/obj/unmasked (1554).jpg  \n",
            "  inflating: data/obj/unmasked (1554).txt  \n",
            "  inflating: data/obj/unmasked (1555).jpg  \n",
            "  inflating: data/obj/unmasked (1555).txt  \n",
            "  inflating: data/obj/unmasked (1556).jpg  \n",
            "  inflating: data/obj/unmasked (1556).txt  \n",
            "  inflating: data/obj/unmasked (1557).jpg  \n",
            "  inflating: data/obj/unmasked (1557).txt  \n",
            "  inflating: data/obj/unmasked (1558).jpg  \n",
            "  inflating: data/obj/unmasked (1558).txt  \n",
            "  inflating: data/obj/unmasked (1559).jpg  \n",
            "  inflating: data/obj/unmasked (1559).txt  \n",
            "  inflating: data/obj/unmasked (1560).jpg  \n",
            "  inflating: data/obj/unmasked (1560).txt  \n",
            "  inflating: data/obj/unmasked (1561).jpg  \n",
            "  inflating: data/obj/unmasked (1561).txt  \n",
            "  inflating: data/obj/unmasked (1562).jpg  \n",
            "  inflating: data/obj/unmasked (1562).txt  \n",
            "  inflating: data/obj/unmasked (1563).jpg  \n",
            "  inflating: data/obj/unmasked (1563).txt  \n",
            "  inflating: data/obj/unmasked (1564).jpg  \n",
            "  inflating: data/obj/unmasked (1564).txt  \n",
            "  inflating: data/obj/unmasked (1565).jpg  \n",
            "  inflating: data/obj/unmasked (1565).txt  \n",
            "  inflating: data/obj/unmasked (1566).jpg  \n",
            "  inflating: data/obj/unmasked (1566).txt  \n",
            "  inflating: data/obj/unmasked (1567).jpg  \n",
            "  inflating: data/obj/unmasked (1567).txt  \n",
            "  inflating: data/obj/unmasked (1568).jpg  \n",
            "  inflating: data/obj/unmasked (1568).txt  \n",
            "  inflating: data/obj/unmasked (1569).jpg  \n",
            "  inflating: data/obj/unmasked (1569).txt  \n",
            "  inflating: data/obj/unmasked (1570).jpg  \n",
            "  inflating: data/obj/unmasked (1570).txt  \n",
            "  inflating: data/obj/unmasked (1571).jpg  \n",
            "  inflating: data/obj/unmasked (1571).txt  \n",
            "  inflating: data/obj/unmasked (1572).jpg  \n",
            "  inflating: data/obj/unmasked (1572).txt  \n",
            "  inflating: data/obj/unmasked (1573).jpg  \n",
            "  inflating: data/obj/unmasked (1573).txt  \n",
            "  inflating: data/obj/unmasked (1574).jpg  \n",
            "  inflating: data/obj/unmasked (1574).txt  \n",
            "  inflating: data/obj/unmasked (1575).jpg  \n",
            "  inflating: data/obj/unmasked (1575).txt  \n",
            "  inflating: data/obj/unmasked (1576).jpg  \n",
            "  inflating: data/obj/unmasked (1576).txt  \n",
            "  inflating: data/obj/unmasked (1577).jpg  \n",
            "  inflating: data/obj/unmasked (1577).txt  \n",
            "  inflating: data/obj/unmasked (1578).jpg  \n",
            "  inflating: data/obj/unmasked (1578).txt  \n",
            "  inflating: data/obj/unmasked (1579).jpg  \n",
            "  inflating: data/obj/unmasked (1579).txt  \n",
            "  inflating: data/obj/unmasked (1580).jpg  \n",
            "  inflating: data/obj/unmasked (1580).txt  \n",
            "  inflating: data/obj/unmasked (1581).jpg  \n",
            "  inflating: data/obj/unmasked (1581).txt  \n",
            "  inflating: data/obj/unmasked (1582).jpg  \n",
            "  inflating: data/obj/unmasked (1582).txt  \n",
            "  inflating: data/obj/unmasked (1583).jpg  \n",
            "  inflating: data/obj/unmasked (1583).txt  \n",
            "  inflating: data/obj/unmasked (1584).jpg  \n",
            "  inflating: data/obj/unmasked (1584).txt  \n",
            "  inflating: data/obj/unmasked (1585).jpg  \n",
            "  inflating: data/obj/unmasked (1585).txt  \n",
            "  inflating: data/obj/unmasked (1586).jpg  \n",
            "  inflating: data/obj/unmasked (1586).txt  \n",
            "  inflating: data/obj/unmasked (1587).jpg  \n",
            "  inflating: data/obj/unmasked (1587).txt  \n",
            "  inflating: data/obj/unmasked (1588).jpg  \n",
            "  inflating: data/obj/unmasked (1588).txt  \n",
            "  inflating: data/obj/unmasked (1591).jpg  \n",
            "  inflating: data/obj/unmasked (1591).txt  \n",
            "  inflating: data/obj/unmasked (1592).jpg  \n",
            "  inflating: data/obj/unmasked (1592).txt  \n",
            "  inflating: data/obj/unmasked (1593).jpg  \n",
            "  inflating: data/obj/unmasked (1593).txt  \n",
            "  inflating: data/obj/unmasked (1594).jpg  \n",
            "  inflating: data/obj/unmasked (1594).txt  \n",
            "  inflating: data/obj/unmasked (1595).jpg  \n",
            "  inflating: data/obj/unmasked (1595).txt  \n",
            "  inflating: data/obj/unmasked (1596).jpg  \n",
            "  inflating: data/obj/unmasked (1596).txt  \n",
            "  inflating: data/obj/unmasked (1597).jpg  \n",
            "  inflating: data/obj/unmasked (1597).txt  \n",
            "  inflating: data/obj/unmasked (1598).jpg  \n",
            "  inflating: data/obj/unmasked (1598).txt  \n",
            "  inflating: data/obj/unmasked (1599).jpg  \n",
            "  inflating: data/obj/unmasked (1599).txt  \n",
            "  inflating: data/obj/unmasked (1600).jpg  \n",
            "  inflating: data/obj/unmasked (1600).txt  \n",
            "  inflating: data/obj/unmasked (1601).jpg  \n",
            "  inflating: data/obj/unmasked (1601).txt  \n",
            "  inflating: data/obj/unmasked (1602).jpg  \n",
            "  inflating: data/obj/unmasked (1602).txt  \n",
            "  inflating: data/obj/unmasked (1603).jpg  \n",
            "  inflating: data/obj/unmasked (1603).txt  \n",
            "  inflating: data/obj/unmasked (1604).jpg  \n",
            "  inflating: data/obj/unmasked (1604).txt  \n",
            "  inflating: data/obj/unmasked (1605).jpg  \n",
            "  inflating: data/obj/unmasked (1605).txt  \n",
            "  inflating: data/obj/unmasked (1606).jpg  \n",
            "  inflating: data/obj/unmasked (1606).txt  \n",
            "  inflating: data/obj/unmasked (1607).jpg  \n",
            "  inflating: data/obj/unmasked (1607).txt  \n",
            "  inflating: data/obj/unmasked (1609).jpg  \n",
            "  inflating: data/obj/unmasked (1609).txt  \n",
            "  inflating: data/obj/unmasked (1610).jpg  \n",
            "  inflating: data/obj/unmasked (1610).txt  \n",
            "  inflating: data/obj/unmasked (1611).jpg  \n",
            "  inflating: data/obj/unmasked (1611).txt  \n",
            "  inflating: data/obj/unmasked (1612).jpg  \n",
            "  inflating: data/obj/unmasked (1612).txt  \n",
            "  inflating: data/obj/unmasked (1613).jpg  \n",
            "  inflating: data/obj/unmasked (1613).txt  \n",
            "  inflating: data/obj/unmasked (1614).jpg  \n",
            "  inflating: data/obj/unmasked (1614).txt  \n",
            "  inflating: data/obj/unmasked (1615).jpg  \n",
            "  inflating: data/obj/unmasked (1615).txt  \n",
            "  inflating: data/obj/unmasked (1616).jpg  \n",
            "  inflating: data/obj/unmasked (1616).txt  \n",
            "  inflating: data/obj/unmasked (1617).jpg  \n",
            "  inflating: data/obj/unmasked (1617).txt  \n",
            "  inflating: data/obj/unmasked (1618).jpg  \n",
            "  inflating: data/obj/unmasked (1618).txt  \n",
            "  inflating: data/obj/unmasked (1619).jpg  \n",
            "  inflating: data/obj/unmasked (1619).txt  \n",
            "  inflating: data/obj/unmasked (1620).jpg  \n",
            "  inflating: data/obj/unmasked (1620).txt  \n",
            "  inflating: data/obj/unmasked (1621).jpg  \n",
            "  inflating: data/obj/unmasked (1621).txt  \n",
            "  inflating: data/obj/unmasked (1622).jpg  \n",
            "  inflating: data/obj/unmasked (1622).txt  \n",
            "  inflating: data/obj/unmasked (1623).jpg  \n",
            "  inflating: data/obj/unmasked (1623).txt  \n",
            "  inflating: data/obj/unmasked (1624).jpg  \n",
            "  inflating: data/obj/unmasked (1624).txt  \n",
            "  inflating: data/obj/unmasked (1625).jpg  \n",
            "  inflating: data/obj/unmasked (1625).txt  \n",
            "  inflating: data/obj/unmasked (1626).jpg  \n",
            "  inflating: data/obj/unmasked (1626).txt  \n",
            "  inflating: data/obj/unmasked (1627).jpg  \n",
            "  inflating: data/obj/unmasked (1627).txt  \n",
            "  inflating: data/obj/unmasked (1628).jpg  \n",
            "  inflating: data/obj/unmasked (1628).txt  \n",
            "  inflating: data/obj/unmasked (1629).jpg  \n",
            "  inflating: data/obj/unmasked (1629).txt  \n",
            "  inflating: data/obj/unmasked (1630).jpg  \n",
            "  inflating: data/obj/unmasked (1630).txt  \n",
            "  inflating: data/obj/unmasked (1631).jpg  \n",
            "  inflating: data/obj/unmasked (1631).txt  \n",
            "  inflating: data/obj/unmasked (1632).jpg  \n",
            "  inflating: data/obj/unmasked (1632).txt  \n",
            "  inflating: data/obj/unmasked (1633).jpg  \n",
            "  inflating: data/obj/unmasked (1633).txt  \n",
            "  inflating: data/obj/unmasked (1634).jpg  \n",
            "  inflating: data/obj/unmasked (1634).txt  \n",
            "  inflating: data/obj/unmasked (1635).jpg  \n",
            "  inflating: data/obj/unmasked (1635).txt  \n",
            "  inflating: data/obj/unmasked (1636).jpg  \n",
            "  inflating: data/obj/unmasked (1636).txt  \n",
            "  inflating: data/obj/unmasked (1637).jpg  \n",
            "  inflating: data/obj/unmasked (1637).txt  \n",
            "  inflating: data/obj/unmasked (1638).jpg  \n",
            "  inflating: data/obj/unmasked (1638).txt  \n",
            "  inflating: data/obj/unmasked (1639).jpg  \n",
            "  inflating: data/obj/unmasked (1639).txt  \n",
            "  inflating: data/obj/unmasked (1640).jpg  \n",
            "  inflating: data/obj/unmasked (1640).txt  \n",
            "  inflating: data/obj/unmasked (1642).jpg  \n",
            "  inflating: data/obj/unmasked (1642).txt  \n",
            "  inflating: data/obj/unmasked (1644).jpg  \n",
            "  inflating: data/obj/unmasked (1644).txt  \n",
            "  inflating: data/obj/unmasked (1645).jpg  \n",
            "  inflating: data/obj/unmasked (1645).txt  \n",
            "  inflating: data/obj/unmasked (1646).jpg  \n",
            "  inflating: data/obj/unmasked (1646).txt  \n",
            "  inflating: data/obj/unmasked (1647).jpg  \n",
            "  inflating: data/obj/unmasked (1647).txt  \n",
            "  inflating: data/obj/unmasked (1648).jpg  \n",
            "  inflating: data/obj/unmasked (1648).txt  \n",
            "  inflating: data/obj/unmasked (1649).jpg  \n",
            "  inflating: data/obj/unmasked (1649).txt  \n",
            "  inflating: data/obj/unmasked (1650).jpg  \n",
            "  inflating: data/obj/unmasked (1650).txt  \n",
            "  inflating: data/obj/unmasked (1651).jpg  \n",
            "  inflating: data/obj/unmasked (1651).txt  \n",
            "  inflating: data/obj/unmasked (1652).jpg  \n",
            "  inflating: data/obj/unmasked (1652).txt  \n",
            "  inflating: data/obj/unmasked (1653).jpg  \n",
            "  inflating: data/obj/unmasked (1653).txt  \n",
            "  inflating: data/obj/unmasked (1654).jpg  \n",
            "  inflating: data/obj/unmasked (1654).txt  \n",
            "  inflating: data/obj/unmasked (1655).jpg  \n",
            "  inflating: data/obj/unmasked (1655).txt  \n",
            "  inflating: data/obj/unmasked (1656).jpg  \n",
            "  inflating: data/obj/unmasked (1656).txt  \n",
            "  inflating: data/obj/unmasked (1659).jpg  \n",
            "  inflating: data/obj/unmasked (1659).txt  \n",
            "  inflating: data/obj/unmasked (1662).jpg  \n",
            "  inflating: data/obj/unmasked (1662).txt  \n",
            "  inflating: data/obj/unmasked (1663).jpg  \n",
            "  inflating: data/obj/unmasked (1663).txt  \n",
            "  inflating: data/obj/unmasked (1669).jpg  \n",
            "  inflating: data/obj/unmasked (1669).txt  \n",
            "  inflating: data/obj/unmasked (1670).jpg  \n",
            "  inflating: data/obj/unmasked (1670).txt  \n",
            "  inflating: data/obj/unmasked (1671).jpg  \n",
            "  inflating: data/obj/unmasked (1671).txt  \n",
            "  inflating: data/obj/unmasked (1672).jpg  \n",
            "  inflating: data/obj/unmasked (1672).txt  \n",
            "  inflating: data/obj/unmasked (1673).jpg  \n",
            "  inflating: data/obj/unmasked (1673).txt  \n",
            "  inflating: data/obj/unmasked (1674).jpg  \n",
            "  inflating: data/obj/unmasked (1674).txt  \n",
            "  inflating: data/obj/unmasked (1677).jpg  \n",
            "  inflating: data/obj/unmasked (1677).txt  \n",
            "  inflating: data/obj/unmasked (1680).jpg  \n",
            "  inflating: data/obj/unmasked (1680).txt  \n",
            "  inflating: data/obj/unmasked (1682).jpg  \n",
            "  inflating: data/obj/unmasked (1682).txt  \n",
            "  inflating: data/obj/unmasked (1683).jpg  \n",
            "  inflating: data/obj/unmasked (1683).txt  \n",
            "  inflating: data/obj/unmasked (1688).jpg  \n",
            "  inflating: data/obj/unmasked (1688).txt  \n",
            "  inflating: data/obj/unmasked (1690).jpg  \n",
            "  inflating: data/obj/unmasked (1690).txt  \n",
            "  inflating: data/obj/unmasked (1697).jpg  \n",
            "  inflating: data/obj/unmasked (1697).txt  \n",
            "  inflating: data/obj/unmasked (1699).jpg  \n",
            "  inflating: data/obj/unmasked (1699).txt  \n",
            "  inflating: data/obj/unmasked (1708).jpg  \n",
            "  inflating: data/obj/unmasked (1708).txt  \n",
            "  inflating: data/obj/unmasked (1709).jpg  \n",
            "  inflating: data/obj/unmasked (1709).txt  \n",
            "  inflating: data/obj/unmasked (1714).jpg  \n",
            "  inflating: data/obj/unmasked (1714).txt  \n",
            "  inflating: data/obj/unmasked (1716).jpg  \n",
            "  inflating: data/obj/unmasked (1716).txt  \n",
            "  inflating: data/obj/unmasked (1725).jpg  \n",
            "  inflating: data/obj/unmasked (1725).txt  \n",
            "  inflating: data/obj/unmasked (1730).jpg  \n",
            "  inflating: data/obj/unmasked (1730).txt  \n",
            "  inflating: data/obj/unmasked (1732).jpg  \n",
            "  inflating: data/obj/unmasked (1732).txt  \n",
            "  inflating: data/obj/unmasked (1733).jpg  \n",
            "  inflating: data/obj/unmasked (1733).txt  \n",
            "  inflating: data/obj/unmasked (1739).jpg  \n",
            "  inflating: data/obj/unmasked (1739).txt  \n",
            "  inflating: data/obj/unmasked (1741).jpg  \n",
            "  inflating: data/obj/unmasked (1741).txt  \n",
            "  inflating: data/obj/unmasked (1746).jpg  \n",
            "  inflating: data/obj/unmasked (1746).txt  \n",
            "  inflating: data/obj/unmasked (1748).jpg  \n",
            "  inflating: data/obj/unmasked (1748).txt  \n",
            "  inflating: data/obj/unmasked (1752).jpg  \n",
            "  inflating: data/obj/unmasked (1752).txt  \n",
            "  inflating: data/obj/unmasked (1758).jpg  \n",
            "  inflating: data/obj/unmasked (1758).txt  \n",
            "  inflating: data/obj/unmasked (1761).jpg  \n",
            "  inflating: data/obj/unmasked (1761).txt  \n",
            "  inflating: data/obj/unmasked (1762).jpg  \n",
            "  inflating: data/obj/unmasked (1762).txt  \n",
            "  inflating: data/obj/unmasked (1763).jpg  \n",
            "  inflating: data/obj/unmasked (1763).txt  \n",
            "  inflating: data/obj/unmasked (1764).jpg  \n",
            "  inflating: data/obj/unmasked (1764).txt  \n",
            "  inflating: data/obj/unmasked (1769).jpg  \n",
            "  inflating: data/obj/unmasked (1769).txt  \n",
            "  inflating: data/obj/unmasked (1777).jpg  \n",
            "  inflating: data/obj/unmasked (1777).txt  \n",
            "  inflating: data/obj/unmasked (1778).jpg  \n",
            "  inflating: data/obj/unmasked (1778).txt  \n",
            "  inflating: data/obj/unmasked (1785).jpg  \n",
            "  inflating: data/obj/unmasked (1785).txt  \n",
            "  inflating: data/obj/unmasked (1788).jpg  \n",
            "  inflating: data/obj/unmasked (1788).txt  \n",
            "  inflating: data/obj/unmasked (1792).jpg  \n",
            "  inflating: data/obj/unmasked (1792).txt  \n",
            "  inflating: data/obj/unmasked (1793).jpg  \n",
            "  inflating: data/obj/unmasked (1793).txt  \n",
            "  inflating: data/obj/unmasked (1794).jpg  \n",
            "  inflating: data/obj/unmasked (1794).txt  \n",
            "  inflating: data/obj/unmasked (1795).jpg  \n",
            "  inflating: data/obj/unmasked (1795).txt  \n",
            "  inflating: data/obj/unmasked (1796).jpg  \n",
            "  inflating: data/obj/unmasked (1796).txt  \n",
            "  inflating: data/obj/unmasked (1800).jpg  \n",
            "  inflating: data/obj/unmasked (1800).txt  \n",
            "  inflating: data/obj/unmasked (1803).jpg  \n",
            "  inflating: data/obj/unmasked (1803).txt  \n",
            "  inflating: data/obj/unmasked (1807).jpg  \n",
            "  inflating: data/obj/unmasked (1807).txt  \n",
            "  inflating: data/obj/unmasked (1813).jpg  \n",
            "  inflating: data/obj/unmasked (1813).txt  \n",
            "  inflating: data/obj/unmasked (1815).jpg  \n",
            "  inflating: data/obj/unmasked (1815).txt  \n",
            "  inflating: data/obj/unmasked (1819).jpg  \n",
            "  inflating: data/obj/unmasked (1819).txt  \n",
            "  inflating: data/obj/unmasked (1822).jpg  \n",
            "  inflating: data/obj/unmasked (1822).txt  \n",
            "  inflating: data/obj/unmasked (1824).jpg  \n",
            "  inflating: data/obj/unmasked (1824).txt  \n",
            "  inflating: data/obj/unmasked (1827).jpg  \n",
            "  inflating: data/obj/unmasked (1827).txt  \n",
            "  inflating: data/obj/unmasked (1834).jpg  \n",
            "  inflating: data/obj/unmasked (1834).txt  \n",
            "  inflating: data/obj/unmasked (1835).jpg  \n",
            "  inflating: data/obj/unmasked (1835).txt  \n",
            "  inflating: data/obj/unmasked (1839).jpg  \n",
            "  inflating: data/obj/unmasked (1839).txt  \n",
            "  inflating: data/obj/unmasked (1840).jpg  \n",
            "  inflating: data/obj/unmasked (1840).txt  \n",
            "  inflating: data/obj/unmasked (1843).jpg  \n",
            "  inflating: data/obj/unmasked (1843).txt  \n",
            "  inflating: data/obj/unmasked (1852).jpg  \n",
            "  inflating: data/obj/unmasked (1852).txt  \n",
            "  inflating: data/obj/unmasked (1853).jpg  \n",
            "  inflating: data/obj/unmasked (1853).txt  \n",
            "  inflating: data/obj/unmasked (1854).jpg  \n",
            "  inflating: data/obj/unmasked (1854).txt  \n",
            "  inflating: data/obj/unmasked (1856).jpg  \n",
            "  inflating: data/obj/unmasked (1856).txt  \n",
            "  inflating: data/obj/unmasked (1858).jpg  \n",
            "  inflating: data/obj/unmasked (1858).txt  \n",
            "  inflating: data/obj/unmasked (1859).jpg  \n",
            "  inflating: data/obj/unmasked (1859).txt  \n",
            "  inflating: data/obj/unmasked (1864).jpg  \n",
            "  inflating: data/obj/unmasked (1864).txt  \n",
            "  inflating: data/obj/unmasked (1865).jpg  \n",
            "  inflating: data/obj/unmasked (1865).txt  \n",
            "  inflating: data/obj/unmasked (1866).jpg  \n",
            "  inflating: data/obj/unmasked (1866).txt  \n",
            "  inflating: data/obj/unmasked (1867).jpg  \n",
            "  inflating: data/obj/unmasked (1867).txt  \n",
            "  inflating: data/obj/unmasked (1869).jpg  \n",
            "  inflating: data/obj/unmasked (1869).txt  \n",
            "  inflating: data/obj/unmasked (1872).jpg  \n",
            "  inflating: data/obj/unmasked (1872).txt  \n",
            "  inflating: data/obj/unmasked (1875).jpg  \n",
            "  inflating: data/obj/unmasked (1875).txt  \n",
            "  inflating: data/obj/unmasked (1876).jpg  \n",
            "  inflating: data/obj/unmasked (1876).txt  \n",
            "  inflating: data/obj/unmasked (1879).jpg  \n",
            "  inflating: data/obj/unmasked (1879).txt  \n",
            "  inflating: data/obj/unmasked (1882).jpg  \n",
            "  inflating: data/obj/unmasked (1882).txt  \n",
            "  inflating: data/obj/unmasked (1885).jpg  \n",
            "  inflating: data/obj/unmasked (1885).txt  \n",
            "  inflating: data/obj/unmasked (1886).jpg  \n",
            "  inflating: data/obj/unmasked (1886).txt  \n",
            "  inflating: data/obj/unmasked (1888).jpg  \n",
            "  inflating: data/obj/unmasked (1888).txt  \n",
            "  inflating: data/obj/unmasked (1891).jpg  \n",
            "  inflating: data/obj/unmasked (1891).txt  \n",
            "  inflating: data/obj/unmasked (1894).jpg  \n",
            "  inflating: data/obj/unmasked (1894).txt  \n",
            "  inflating: data/obj/unmasked (1897).jpg  \n",
            "  inflating: data/obj/unmasked (1897).txt  \n",
            "  inflating: data/obj/unmasked (1899).jpg  \n",
            "  inflating: data/obj/unmasked (1899).txt  \n",
            "  inflating: data/obj/unmasked (1900).jpg  \n",
            "  inflating: data/obj/unmasked (1900).txt  \n",
            "  inflating: data/obj/unmasked (1903).jpg  \n",
            "  inflating: data/obj/unmasked (1903).txt  \n",
            "  inflating: data/obj/unmasked (1904).jpg  \n",
            "  inflating: data/obj/unmasked (1904).txt  \n",
            "  inflating: data/obj/unmasked (1907).jpg  \n",
            "  inflating: data/obj/unmasked (1907).txt  \n",
            "  inflating: data/obj/unmasked (1912).jpg  \n",
            "  inflating: data/obj/unmasked (1912).txt  \n",
            "  inflating: data/obj/with_mask (1).jpg  \n",
            "  inflating: data/obj/with_mask (1).txt  \n",
            "  inflating: data/obj/with_mask (10).jpg  \n",
            "  inflating: data/obj/with_mask (10).txt  \n",
            "  inflating: data/obj/with_mask (100).jpg  \n",
            "  inflating: data/obj/with_mask (100).txt  \n",
            "  inflating: data/obj/with_mask (101).jpg  \n",
            "  inflating: data/obj/with_mask (101).txt  \n",
            "  inflating: data/obj/with_mask (102).jpg  \n",
            "  inflating: data/obj/with_mask (102).txt  \n",
            "  inflating: data/obj/with_mask (103).jpg  \n",
            "  inflating: data/obj/with_mask (103).txt  \n",
            "  inflating: data/obj/with_mask (104).jpg  \n",
            "  inflating: data/obj/with_mask (104).txt  \n",
            "  inflating: data/obj/with_mask (105).jpg  \n",
            "  inflating: data/obj/with_mask (105).txt  \n",
            "  inflating: data/obj/with_mask (11).jpg  \n",
            "  inflating: data/obj/with_mask (11).txt  \n",
            "  inflating: data/obj/with_mask (12).jpg  \n",
            "  inflating: data/obj/with_mask (12).txt  \n",
            "  inflating: data/obj/with_mask (13).jpg  \n",
            "  inflating: data/obj/with_mask (13).txt  \n",
            "  inflating: data/obj/with_mask (14).jpg  \n",
            "  inflating: data/obj/with_mask (14).txt  \n",
            "  inflating: data/obj/with_mask (15).jpg  \n",
            "  inflating: data/obj/with_mask (15).txt  \n",
            "  inflating: data/obj/with_mask (16).jpg  \n",
            "  inflating: data/obj/with_mask (16).txt  \n",
            "  inflating: data/obj/with_mask (17).jpg  \n",
            "  inflating: data/obj/with_mask (17).txt  \n",
            "  inflating: data/obj/with_mask (18).jpg  \n",
            "  inflating: data/obj/with_mask (18).txt  \n",
            "  inflating: data/obj/with_mask (19).jpg  \n",
            "  inflating: data/obj/with_mask (19).txt  \n",
            "  inflating: data/obj/with_mask (2).jpg  \n",
            "  inflating: data/obj/with_mask (2).txt  \n",
            "  inflating: data/obj/with_mask (20).jpg  \n",
            "  inflating: data/obj/with_mask (20).txt  \n",
            "  inflating: data/obj/with_mask (21).jpg  \n",
            "  inflating: data/obj/with_mask (21).txt  \n",
            "  inflating: data/obj/with_mask (22).jpg  \n",
            "  inflating: data/obj/with_mask (22).txt  \n",
            "  inflating: data/obj/with_mask (23).jpg  \n",
            "  inflating: data/obj/with_mask (23).txt  \n",
            "  inflating: data/obj/with_mask (24).jpg  \n",
            "  inflating: data/obj/with_mask (24).txt  \n",
            "  inflating: data/obj/with_mask (25).jpg  \n",
            "  inflating: data/obj/with_mask (25).txt  \n",
            "  inflating: data/obj/with_mask (26).jpg  \n",
            "  inflating: data/obj/with_mask (26).txt  \n",
            "  inflating: data/obj/with_mask (27).jpg  \n",
            "  inflating: data/obj/with_mask (27).txt  \n",
            "  inflating: data/obj/with_mask (28).jpg  \n",
            "  inflating: data/obj/with_mask (28).txt  \n",
            "  inflating: data/obj/with_mask (29).jpg  \n",
            "  inflating: data/obj/with_mask (29).txt  \n",
            "  inflating: data/obj/with_mask (3).jpg  \n",
            "  inflating: data/obj/with_mask (3).txt  \n",
            "  inflating: data/obj/with_mask (30).jpg  \n",
            "  inflating: data/obj/with_mask (30).txt  \n",
            "  inflating: data/obj/with_mask (31).jpg  \n",
            "  inflating: data/obj/with_mask (31).txt  \n",
            "  inflating: data/obj/with_mask (32).jpg  \n",
            "  inflating: data/obj/with_mask (32).txt  \n",
            "  inflating: data/obj/with_mask (33).jpg  \n",
            "  inflating: data/obj/with_mask (33).txt  \n",
            "  inflating: data/obj/with_mask (34).jpg  \n",
            "  inflating: data/obj/with_mask (34).txt  \n",
            "  inflating: data/obj/with_mask (35).jpg  \n",
            "  inflating: data/obj/with_mask (35).txt  \n",
            "  inflating: data/obj/with_mask (36).jpg  \n",
            "  inflating: data/obj/with_mask (36).txt  \n",
            "  inflating: data/obj/with_mask (37).jpg  \n",
            "  inflating: data/obj/with_mask (37).txt  \n",
            "  inflating: data/obj/with_mask (38).jpg  \n",
            "  inflating: data/obj/with_mask (38).txt  \n",
            "  inflating: data/obj/with_mask (39).jpg  \n",
            "  inflating: data/obj/with_mask (39).txt  \n",
            "  inflating: data/obj/with_mask (4).jpg  \n",
            "  inflating: data/obj/with_mask (4).txt  \n",
            "  inflating: data/obj/with_mask (40).jpg  \n",
            "  inflating: data/obj/with_mask (40).txt  \n",
            "  inflating: data/obj/with_mask (41).jpg  \n",
            "  inflating: data/obj/with_mask (41).txt  \n",
            "  inflating: data/obj/with_mask (42).jpg  \n",
            "  inflating: data/obj/with_mask (42).txt  \n",
            "  inflating: data/obj/with_mask (43).jpg  \n",
            "  inflating: data/obj/with_mask (43).txt  \n",
            "  inflating: data/obj/with_mask (44).jpg  \n",
            "  inflating: data/obj/with_mask (44).txt  \n",
            "  inflating: data/obj/with_mask (45).jpg  \n",
            "  inflating: data/obj/with_mask (45).txt  \n",
            "  inflating: data/obj/with_mask (46).jpg  \n",
            "  inflating: data/obj/with_mask (46).txt  \n",
            "  inflating: data/obj/with_mask (47).jpg  \n",
            "  inflating: data/obj/with_mask (47).txt  \n",
            "  inflating: data/obj/with_mask (48).jpg  \n",
            "  inflating: data/obj/with_mask (48).txt  \n",
            "  inflating: data/obj/with_mask (49).jpg  \n",
            "  inflating: data/obj/with_mask (49).txt  \n",
            "  inflating: data/obj/with_mask (5).jpg  \n",
            "  inflating: data/obj/with_mask (5).txt  \n",
            "  inflating: data/obj/with_mask (50).jpg  \n",
            "  inflating: data/obj/with_mask (50).txt  \n",
            "  inflating: data/obj/with_mask (51).jpg  \n",
            "  inflating: data/obj/with_mask (51).txt  \n",
            "  inflating: data/obj/with_mask (52).jpg  \n",
            "  inflating: data/obj/with_mask (52).txt  \n",
            "  inflating: data/obj/with_mask (53).jpg  \n",
            "  inflating: data/obj/with_mask (53).txt  \n",
            "  inflating: data/obj/with_mask (54).jpg  \n",
            "  inflating: data/obj/with_mask (54).txt  \n",
            "  inflating: data/obj/with_mask (55).jpg  \n",
            "  inflating: data/obj/with_mask (55).txt  \n",
            "  inflating: data/obj/with_mask (56).jpg  \n",
            "  inflating: data/obj/with_mask (56).txt  \n",
            "  inflating: data/obj/with_mask (57).jpg  \n",
            "  inflating: data/obj/with_mask (57).txt  \n",
            "  inflating: data/obj/with_mask (58).jpg  \n",
            "  inflating: data/obj/with_mask (58).txt  \n",
            "  inflating: data/obj/with_mask (59).jpg  \n",
            "  inflating: data/obj/with_mask (59).txt  \n",
            "  inflating: data/obj/with_mask (6).jpg  \n",
            "  inflating: data/obj/with_mask (6).txt  \n",
            "  inflating: data/obj/with_mask (60).jpg  \n",
            "  inflating: data/obj/with_mask (60).txt  \n",
            "  inflating: data/obj/with_mask (61).jpg  \n",
            "  inflating: data/obj/with_mask (61).txt  \n",
            "  inflating: data/obj/with_mask (62).jpg  \n",
            "  inflating: data/obj/with_mask (62).txt  \n",
            "  inflating: data/obj/with_mask (63).jpg  \n",
            "  inflating: data/obj/with_mask (63).txt  \n",
            "  inflating: data/obj/with_mask (64).jpg  \n",
            "  inflating: data/obj/with_mask (64).txt  \n",
            "  inflating: data/obj/with_mask (65).jpg  \n",
            "  inflating: data/obj/with_mask (65).txt  \n",
            "  inflating: data/obj/with_mask (66).jpg  \n",
            "  inflating: data/obj/with_mask (66).txt  \n",
            "  inflating: data/obj/with_mask (67).jpg  \n",
            "  inflating: data/obj/with_mask (67).txt  \n",
            "  inflating: data/obj/with_mask (68).jpg  \n",
            "  inflating: data/obj/with_mask (68).txt  \n",
            "  inflating: data/obj/with_mask (69).jpg  \n",
            "  inflating: data/obj/with_mask (69).txt  \n",
            "  inflating: data/obj/with_mask (7).jpg  \n",
            "  inflating: data/obj/with_mask (7).txt  \n",
            "  inflating: data/obj/with_mask (70).jpg  \n",
            "  inflating: data/obj/with_mask (70).txt  \n",
            "  inflating: data/obj/with_mask (71).jpg  \n",
            "  inflating: data/obj/with_mask (71).txt  \n",
            "  inflating: data/obj/with_mask (72).jpg  \n",
            "  inflating: data/obj/with_mask (72).txt  \n",
            "  inflating: data/obj/with_mask (73).jpg  \n",
            "  inflating: data/obj/with_mask (73).txt  \n",
            "  inflating: data/obj/with_mask (74).jpg  \n",
            "  inflating: data/obj/with_mask (74).txt  \n",
            "  inflating: data/obj/with_mask (75).jpg  \n",
            "  inflating: data/obj/with_mask (75).txt  \n",
            "  inflating: data/obj/with_mask (76).jpg  \n",
            "  inflating: data/obj/with_mask (76).txt  \n",
            "  inflating: data/obj/with_mask (77).jpg  \n",
            "  inflating: data/obj/with_mask (77).txt  \n",
            "  inflating: data/obj/with_mask (78).jpg  \n",
            "  inflating: data/obj/with_mask (78).txt  \n",
            "  inflating: data/obj/with_mask (79).jpg  \n",
            "  inflating: data/obj/with_mask (79).txt  \n",
            "  inflating: data/obj/with_mask (8).jpg  \n",
            "  inflating: data/obj/with_mask (8).txt  \n",
            "  inflating: data/obj/with_mask (80).jpg  \n",
            "  inflating: data/obj/with_mask (80).txt  \n",
            "  inflating: data/obj/with_mask (81).jpg  \n",
            "  inflating: data/obj/with_mask (81).txt  \n",
            "  inflating: data/obj/with_mask (82).jpg  \n",
            "  inflating: data/obj/with_mask (82).txt  \n",
            "  inflating: data/obj/with_mask (83).jpg  \n",
            "  inflating: data/obj/with_mask (83).txt  \n",
            "  inflating: data/obj/with_mask (84).jpg  \n",
            "  inflating: data/obj/with_mask (84).txt  \n",
            "  inflating: data/obj/with_mask (85).jpg  \n",
            "  inflating: data/obj/with_mask (85).txt  \n",
            "  inflating: data/obj/with_mask (86).jpg  \n",
            "  inflating: data/obj/with_mask (86).txt  \n",
            "  inflating: data/obj/with_mask (87).jpg  \n",
            "  inflating: data/obj/with_mask (87).txt  \n",
            "  inflating: data/obj/with_mask (88).jpg  \n",
            "  inflating: data/obj/with_mask (88).txt  \n",
            "  inflating: data/obj/with_mask (89).jpg  \n",
            "  inflating: data/obj/with_mask (89).txt  \n",
            "  inflating: data/obj/with_mask (9).jpg  \n",
            "  inflating: data/obj/with_mask (9).txt  \n",
            "  inflating: data/obj/with_mask (90).jpg  \n",
            "  inflating: data/obj/with_mask (90).txt  \n",
            "  inflating: data/obj/with_mask (91).jpg  \n",
            "  inflating: data/obj/with_mask (91).txt  \n",
            "  inflating: data/obj/with_mask (92).jpg  \n",
            "  inflating: data/obj/with_mask (92).txt  \n",
            "  inflating: data/obj/with_mask (93).jpg  \n",
            "  inflating: data/obj/with_mask (93).txt  \n",
            "  inflating: data/obj/with_mask (94).jpg  \n",
            "  inflating: data/obj/with_mask (94).txt  \n",
            "  inflating: data/obj/with_mask (95).jpg  \n",
            "  inflating: data/obj/with_mask (95).txt  \n",
            "  inflating: data/obj/with_mask (96).jpg  \n",
            "  inflating: data/obj/with_mask (96).txt  \n",
            "  inflating: data/obj/with_mask (97).jpg  \n",
            "  inflating: data/obj/with_mask (97).txt  \n",
            "  inflating: data/obj/with_mask (98).jpg  \n",
            "  inflating: data/obj/with_mask (98).txt  \n",
            "  inflating: data/obj/with_mask (99).jpg  \n",
            "  inflating: data/obj/with_mask (99).txt  \n",
            "  inflating: data/obj/with_maska (1).jpg  \n",
            "  inflating: data/obj/with_maska (1).txt  \n",
            "  inflating: data/obj/with_maska (10).jpg  \n",
            "  inflating: data/obj/with_maska (10).txt  \n",
            "  inflating: data/obj/with_maska (11).jpg  \n",
            "  inflating: data/obj/with_maska (11).txt  \n",
            "  inflating: data/obj/with_maska (12).jpg  \n",
            "  inflating: data/obj/with_maska (12).txt  \n",
            "  inflating: data/obj/with_maska (13).jpg  \n",
            "  inflating: data/obj/with_maska (13).txt  \n",
            "  inflating: data/obj/with_maska (14).jpg  \n",
            "  inflating: data/obj/with_maska (14).txt  \n",
            "  inflating: data/obj/with_maska (15).jpg  \n",
            "  inflating: data/obj/with_maska (15).txt  \n",
            "  inflating: data/obj/with_maska (16).jpg  \n",
            "  inflating: data/obj/with_maska (16).txt  \n",
            "  inflating: data/obj/with_maska (17).jpg  \n",
            "  inflating: data/obj/with_maska (17).txt  \n",
            "  inflating: data/obj/with_maska (18).jpg  \n",
            "  inflating: data/obj/with_maska (18).txt  \n",
            "  inflating: data/obj/with_maska (19).jpg  \n",
            "  inflating: data/obj/with_maska (19).txt  \n",
            "  inflating: data/obj/with_maska (2).jpg  \n",
            "  inflating: data/obj/with_maska (2).txt  \n",
            "  inflating: data/obj/with_maska (20).jpg  \n",
            "  inflating: data/obj/with_maska (20).txt  \n",
            "  inflating: data/obj/with_maska (21).jpg  \n",
            "  inflating: data/obj/with_maska (21).txt  \n",
            "  inflating: data/obj/with_maska (22).jpg  \n",
            "  inflating: data/obj/with_maska (22).txt  \n",
            "  inflating: data/obj/with_maska (23).jpg  \n",
            "  inflating: data/obj/with_maska (23).txt  \n",
            "  inflating: data/obj/with_maska (24).jpg  \n",
            "  inflating: data/obj/with_maska (24).txt  \n",
            "  inflating: data/obj/with_maska (25).jpg  \n",
            "  inflating: data/obj/with_maska (25).txt  \n",
            "  inflating: data/obj/with_maska (26).jpg  \n",
            "  inflating: data/obj/with_maska (26).txt  \n",
            "  inflating: data/obj/with_maska (27).jpg  \n",
            "  inflating: data/obj/with_maska (27).txt  \n",
            "  inflating: data/obj/with_maska (28).jpg  \n",
            "  inflating: data/obj/with_maska (28).txt  \n",
            "  inflating: data/obj/with_maska (29).jpg  \n",
            "  inflating: data/obj/with_maska (29).txt  \n",
            "  inflating: data/obj/with_maska (3).jpg  \n",
            "  inflating: data/obj/with_maska (3).txt  \n",
            "  inflating: data/obj/with_maska (4).jpg  \n",
            "  inflating: data/obj/with_maska (4).txt  \n",
            "  inflating: data/obj/with_maska (5).jpg  \n",
            "  inflating: data/obj/with_maska (5).txt  \n",
            "  inflating: data/obj/with_maska (6).jpg  \n",
            "  inflating: data/obj/with_maska (6).txt  \n",
            "  inflating: data/obj/with_maska (7).jpg  \n",
            "  inflating: data/obj/with_maska (7).txt  \n",
            "  inflating: data/obj/with_maska (8).jpg  \n",
            "  inflating: data/obj/with_maska (8).txt  \n",
            "  inflating: data/obj/with_maska (9).jpg  \n",
            "  inflating: data/obj/with_maska (9).txt  \n",
            "  inflating: data/obj/with_maskb (1).jpg  \n",
            "  inflating: data/obj/with_maskb (1).txt  \n",
            "  inflating: data/obj/with_maskb (10).jpg  \n",
            "  inflating: data/obj/with_maskb (10).txt  \n",
            "  inflating: data/obj/with_maskb (11).jpg  \n",
            "  inflating: data/obj/with_maskb (11).txt  \n",
            "  inflating: data/obj/with_maskb (12).jpg  \n",
            "  inflating: data/obj/with_maskb (12).txt  \n",
            "  inflating: data/obj/with_maskb (13).jpg  \n",
            "  inflating: data/obj/with_maskb (13).txt  \n",
            "  inflating: data/obj/with_maskb (14).jpg  \n",
            "  inflating: data/obj/with_maskb (14).txt  \n",
            "  inflating: data/obj/with_maskb (15).jpg  \n",
            "  inflating: data/obj/with_maskb (15).txt  \n",
            "  inflating: data/obj/with_maskb (2).jpg  \n",
            "  inflating: data/obj/with_maskb (2).txt  \n",
            "  inflating: data/obj/with_maskb (3).jpg  \n",
            "  inflating: data/obj/with_maskb (3).txt  \n",
            "  inflating: data/obj/with_maskb (4).jpg  \n",
            "  inflating: data/obj/with_maskb (4).txt  \n",
            "  inflating: data/obj/with_maskb (5).jpg  \n",
            "  inflating: data/obj/with_maskb (5).txt  \n",
            "  inflating: data/obj/with_maskb (6).jpg  \n",
            "  inflating: data/obj/with_maskb (6).txt  \n",
            "  inflating: data/obj/with_maskb (7).jpg  \n",
            "  inflating: data/obj/with_maskb (7).txt  \n",
            "  inflating: data/obj/with_maskb (8).jpg  \n",
            "  inflating: data/obj/with_maskb (8).txt  \n",
            "  inflating: data/obj/with_maskb (9).jpg  \n",
            "  inflating: data/obj/with_maskb (9).txt  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Copy the yolov4-custom.cfg file so that it is now in /darknet/cfg/ folder \n",
        "\n",
        "!cp /mydrive/yolov4/yolov4-custom.cfg cfg\n",
        "\n",
        "# verify if your custom file is in cfg folder\n",
        "!ls cfg/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vC8PBLf-rdch",
        "outputId": "3065c6d1-df03-4a39-dd03-e56ddd188bca"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "yolov4-custom.cfg\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Copy the obj.names and obj.data files from your drive so that they are now in /darknet/data/ folder \n",
        "\n",
        "!cp /mydrive/yolov4/obj.names data\n",
        "!cp /mydrive/yolov4/obj.data  data\n",
        "\n",
        "# verify if the above files are in data folder\n",
        "!ls data/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ht9FeDtIrjfh",
        "outputId": "8eaba092-97cc-4c92-ae75-9ce8d1fbd552"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "labels\tobj  obj.data  obj.names\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Copy the process.py file to the current darknet directory \n",
        "\n",
        "!cp /mydrive/yolov4/process.py ."
      ],
      "metadata": {
        "id": "B7jSKcSFrtuK"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# run process.py ( this creates the train.txt and test.txt files in our darknet/data folder )\n",
        "!python process.py\n",
        "\n",
        "# list the contents of data folder to check if the train.txt and test.txt files have been created \n",
        "!ls data/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "usJEnhZPrzJZ",
        "outputId": "6e7ed7a9-9c3a-4462-d81f-5b33cd3966fc"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/gdrive/MyDrive/yolov4/darknet\n",
            "labels\tobj  obj.data  obj.names  test.txt  train.txt\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Download the yolov4 pre-trained weights file\n",
        "!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cFPmAPa4r0cp",
        "outputId": "df0c392d-d8fd-4a37-e4c6-55447236c78e"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2022-08-27 23:42:25--  https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137\n",
            "Resolving github.com (github.com)... 20.205.243.166\n",
            "Connecting to github.com (github.com)|20.205.243.166|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/75388965/48bfe500-889d-11ea-819e-c4d182fcf0db?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220827%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220827T234225Z&X-Amz-Expires=300&X-Amz-Signature=6842912484eb5a687ea0761e6ccac5c697cadbfe2cf0fc574e50b6864c002cf1&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=75388965&response-content-disposition=attachment%3B%20filename%3Dyolov4.conv.137&response-content-type=application%2Foctet-stream [following]\n",
            "--2022-08-27 23:42:25--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/75388965/48bfe500-889d-11ea-819e-c4d182fcf0db?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220827%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220827T234225Z&X-Amz-Expires=300&X-Amz-Signature=6842912484eb5a687ea0761e6ccac5c697cadbfe2cf0fc574e50b6864c002cf1&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=75388965&response-content-disposition=attachment%3B%20filename%3Dyolov4.conv.137&response-content-type=application%2Foctet-stream\n",
            "Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 170038676 (162M) [application/octet-stream]\n",
            "Saving to: ‘yolov4.conv.137’\n",
            "\n",
            "yolov4.conv.137     100%[===================>] 162.16M  9.91MB/s    in 19s     \n",
            "\n",
            "2022-08-27 23:42:44 (8.66 MB/s) - ‘yolov4.conv.137’ saved [170038676/170038676]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# train your custom detector! (uncomment %%capture below if you run into memory issues or your Colab is crashing)\n",
        "# %%capture\n",
        "\n",
        "!./darknet detector train data/obj.data cfg/yolov4-custom.cfg yolov4.conv.137 -dont_show -map"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q3MWt00nt0Gq",
        "outputId": "34358103-2dda-4bf7-860b-f6f6166c7749"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43m串流輸出內容已截斷至最後 5000 行。\u001b[0m\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767993), count: 27, class_loss = 3.316817, iou_loss = 1.761696, total_loss = 5.078514 \n",
            " total_bbox = 702794, rewritten_bbox = 0.003700 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.529025), count: 2, class_loss = 0.561751, iou_loss = 1.849446, total_loss = 2.411197 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739740), count: 20, class_loss = 3.466122, iou_loss = 4.686810, total_loss = 8.152932 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717430), count: 31, class_loss = 3.856936, iou_loss = 1.330056, total_loss = 5.186992 \n",
            " total_bbox = 702847, rewritten_bbox = 0.003699 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.526647), count: 6, class_loss = 1.343209, iou_loss = 9.057601, total_loss = 10.400810 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733241), count: 24, class_loss = 3.393206, iou_loss = 6.839291, total_loss = 10.232497 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743679), count: 20, class_loss = 2.726297, iou_loss = 1.939226, total_loss = 4.665523 \n",
            " total_bbox = 702897, rewritten_bbox = 0.003699 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.694982), count: 8, class_loss = 2.110443, iou_loss = 8.025080, total_loss = 10.135523 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.776234), count: 24, class_loss = 7.095724, iou_loss = 7.019410, total_loss = 14.115133 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.723910), count: 19, class_loss = 3.443563, iou_loss = 0.776238, total_loss = 4.219801 \n",
            " total_bbox = 702948, rewritten_bbox = 0.003699 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.628038), count: 1, class_loss = 0.210906, iou_loss = 0.057187, total_loss = 0.268093 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757930), count: 10, class_loss = 0.412451, iou_loss = 0.322991, total_loss = 0.735443 \n",
            " total_bbox = 702959, rewritten_bbox = 0.003699 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.676658), count: 3, class_loss = 0.412016, iou_loss = 0.358877, total_loss = 0.770892 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.700934), count: 10, class_loss = 0.526565, iou_loss = 0.258913, total_loss = 0.785478 \n",
            " total_bbox = 702972, rewritten_bbox = 0.003699 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1041/6000: loss=2.5 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1041: 2.525914, 2.240580 avg loss, 0.001000 rate, 6.715175 seconds, 66624 images, 8.759482 hours left\n",
            "Loaded: 0.000064 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000138, iou_loss = 0.000000, total_loss = 0.000138 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745764), count: 7, class_loss = 0.957889, iou_loss = 1.979758, total_loss = 2.937647 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.705252), count: 10, class_loss = 0.832706, iou_loss = 0.489310, total_loss = 1.322017 \n",
            " total_bbox = 702989, rewritten_bbox = 0.003698 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.780207), count: 17, class_loss = 3.092383, iou_loss = 37.413231, total_loss = 40.505615 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.731224), count: 15, class_loss = 2.045586, iou_loss = 7.696203, total_loss = 9.741789 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.627668), count: 9, class_loss = 2.269366, iou_loss = 0.195724, total_loss = 2.465090 \n",
            " total_bbox = 703030, rewritten_bbox = 0.003698 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.814694), count: 3, class_loss = 0.262236, iou_loss = 3.752235, total_loss = 4.014472 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.809244), count: 10, class_loss = 1.229597, iou_loss = 4.257327, total_loss = 5.486924 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.652143), count: 11, class_loss = 1.190501, iou_loss = 0.533637, total_loss = 1.724137 \n",
            " total_bbox = 703054, rewritten_bbox = 0.003698 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664429), count: 10, class_loss = 2.898904, iou_loss = 18.192394, total_loss = 21.091299 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759741), count: 22, class_loss = 3.758300, iou_loss = 7.920001, total_loss = 11.678301 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.697885), count: 24, class_loss = 3.326804, iou_loss = 1.167380, total_loss = 4.494184 \n",
            " total_bbox = 703110, rewritten_bbox = 0.003698 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.613230), count: 3, class_loss = 1.092651, iou_loss = 1.932974, total_loss = 3.025626 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.709927), count: 20, class_loss = 5.666879, iou_loss = 5.636759, total_loss = 11.303638 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761320), count: 23, class_loss = 3.186046, iou_loss = 1.216477, total_loss = 4.402524 \n",
            " total_bbox = 703156, rewritten_bbox = 0.003698 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.039255, iou_loss = 0.000000, total_loss = 0.039255 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723718), count: 13, class_loss = 2.083521, iou_loss = 3.367000, total_loss = 5.450521 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.706155), count: 15, class_loss = 1.589213, iou_loss = 0.873885, total_loss = 2.463097 \n",
            " total_bbox = 703184, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001456, iou_loss = 0.000000, total_loss = 0.001456 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.526806), count: 1, class_loss = 0.635616, iou_loss = 0.036970, total_loss = 0.672586 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735351), count: 9, class_loss = 1.563454, iou_loss = 0.341079, total_loss = 1.904533 \n",
            " total_bbox = 703194, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.726971), count: 24, class_loss = 5.492271, iou_loss = 51.187469, total_loss = 56.679741 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720820), count: 28, class_loss = 4.918652, iou_loss = 12.625507, total_loss = 17.544159 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.688017), count: 6, class_loss = 1.477903, iou_loss = 0.213291, total_loss = 1.691194 \n",
            " total_bbox = 703252, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.642937), count: 1, class_loss = 0.060457, iou_loss = 0.111901, total_loss = 0.172358 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740974), count: 9, class_loss = 1.046840, iou_loss = 0.286066, total_loss = 1.332906 \n",
            " total_bbox = 703262, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.854600), count: 5, class_loss = 0.629466, iou_loss = 11.398138, total_loss = 12.027604 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739226), count: 18, class_loss = 2.953284, iou_loss = 6.167052, total_loss = 9.120337 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750103), count: 12, class_loss = 1.267219, iou_loss = 0.763008, total_loss = 2.030227 \n",
            " total_bbox = 703297, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.709312), count: 4, class_loss = 0.700610, iou_loss = 5.209405, total_loss = 5.910015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.637462), count: 5, class_loss = 1.162452, iou_loss = 1.275256, total_loss = 2.437708 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739351), count: 12, class_loss = 3.165474, iou_loss = 0.265345, total_loss = 3.430819 \n",
            " total_bbox = 703318, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.674623), count: 11, class_loss = 2.261847, iou_loss = 19.406311, total_loss = 21.668158 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.665738), count: 16, class_loss = 1.980729, iou_loss = 4.243123, total_loss = 6.223853 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.699132), count: 20, class_loss = 2.629138, iou_loss = 0.951410, total_loss = 3.580548 \n",
            " total_bbox = 703365, rewritten_bbox = 0.003697 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.633914), count: 2, class_loss = 0.730129, iou_loss = 2.498211, total_loss = 3.228340 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700856), count: 27, class_loss = 5.325023, iou_loss = 7.118983, total_loss = 12.444006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720147), count: 30, class_loss = 2.725513, iou_loss = 1.801970, total_loss = 4.527484 \n",
            " total_bbox = 703424, rewritten_bbox = 0.003696 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.729592), count: 12, class_loss = 1.226224, iou_loss = 24.441368, total_loss = 25.667593 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774422), count: 37, class_loss = 4.401924, iou_loss = 13.041334, total_loss = 17.443258 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713319), count: 31, class_loss = 3.328673, iou_loss = 1.881938, total_loss = 5.210611 \n",
            " total_bbox = 703504, rewritten_bbox = 0.003696 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664145), count: 9, class_loss = 1.961233, iou_loss = 14.916807, total_loss = 16.878040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.646373), count: 36, class_loss = 6.646922, iou_loss = 8.467535, total_loss = 15.114456 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707352), count: 30, class_loss = 3.268942, iou_loss = 1.624459, total_loss = 4.893401 \n",
            " total_bbox = 703579, rewritten_bbox = 0.003695 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664175), count: 5, class_loss = 1.691959, iou_loss = 11.727399, total_loss = 13.419358 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.690940), count: 19, class_loss = 4.734230, iou_loss = 5.018746, total_loss = 9.752975 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758501), count: 28, class_loss = 3.814355, iou_loss = 1.841566, total_loss = 5.655921 \n",
            " total_bbox = 703631, rewritten_bbox = 0.003695 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1042/6000: loss=2.2 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1042: 2.240598, 2.240582 avg loss, 0.001000 rate, 6.739627 seconds, 66688 images, 8.779131 hours left\n",
            "Loaded: 0.000068 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.820208), count: 4, class_loss = 0.788211, iou_loss = 4.025785, total_loss = 4.813997 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.687209), count: 10, class_loss = 2.277691, iou_loss = 3.297867, total_loss = 5.575559 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.567256), count: 9, class_loss = 1.584307, iou_loss = 0.184741, total_loss = 1.769048 \n",
            " total_bbox = 703654, rewritten_bbox = 0.003695 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.760718), count: 20, class_loss = 2.465723, iou_loss = 24.326542, total_loss = 26.792265 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760042), count: 33, class_loss = 2.905591, iou_loss = 16.936869, total_loss = 19.842461 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.689161), count: 10, class_loss = 1.008247, iou_loss = 0.876458, total_loss = 1.884704 \n",
            " total_bbox = 703717, rewritten_bbox = 0.003695 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001798, iou_loss = 0.000000, total_loss = 0.001798 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755110), count: 7, class_loss = 1.134020, iou_loss = 1.407051, total_loss = 2.541071 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725047), count: 14, class_loss = 1.745430, iou_loss = 0.471465, total_loss = 2.216895 \n",
            " total_bbox = 703738, rewritten_bbox = 0.003695 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.699858), count: 34, class_loss = 6.974807, iou_loss = 47.349781, total_loss = 54.324589 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700149), count: 51, class_loss = 8.548974, iou_loss = 17.006145, total_loss = 25.555120 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710362), count: 26, class_loss = 3.616051, iou_loss = 1.575076, total_loss = 5.191127 \n",
            " total_bbox = 703849, rewritten_bbox = 0.003694 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.667240), count: 12, class_loss = 3.584366, iou_loss = 21.250084, total_loss = 24.834450 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743846), count: 27, class_loss = 5.389765, iou_loss = 7.674547, total_loss = 13.064312 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741039), count: 29, class_loss = 3.834806, iou_loss = 1.606580, total_loss = 5.441386 \n",
            " total_bbox = 703917, rewritten_bbox = 0.003694 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.739622), count: 19, class_loss = 4.346521, iou_loss = 29.808203, total_loss = 34.154724 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.704654), count: 41, class_loss = 9.064802, iou_loss = 17.721584, total_loss = 26.786386 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737036), count: 26, class_loss = 2.970744, iou_loss = 2.241096, total_loss = 5.211841 \n",
            " total_bbox = 704003, rewritten_bbox = 0.003693 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753348), count: 7, class_loss = 1.586348, iou_loss = 1.345941, total_loss = 2.932290 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.698398), count: 15, class_loss = 2.065472, iou_loss = 0.620929, total_loss = 2.686401 \n",
            " total_bbox = 704025, rewritten_bbox = 0.003693 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.772342), count: 8, class_loss = 2.820127, iou_loss = 9.033631, total_loss = 11.853759 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.644191), count: 33, class_loss = 5.503542, iou_loss = 8.622749, total_loss = 14.126292 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.686648), count: 18, class_loss = 2.277407, iou_loss = 1.123220, total_loss = 3.400627 \n",
            " total_bbox = 704084, rewritten_bbox = 0.003693 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684987), count: 3, class_loss = 0.360654, iou_loss = 3.674662, total_loss = 4.035316 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713218), count: 22, class_loss = 2.524858, iou_loss = 5.479817, total_loss = 8.004675 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738239), count: 25, class_loss = 2.520662, iou_loss = 1.700379, total_loss = 4.221041 \n",
            " total_bbox = 704134, rewritten_bbox = 0.003692 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.687783), count: 8, class_loss = 2.031025, iou_loss = 9.068473, total_loss = 11.099498 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723253), count: 33, class_loss = 4.323120, iou_loss = 8.866125, total_loss = 13.189245 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754295), count: 26, class_loss = 2.333546, iou_loss = 1.385854, total_loss = 3.719400 \n",
            " total_bbox = 704201, rewritten_bbox = 0.003692 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.670711), count: 3, class_loss = 1.055289, iou_loss = 11.807242, total_loss = 12.862531 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746732), count: 15, class_loss = 2.673289, iou_loss = 3.754060, total_loss = 6.427349 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734044), count: 21, class_loss = 4.390511, iou_loss = 1.197910, total_loss = 5.588421 \n",
            " total_bbox = 704240, rewritten_bbox = 0.003692 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.674755), count: 11, class_loss = 3.025371, iou_loss = 22.168644, total_loss = 25.194014 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.686394), count: 37, class_loss = 5.738551, iou_loss = 9.728476, total_loss = 15.467027 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710985), count: 30, class_loss = 3.820122, iou_loss = 1.822467, total_loss = 5.642589 \n",
            " total_bbox = 704318, rewritten_bbox = 0.003692 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001248, iou_loss = 0.000000, total_loss = 0.001248 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719138), count: 15, class_loss = 2.504433, iou_loss = 3.332997, total_loss = 5.837430 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750606), count: 27, class_loss = 2.020543, iou_loss = 1.373257, total_loss = 3.393800 \n",
            " total_bbox = 704360, rewritten_bbox = 0.003691 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.788826), count: 5, class_loss = 1.401855, iou_loss = 12.368898, total_loss = 13.770753 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.673631), count: 15, class_loss = 4.073630, iou_loss = 3.456447, total_loss = 7.530077 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735948), count: 18, class_loss = 2.904984, iou_loss = 1.024178, total_loss = 3.929161 \n",
            " total_bbox = 704398, rewritten_bbox = 0.003691 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.640171), count: 3, class_loss = 0.890384, iou_loss = 5.557310, total_loss = 6.447693 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.682735), count: 16, class_loss = 2.957853, iou_loss = 3.810075, total_loss = 6.767928 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765868), count: 18, class_loss = 1.567205, iou_loss = 1.454708, total_loss = 3.021914 \n",
            " total_bbox = 704435, rewritten_bbox = 0.003691 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000093, iou_loss = 0.000000, total_loss = 0.000093 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.001432, iou_loss = 0.000000, total_loss = 0.001432 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.657894), count: 9, class_loss = 1.563250, iou_loss = 0.164604, total_loss = 1.727854 \n",
            " total_bbox = 704444, rewritten_bbox = 0.003691 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1043/6000: loss=2.7 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1043: 2.737372, 2.290261 avg loss, 0.001000 rate, 6.717311 seconds, 66752 images, 8.784161 hours left\n",
            "Loaded: 0.000087 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711508), count: 17, class_loss = 4.364856, iou_loss = 27.679966, total_loss = 32.044823 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781969), count: 39, class_loss = 6.158837, iou_loss = 13.540327, total_loss = 19.699163 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.782499), count: 32, class_loss = 2.770148, iou_loss = 2.230355, total_loss = 5.000504 \n",
            " total_bbox = 704532, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.681549), count: 2, class_loss = 0.584859, iou_loss = 4.091738, total_loss = 4.676597 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743250), count: 21, class_loss = 3.309106, iou_loss = 4.340745, total_loss = 7.649851 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738443), count: 29, class_loss = 2.486209, iou_loss = 2.004369, total_loss = 4.490578 \n",
            " total_bbox = 704584, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.105913, iou_loss = 0.000000, total_loss = 0.105913 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727767), count: 22, class_loss = 4.373647, iou_loss = 4.397293, total_loss = 8.770940 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717945), count: 26, class_loss = 5.170986, iou_loss = 1.828879, total_loss = 6.999865 \n",
            " total_bbox = 704632, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.828001), count: 1, class_loss = 0.059147, iou_loss = 0.149144, total_loss = 0.208291 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.701023), count: 12, class_loss = 2.814301, iou_loss = 0.363800, total_loss = 3.178101 \n",
            " total_bbox = 704645, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000202, iou_loss = 0.000000, total_loss = 0.000202 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805125), count: 5, class_loss = 0.652343, iou_loss = 1.710506, total_loss = 2.362850 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729434), count: 10, class_loss = 1.428319, iou_loss = 0.414928, total_loss = 1.843248 \n",
            " total_bbox = 704660, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.560941), count: 2, class_loss = 0.498189, iou_loss = 1.651641, total_loss = 2.149830 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793290), count: 5, class_loss = 0.997096, iou_loss = 2.557294, total_loss = 3.554390 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.686722), count: 11, class_loss = 0.790925, iou_loss = 0.371794, total_loss = 1.162720 \n",
            " total_bbox = 704678, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000019, iou_loss = 0.000000, total_loss = 0.000019 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000133, iou_loss = 0.000000, total_loss = 0.000133 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.704717), count: 10, class_loss = 0.608404, iou_loss = 0.236649, total_loss = 0.845052 \n",
            " total_bbox = 704688, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003233, iou_loss = 0.000000, total_loss = 0.003233 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775629), count: 3, class_loss = 0.846908, iou_loss = 1.088113, total_loss = 1.935021 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716550), count: 8, class_loss = 0.767506, iou_loss = 0.234685, total_loss = 1.002191 \n",
            " total_bbox = 704699, rewritten_bbox = 0.003690 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728879), count: 10, class_loss = 2.222834, iou_loss = 14.377062, total_loss = 16.599895 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720667), count: 40, class_loss = 5.516873, iou_loss = 11.621364, total_loss = 17.138237 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.694637), count: 27, class_loss = 4.109204, iou_loss = 1.819554, total_loss = 5.928758 \n",
            " total_bbox = 704776, rewritten_bbox = 0.003689 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.672437), count: 4, class_loss = 1.079876, iou_loss = 4.917477, total_loss = 5.997353 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.681436), count: 30, class_loss = 6.060886, iou_loss = 6.233867, total_loss = 12.294753 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755122), count: 32, class_loss = 3.662875, iou_loss = 2.121558, total_loss = 5.784433 \n",
            " total_bbox = 704842, rewritten_bbox = 0.003689 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.532557), count: 3, class_loss = 0.725736, iou_loss = 1.861684, total_loss = 2.587420 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758715), count: 28, class_loss = 3.140578, iou_loss = 6.722903, total_loss = 9.863482 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750072), count: 24, class_loss = 1.746917, iou_loss = 1.350836, total_loss = 3.097753 \n",
            " total_bbox = 704897, rewritten_bbox = 0.003688 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000448, iou_loss = 0.000000, total_loss = 0.000448 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.638108), count: 9, class_loss = 2.097842, iou_loss = 0.134138, total_loss = 2.231980 \n",
            " total_bbox = 704906, rewritten_bbox = 0.003688 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000052, iou_loss = 0.000000, total_loss = 0.000052 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.907322), count: 1, class_loss = 0.097772, iou_loss = 0.222865, total_loss = 0.320637 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739778), count: 10, class_loss = 0.895832, iou_loss = 0.350878, total_loss = 1.246710 \n",
            " total_bbox = 704917, rewritten_bbox = 0.003688 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684939), count: 1, class_loss = 0.300355, iou_loss = 1.197105, total_loss = 1.497461 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713103), count: 15, class_loss = 3.006653, iou_loss = 3.590604, total_loss = 6.597258 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766331), count: 15, class_loss = 1.153546, iou_loss = 0.683412, total_loss = 1.836958 \n",
            " total_bbox = 704948, rewritten_bbox = 0.003688 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.588036), count: 2, class_loss = 0.512045, iou_loss = 2.819550, total_loss = 3.331595 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.688599), count: 21, class_loss = 4.797371, iou_loss = 3.919719, total_loss = 8.717091 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717643), count: 31, class_loss = 4.914598, iou_loss = 1.613217, total_loss = 6.527816 \n",
            " total_bbox = 705002, rewritten_bbox = 0.003688 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.715771), count: 3, class_loss = 0.858203, iou_loss = 3.103802, total_loss = 3.962006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724733), count: 20, class_loss = 5.276369, iou_loss = 4.574905, total_loss = 9.851274 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728026), count: 24, class_loss = 3.450527, iou_loss = 1.542474, total_loss = 4.993001 \n",
            " total_bbox = 705049, rewritten_bbox = 0.003688 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1044/6000: loss=2.0 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1044: 1.971033, 2.258338 avg loss, 0.001000 rate, 6.726607 seconds, 66816 images, 8.788814 hours left\n",
            "Loaded: 0.000075 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660971), count: 1, class_loss = 0.571429, iou_loss = 1.237343, total_loss = 1.808771 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746263), count: 18, class_loss = 4.244230, iou_loss = 3.468488, total_loss = 7.712718 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790776), count: 29, class_loss = 5.112272, iou_loss = 1.479243, total_loss = 6.591515 \n",
            " total_bbox = 705097, rewritten_bbox = 0.003687 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.622037), count: 7, class_loss = 1.715606, iou_loss = 12.074875, total_loss = 13.790481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.681787), count: 18, class_loss = 3.743210, iou_loss = 5.334199, total_loss = 9.077409 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747272), count: 21, class_loss = 2.297440, iou_loss = 0.916004, total_loss = 3.213444 \n",
            " total_bbox = 705143, rewritten_bbox = 0.003687 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.735695), count: 10, class_loss = 1.474726, iou_loss = 16.430698, total_loss = 17.905424 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.704550), count: 26, class_loss = 5.159357, iou_loss = 9.381062, total_loss = 14.540418 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770649), count: 27, class_loss = 3.215292, iou_loss = 1.475705, total_loss = 4.690997 \n",
            " total_bbox = 705206, rewritten_bbox = 0.003687 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.692418), count: 14, class_loss = 2.671677, iou_loss = 17.122606, total_loss = 19.794283 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713980), count: 35, class_loss = 5.892621, iou_loss = 12.180959, total_loss = 18.073580 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745558), count: 21, class_loss = 3.946465, iou_loss = 1.743715, total_loss = 5.690180 \n",
            " total_bbox = 705276, rewritten_bbox = 0.003687 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.616936), count: 2, class_loss = 1.048577, iou_loss = 1.938080, total_loss = 2.986657 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.685089), count: 25, class_loss = 4.395957, iou_loss = 6.625183, total_loss = 11.021139 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780997), count: 29, class_loss = 2.582621, iou_loss = 1.691574, total_loss = 4.274195 \n",
            " total_bbox = 705332, rewritten_bbox = 0.003686 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728124), count: 20, class_loss = 3.091305, iou_loss = 33.842079, total_loss = 36.933384 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738670), count: 35, class_loss = 5.446746, iou_loss = 13.205236, total_loss = 18.651983 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759580), count: 27, class_loss = 2.516459, iou_loss = 1.282472, total_loss = 3.798931 \n",
            " total_bbox = 705414, rewritten_bbox = 0.003686 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722903), count: 5, class_loss = 1.240025, iou_loss = 4.429077, total_loss = 5.669102 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727045), count: 37, class_loss = 6.306357, iou_loss = 8.848931, total_loss = 15.155289 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744190), count: 31, class_loss = 3.728275, iou_loss = 2.128928, total_loss = 5.857203 \n",
            " total_bbox = 705487, rewritten_bbox = 0.003685 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.606491), count: 12, class_loss = 3.924612, iou_loss = 11.410416, total_loss = 15.335027 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.709711), count: 60, class_loss = 11.191014, iou_loss = 16.486191, total_loss = 27.677204 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729237), count: 35, class_loss = 5.725183, iou_loss = 2.173437, total_loss = 7.898620 \n",
            " total_bbox = 705594, rewritten_bbox = 0.003685 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.693319), count: 27, class_loss = 5.718377, iou_loss = 35.651047, total_loss = 41.369423 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.699735), count: 34, class_loss = 5.670696, iou_loss = 14.003004, total_loss = 19.673700 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717187), count: 7, class_loss = 1.511199, iou_loss = 0.205760, total_loss = 1.716959 \n",
            " total_bbox = 705662, rewritten_bbox = 0.003684 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756944), count: 15, class_loss = 1.240449, iou_loss = 4.045558, total_loss = 5.286007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.699167), count: 12, class_loss = 0.982770, iou_loss = 0.460592, total_loss = 1.443362 \n",
            " total_bbox = 705689, rewritten_bbox = 0.003684 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.731227), count: 26, class_loss = 5.678555, iou_loss = 49.249012, total_loss = 54.927567 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.671619), count: 43, class_loss = 6.342981, iou_loss = 15.360086, total_loss = 21.703068 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739758), count: 14, class_loss = 2.018006, iou_loss = 0.993421, total_loss = 3.011427 \n",
            " total_bbox = 705772, rewritten_bbox = 0.003684 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.778114), count: 2, class_loss = 0.640208, iou_loss = 8.823471, total_loss = 9.463679 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.705883), count: 11, class_loss = 2.036027, iou_loss = 3.130936, total_loss = 5.166964 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747037), count: 13, class_loss = 2.491779, iou_loss = 0.493377, total_loss = 2.985156 \n",
            " total_bbox = 705798, rewritten_bbox = 0.003684 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000050, iou_loss = 0.000000, total_loss = 0.000050 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775645), count: 15, class_loss = 1.643942, iou_loss = 4.468578, total_loss = 6.112520 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.700247), count: 13, class_loss = 1.567790, iou_loss = 0.587923, total_loss = 2.155713 \n",
            " total_bbox = 705826, rewritten_bbox = 0.003684 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.620810), count: 7, class_loss = 1.545701, iou_loss = 15.739266, total_loss = 17.284967 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.611991), count: 4, class_loss = 1.216833, iou_loss = 1.002260, total_loss = 2.219092 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.638380), count: 7, class_loss = 1.141388, iou_loss = 0.120485, total_loss = 1.261873 \n",
            " total_bbox = 705844, rewritten_bbox = 0.003684 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.816271), count: 15, class_loss = 2.742573, iou_loss = 30.882061, total_loss = 33.624634 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738638), count: 13, class_loss = 1.747164, iou_loss = 5.956917, total_loss = 7.704081 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722531), count: 8, class_loss = 0.811389, iou_loss = 0.179177, total_loss = 0.990566 \n",
            " total_bbox = 705880, rewritten_bbox = 0.003683 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001244, iou_loss = 0.000000, total_loss = 0.001244 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.829669), count: 3, class_loss = 0.230666, iou_loss = 1.140791, total_loss = 1.371457 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.614299), count: 8, class_loss = 0.854922, iou_loss = 0.162531, total_loss = 1.017453 \n",
            " total_bbox = 705891, rewritten_bbox = 0.003683 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1045/6000: loss=2.9 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1045: 2.902098, 2.322714 avg loss, 0.001000 rate, 6.787279 seconds, 66880 images, 8.793530 hours left\n",
            "Loaded: 0.000057 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.706343), count: 1, class_loss = 0.195944, iou_loss = 0.847675, total_loss = 1.043619 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706167), count: 12, class_loss = 0.933462, iou_loss = 3.324804, total_loss = 4.258266 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758896), count: 11, class_loss = 0.601615, iou_loss = 0.451722, total_loss = 1.053337 \n",
            " total_bbox = 705915, rewritten_bbox = 0.003683 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.708342), count: 1, class_loss = 0.237226, iou_loss = 0.741923, total_loss = 0.979149 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.636168), count: 6, class_loss = 1.172171, iou_loss = 0.852874, total_loss = 2.025045 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.646504), count: 9, class_loss = 1.641370, iou_loss = 0.270501, total_loss = 1.911871 \n",
            " total_bbox = 705931, rewritten_bbox = 0.003683 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000327, iou_loss = 0.000000, total_loss = 0.000327 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.528121), count: 5, class_loss = 1.173521, iou_loss = 0.652859, total_loss = 1.826380 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734820), count: 13, class_loss = 1.620985, iou_loss = 0.404308, total_loss = 2.025292 \n",
            " total_bbox = 705949, rewritten_bbox = 0.003683 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.597558), count: 6, class_loss = 1.727920, iou_loss = 6.542454, total_loss = 8.270374 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748440), count: 27, class_loss = 5.966447, iou_loss = 5.768630, total_loss = 11.735077 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761024), count: 26, class_loss = 3.106777, iou_loss = 1.661856, total_loss = 4.768633 \n",
            " total_bbox = 706008, rewritten_bbox = 0.003683 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.659074), count: 2, class_loss = 0.746209, iou_loss = 2.437595, total_loss = 3.183805 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.660079), count: 34, class_loss = 6.887379, iou_loss = 6.595549, total_loss = 13.482927 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716315), count: 30, class_loss = 3.857770, iou_loss = 1.592790, total_loss = 5.450560 \n",
            " total_bbox = 706074, rewritten_bbox = 0.003682 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.742722), count: 2, class_loss = 0.448645, iou_loss = 2.426627, total_loss = 2.875272 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707198), count: 24, class_loss = 5.188114, iou_loss = 4.772571, total_loss = 9.960685 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781485), count: 28, class_loss = 2.020350, iou_loss = 1.386394, total_loss = 3.406744 \n",
            " total_bbox = 706128, rewritten_bbox = 0.003682 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.571832), count: 1, class_loss = 0.175236, iou_loss = 0.701616, total_loss = 0.876852 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738544), count: 15, class_loss = 2.593715, iou_loss = 3.577304, total_loss = 6.171019 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777760), count: 28, class_loss = 1.736014, iou_loss = 1.447765, total_loss = 3.183779 \n",
            " total_bbox = 706172, rewritten_bbox = 0.003682 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.636435), count: 5, class_loss = 1.390752, iou_loss = 4.183748, total_loss = 5.574500 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720441), count: 23, class_loss = 3.499304, iou_loss = 6.150621, total_loss = 9.649925 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.708750), count: 20, class_loss = 1.313693, iou_loss = 0.819478, total_loss = 2.133171 \n",
            " total_bbox = 706220, rewritten_bbox = 0.003682 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.758168), count: 22, class_loss = 5.092374, iou_loss = 41.951004, total_loss = 47.043377 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.682857), count: 45, class_loss = 7.329614, iou_loss = 12.955335, total_loss = 20.284948 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765856), count: 27, class_loss = 2.465308, iou_loss = 1.868588, total_loss = 4.333896 \n",
            " total_bbox = 706314, rewritten_bbox = 0.003681 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.715260), count: 6, class_loss = 0.994125, iou_loss = 8.211205, total_loss = 9.205331 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.777344), count: 36, class_loss = 4.572772, iou_loss = 10.873736, total_loss = 15.446508 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753325), count: 31, class_loss = 2.341123, iou_loss = 2.446084, total_loss = 4.787207 \n",
            " total_bbox = 706387, rewritten_bbox = 0.003681 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.751510), count: 3, class_loss = 0.616422, iou_loss = 3.366550, total_loss = 3.982972 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.691309), count: 14, class_loss = 3.024685, iou_loss = 2.581661, total_loss = 5.606346 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731373), count: 20, class_loss = 3.027531, iou_loss = 1.221905, total_loss = 4.249436 \n",
            " total_bbox = 706423, rewritten_bbox = 0.003681 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.109404, iou_loss = 0.000000, total_loss = 0.109404 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.829266), count: 7, class_loss = 1.943829, iou_loss = 2.676364, total_loss = 4.620193 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721760), count: 9, class_loss = 1.552974, iou_loss = 0.381646, total_loss = 1.934620 \n",
            " total_bbox = 706439, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000159, iou_loss = 0.000000, total_loss = 0.000159 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.616192), count: 1, class_loss = 0.133722, iou_loss = 0.102808, total_loss = 0.236530 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787969), count: 10, class_loss = 0.552797, iou_loss = 0.238904, total_loss = 0.791701 \n",
            " total_bbox = 706450, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.753431), count: 16, class_loss = 3.349898, iou_loss = 21.786209, total_loss = 25.136106 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722185), count: 36, class_loss = 6.866212, iou_loss = 14.369968, total_loss = 21.236181 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.695426), count: 14, class_loss = 1.637096, iou_loss = 0.678257, total_loss = 2.315353 \n",
            " total_bbox = 706516, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.702081), count: 4, class_loss = 0.321674, iou_loss = 4.069501, total_loss = 4.391175 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700655), count: 6, class_loss = 0.608736, iou_loss = 1.488319, total_loss = 2.097055 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745881), count: 7, class_loss = 0.550059, iou_loss = 0.266191, total_loss = 0.816250 \n",
            " total_bbox = 706533, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.816467), count: 2, class_loss = 0.437836, iou_loss = 0.346642, total_loss = 0.784478 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.802650), count: 10, class_loss = 0.934446, iou_loss = 0.312616, total_loss = 1.247062 \n",
            " total_bbox = 706545, rewritten_bbox = 0.003680 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1046/6000: loss=2.0 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1046: 2.019103, 2.292353 avg loss, 0.001000 rate, 6.748041 seconds, 66944 images, 8.799016 hours left\n",
            "Loaded: 0.000063 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000015, iou_loss = 0.000000, total_loss = 0.000015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.728034), count: 2, class_loss = 0.092957, iou_loss = 0.379202, total_loss = 0.472160 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744620), count: 10, class_loss = 0.956172, iou_loss = 0.383416, total_loss = 1.339587 \n",
            " total_bbox = 706557, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.632480), count: 1, class_loss = 0.262689, iou_loss = 0.084627, total_loss = 0.347316 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.815705), count: 10, class_loss = 1.067194, iou_loss = 0.266603, total_loss = 1.333797 \n",
            " total_bbox = 706568, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.811705), count: 3, class_loss = 0.750173, iou_loss = 1.000321, total_loss = 1.750494 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.827816), count: 9, class_loss = 0.668079, iou_loss = 0.381346, total_loss = 1.049425 \n",
            " total_bbox = 706580, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.696906), count: 2, class_loss = 0.434399, iou_loss = 0.139927, total_loss = 0.574326 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759031), count: 9, class_loss = 0.802898, iou_loss = 0.303130, total_loss = 1.106028 \n",
            " total_bbox = 706591, rewritten_bbox = 0.003680 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.676845), count: 6, class_loss = 1.088315, iou_loss = 5.843651, total_loss = 6.931965 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722629), count: 23, class_loss = 4.296973, iou_loss = 7.317197, total_loss = 11.614170 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.661890), count: 10, class_loss = 1.505436, iou_loss = 0.810478, total_loss = 2.315914 \n",
            " total_bbox = 706630, rewritten_bbox = 0.003679 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.714413), count: 3, class_loss = 0.438088, iou_loss = 0.334522, total_loss = 0.772610 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793367), count: 11, class_loss = 0.523602, iou_loss = 0.424762, total_loss = 0.948364 \n",
            " total_bbox = 706644, rewritten_bbox = 0.003679 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000025, iou_loss = 0.000000, total_loss = 0.000025 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.797571), count: 2, class_loss = 0.451561, iou_loss = 0.212344, total_loss = 0.663904 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.685822), count: 9, class_loss = 1.109067, iou_loss = 0.219970, total_loss = 1.329037 \n",
            " total_bbox = 706655, rewritten_bbox = 0.003679 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.797428), count: 1, class_loss = 0.036490, iou_loss = 0.140988, total_loss = 0.177479 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785014), count: 10, class_loss = 1.016999, iou_loss = 0.324836, total_loss = 1.341835 \n",
            " total_bbox = 706666, rewritten_bbox = 0.003679 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.569204), count: 11, class_loss = 5.103791, iou_loss = 21.386227, total_loss = 26.490017 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.702766), count: 32, class_loss = 5.982112, iou_loss = 8.496929, total_loss = 14.479041 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760756), count: 26, class_loss = 3.612996, iou_loss = 1.574829, total_loss = 5.187825 \n",
            " total_bbox = 706735, rewritten_bbox = 0.003679 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000362, iou_loss = 0.000000, total_loss = 0.000362 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.732708), count: 15, class_loss = 2.848092, iou_loss = 2.306137, total_loss = 5.154229 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747366), count: 29, class_loss = 3.326002, iou_loss = 1.358131, total_loss = 4.684134 \n",
            " total_bbox = 706778, rewritten_bbox = 0.003679 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.177671), count: 2, class_loss = 0.530896, iou_loss = 0.418103, total_loss = 0.948999 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729877), count: 16, class_loss = 2.701188, iou_loss = 2.518565, total_loss = 5.219753 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763196), count: 30, class_loss = 2.288661, iou_loss = 1.288356, total_loss = 3.577018 \n",
            " total_bbox = 706826, rewritten_bbox = 0.003678 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.737997), count: 5, class_loss = 1.151809, iou_loss = 6.944735, total_loss = 8.096544 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.703866), count: 20, class_loss = 4.854392, iou_loss = 4.606074, total_loss = 9.460466 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753272), count: 26, class_loss = 4.720887, iou_loss = 1.593842, total_loss = 6.314729 \n",
            " total_bbox = 706877, rewritten_bbox = 0.003678 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.683921), count: 4, class_loss = 1.118065, iou_loss = 5.493928, total_loss = 6.611993 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.710947), count: 34, class_loss = 6.328792, iou_loss = 7.704834, total_loss = 14.033626 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747098), count: 32, class_loss = 2.825755, iou_loss = 1.912794, total_loss = 4.738549 \n",
            " total_bbox = 706947, rewritten_bbox = 0.003678 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.504413), count: 5, class_loss = 1.426240, iou_loss = 12.942686, total_loss = 14.368927 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742909), count: 24, class_loss = 2.798802, iou_loss = 6.449701, total_loss = 9.248504 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771649), count: 21, class_loss = 1.039659, iou_loss = 1.317213, total_loss = 2.356873 \n",
            " total_bbox = 706997, rewritten_bbox = 0.003678 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001188, iou_loss = 0.000000, total_loss = 0.001188 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.780389), count: 3, class_loss = 0.286012, iou_loss = 0.534443, total_loss = 0.820455 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772703), count: 9, class_loss = 1.507038, iou_loss = 0.366003, total_loss = 1.873041 \n",
            " total_bbox = 707009, rewritten_bbox = 0.003677 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.743860), count: 9, class_loss = 1.361224, iou_loss = 9.449785, total_loss = 10.811009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722668), count: 27, class_loss = 3.072244, iou_loss = 9.407578, total_loss = 12.479821 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725347), count: 12, class_loss = 1.951458, iou_loss = 1.732181, total_loss = 3.683639 \n",
            " total_bbox = 707057, rewritten_bbox = 0.003677 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1047/6000: loss=1.6 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1047: 1.594426, 2.222560 avg loss, 0.001000 rate, 6.660104 seconds, 67008 images, 8.803887 hours left\n",
            "Loaded: 0.000080 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733975), count: 2, class_loss = 0.263944, iou_loss = 0.229843, total_loss = 0.493787 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740600), count: 8, class_loss = 0.585683, iou_loss = 0.252342, total_loss = 0.838026 \n",
            " total_bbox = 707067, rewritten_bbox = 0.003677 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787428), count: 3, class_loss = 0.379062, iou_loss = 0.238177, total_loss = 0.617239 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767465), count: 11, class_loss = 0.905785, iou_loss = 0.347658, total_loss = 1.253443 \n",
            " total_bbox = 707081, rewritten_bbox = 0.003677 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.712418), count: 26, class_loss = 4.639936, iou_loss = 40.120308, total_loss = 44.760242 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706147), count: 39, class_loss = 4.506158, iou_loss = 15.560470, total_loss = 20.066628 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.701181), count: 9, class_loss = 1.100217, iou_loss = 0.661599, total_loss = 1.761816 \n",
            " total_bbox = 707155, rewritten_bbox = 0.003677 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.768964), count: 12, class_loss = 1.089629, iou_loss = 23.355915, total_loss = 24.445543 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.702023), count: 19, class_loss = 2.369482, iou_loss = 5.545834, total_loss = 7.915315 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.711031), count: 11, class_loss = 1.288332, iou_loss = 0.418030, total_loss = 1.706362 \n",
            " total_bbox = 707197, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.730711), count: 1, class_loss = 0.131400, iou_loss = 0.888925, total_loss = 1.020326 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.699695), count: 4, class_loss = 0.624083, iou_loss = 0.780138, total_loss = 1.404221 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755526), count: 8, class_loss = 1.985024, iou_loss = 0.341548, total_loss = 2.326572 \n",
            " total_bbox = 707210, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.005902, iou_loss = 0.000000, total_loss = 0.005902 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.780256), count: 27, class_loss = 4.356175, iou_loss = 9.235756, total_loss = 13.591931 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790195), count: 16, class_loss = 2.140108, iou_loss = 1.169654, total_loss = 3.309761 \n",
            " total_bbox = 707253, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.007430, iou_loss = 0.000000, total_loss = 0.007430 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.798766), count: 8, class_loss = 0.576919, iou_loss = 0.134761, total_loss = 0.711680 \n",
            " total_bbox = 707261, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664475), count: 11, class_loss = 1.677468, iou_loss = 18.801628, total_loss = 20.479095 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.628612), count: 16, class_loss = 2.530343, iou_loss = 5.484365, total_loss = 8.014708 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757438), count: 10, class_loss = 0.811750, iou_loss = 0.451826, total_loss = 1.263576 \n",
            " total_bbox = 707298, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000150, iou_loss = 0.000000, total_loss = 0.000150 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800255), count: 10, class_loss = 0.295763, iou_loss = 0.306065, total_loss = 0.601828 \n",
            " total_bbox = 707308, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.634907), count: 3, class_loss = 0.202537, iou_loss = 0.776018, total_loss = 0.978555 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.776030), count: 9, class_loss = 0.237117, iou_loss = 0.278979, total_loss = 0.516096 \n",
            " total_bbox = 707320, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000019, iou_loss = 0.000000, total_loss = 0.000019 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000883, iou_loss = 0.000000, total_loss = 0.000883 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.796111), count: 9, class_loss = 0.568083, iou_loss = 0.235161, total_loss = 0.803244 \n",
            " total_bbox = 707329, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711241), count: 2, class_loss = 0.576673, iou_loss = 2.928798, total_loss = 3.505471 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742501), count: 13, class_loss = 2.544191, iou_loss = 3.933356, total_loss = 6.477547 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744683), count: 14, class_loss = 2.069349, iou_loss = 0.375182, total_loss = 2.444531 \n",
            " total_bbox = 707358, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.930933), count: 1, class_loss = 0.097838, iou_loss = 0.058428, total_loss = 0.156266 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785442), count: 10, class_loss = 0.759902, iou_loss = 0.362974, total_loss = 1.122875 \n",
            " total_bbox = 707369, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.797807), count: 1, class_loss = 0.249078, iou_loss = 0.153100, total_loss = 0.402178 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.819452), count: 11, class_loss = 0.281345, iou_loss = 0.386880, total_loss = 0.668226 \n",
            " total_bbox = 707381, rewritten_bbox = 0.003676 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660472), count: 5, class_loss = 1.969314, iou_loss = 6.052587, total_loss = 8.021900 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.659968), count: 18, class_loss = 6.160670, iou_loss = 3.994078, total_loss = 10.154748 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.624490), count: 11, class_loss = 3.228118, iou_loss = 0.532065, total_loss = 3.760183 \n",
            " total_bbox = 707415, rewritten_bbox = 0.003675 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.670863), count: 2, class_loss = 0.269698, iou_loss = 0.149570, total_loss = 0.419268 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743834), count: 9, class_loss = 1.304243, iou_loss = 0.214959, total_loss = 1.519202 \n",
            " total_bbox = 707426, rewritten_bbox = 0.003675 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1048/6000: loss=1.1 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1048: 1.103130, 2.110617 avg loss, 0.001000 rate, 6.703480 seconds, 67072 images, 8.807481 hours left\n",
            "Loaded: 0.000077 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000212, iou_loss = 0.000000, total_loss = 0.000212 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768572), count: 19, class_loss = 3.076209, iou_loss = 4.859516, total_loss = 7.935725 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.706720), count: 21, class_loss = 2.254869, iou_loss = 1.557774, total_loss = 3.812644 \n",
            " total_bbox = 707466, rewritten_bbox = 0.003675 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.711348), count: 3, class_loss = 0.516222, iou_loss = 0.163086, total_loss = 0.679309 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793683), count: 11, class_loss = 0.365533, iou_loss = 0.497515, total_loss = 0.863048 \n",
            " total_bbox = 707480, rewritten_bbox = 0.003675 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.799129), count: 13, class_loss = 1.964643, iou_loss = 15.252468, total_loss = 17.217112 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795852), count: 41, class_loss = 2.876153, iou_loss = 16.629890, total_loss = 19.506042 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734554), count: 18, class_loss = 0.872300, iou_loss = 1.345610, total_loss = 2.217910 \n",
            " total_bbox = 707552, rewritten_bbox = 0.003675 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004248, iou_loss = 0.000000, total_loss = 0.004248 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729098), count: 3, class_loss = 0.568333, iou_loss = 0.917242, total_loss = 1.485574 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767419), count: 8, class_loss = 0.363552, iou_loss = 0.230175, total_loss = 0.593727 \n",
            " total_bbox = 707563, rewritten_bbox = 0.003675 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.833177), count: 2, class_loss = 0.436207, iou_loss = 4.214316, total_loss = 4.650524 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.645658), count: 10, class_loss = 1.358213, iou_loss = 2.949608, total_loss = 4.307821 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.791580), count: 9, class_loss = 0.779140, iou_loss = 0.590397, total_loss = 1.369538 \n",
            " total_bbox = 707584, rewritten_bbox = 0.003674 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003862, iou_loss = 0.000000, total_loss = 0.003862 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744647), count: 6, class_loss = 1.557262, iou_loss = 1.692737, total_loss = 3.250000 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766916), count: 8, class_loss = 1.027625, iou_loss = 0.575655, total_loss = 1.603280 \n",
            " total_bbox = 707598, rewritten_bbox = 0.003674 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000012, iou_loss = 0.000000, total_loss = 0.000012 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.858249), count: 1, class_loss = 0.020720, iou_loss = 0.172046, total_loss = 0.192766 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.799353), count: 8, class_loss = 1.149060, iou_loss = 0.166999, total_loss = 1.316059 \n",
            " total_bbox = 707607, rewritten_bbox = 0.003674 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.882217), count: 1, class_loss = 0.020316, iou_loss = 0.069808, total_loss = 0.090124 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800033), count: 10, class_loss = 0.295421, iou_loss = 0.291820, total_loss = 0.587241 \n",
            " total_bbox = 707618, rewritten_bbox = 0.003674 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.669908), count: 12, class_loss = 2.217204, iou_loss = 12.079281, total_loss = 14.296485 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746231), count: 34, class_loss = 4.493955, iou_loss = 12.517167, total_loss = 17.011122 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.727101), count: 23, class_loss = 3.793475, iou_loss = 2.029100, total_loss = 5.822575 \n",
            " total_bbox = 707687, rewritten_bbox = 0.003674 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.613513), count: 4, class_loss = 1.481257, iou_loss = 4.126327, total_loss = 5.607584 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719154), count: 23, class_loss = 4.393327, iou_loss = 4.648364, total_loss = 9.041691 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745553), count: 26, class_loss = 2.744919, iou_loss = 1.597810, total_loss = 4.342729 \n",
            " total_bbox = 707740, rewritten_bbox = 0.003674 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.595319), count: 7, class_loss = 2.269018, iou_loss = 11.114543, total_loss = 13.383561 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.669072), count: 36, class_loss = 8.374313, iou_loss = 8.797810, total_loss = 17.172123 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.656190), count: 21, class_loss = 3.204204, iou_loss = 1.334823, total_loss = 4.539028 \n",
            " total_bbox = 707804, rewritten_bbox = 0.003673 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722226), count: 12, class_loss = 2.170310, iou_loss = 25.766653, total_loss = 27.936964 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724382), count: 43, class_loss = 7.504155, iou_loss = 14.311418, total_loss = 21.815573 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729379), count: 26, class_loss = 5.000467, iou_loss = 1.941719, total_loss = 6.942186 \n",
            " total_bbox = 707885, rewritten_bbox = 0.003673 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.688655), count: 10, class_loss = 1.406177, iou_loss = 16.030817, total_loss = 17.436995 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.653183), count: 20, class_loss = 3.793456, iou_loss = 4.157281, total_loss = 7.950737 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731630), count: 26, class_loss = 2.726306, iou_loss = 1.160028, total_loss = 3.886334 \n",
            " total_bbox = 707941, rewritten_bbox = 0.003673 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.530301), count: 5, class_loss = 1.258601, iou_loss = 4.732710, total_loss = 5.991311 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719478), count: 20, class_loss = 5.358288, iou_loss = 5.261045, total_loss = 10.619333 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759217), count: 17, class_loss = 1.434557, iou_loss = 1.375805, total_loss = 2.810362 \n",
            " total_bbox = 707983, rewritten_bbox = 0.003672 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.691010), count: 1, class_loss = 0.226961, iou_loss = 0.712848, total_loss = 0.939809 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730599), count: 13, class_loss = 1.493345, iou_loss = 3.231313, total_loss = 4.724658 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710486), count: 14, class_loss = 1.745530, iou_loss = 0.548017, total_loss = 2.293546 \n",
            " total_bbox = 708011, rewritten_bbox = 0.003672 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.751209), count: 8, class_loss = 0.243104, iou_loss = 11.180658, total_loss = 11.423762 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.634995), count: 12, class_loss = 0.521228, iou_loss = 2.343422, total_loss = 2.864650 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712897), count: 7, class_loss = 1.118354, iou_loss = 0.196171, total_loss = 1.314525 \n",
            " total_bbox = 708038, rewritten_bbox = 0.003672 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1049/6000: loss=1.8 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1049: 1.847559, 2.084311 avg loss, 0.001000 rate, 6.733214 seconds, 67136 images, 8.811618 hours left\n",
            "Loaded: 0.000071 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.703786), count: 25, class_loss = 5.881489, iou_loss = 27.670006, total_loss = 33.551495 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.703079), count: 60, class_loss = 9.007456, iou_loss = 20.728113, total_loss = 29.735569 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715676), count: 26, class_loss = 2.330061, iou_loss = 2.017301, total_loss = 4.347362 \n",
            " total_bbox = 708149, rewritten_bbox = 0.003672 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.799376), count: 6, class_loss = 1.014890, iou_loss = 10.585902, total_loss = 11.600793 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700994), count: 34, class_loss = 5.662298, iou_loss = 8.951475, total_loss = 14.613773 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748235), count: 28, class_loss = 3.813586, iou_loss = 1.798398, total_loss = 5.611983 \n",
            " total_bbox = 708217, rewritten_bbox = 0.003671 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.670755), count: 15, class_loss = 4.575031, iou_loss = 22.172846, total_loss = 26.747877 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762195), count: 47, class_loss = 9.721445, iou_loss = 17.986507, total_loss = 27.707952 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721802), count: 30, class_loss = 4.271631, iou_loss = 1.835734, total_loss = 6.107366 \n",
            " total_bbox = 708309, rewritten_bbox = 0.003671 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.673671), count: 2, class_loss = 0.474033, iou_loss = 2.349659, total_loss = 2.823691 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738942), count: 17, class_loss = 3.365448, iou_loss = 4.219828, total_loss = 7.585276 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728421), count: 32, class_loss = 6.371719, iou_loss = 1.341141, total_loss = 7.712860 \n",
            " total_bbox = 708360, rewritten_bbox = 0.003670 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.766617), count: 8, class_loss = 1.321362, iou_loss = 12.434752, total_loss = 13.756114 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718582), count: 23, class_loss = 4.238250, iou_loss = 7.246683, total_loss = 11.484933 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738122), count: 25, class_loss = 2.845027, iou_loss = 1.013076, total_loss = 3.858103 \n",
            " total_bbox = 708416, rewritten_bbox = 0.003670 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.250624), count: 4, class_loss = 1.078999, iou_loss = 2.357395, total_loss = 3.436394 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729103), count: 34, class_loss = 5.948226, iou_loss = 10.772515, total_loss = 16.720741 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733645), count: 32, class_loss = 3.512149, iou_loss = 2.167760, total_loss = 5.679909 \n",
            " total_bbox = 708486, rewritten_bbox = 0.003670 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.666755), count: 2, class_loss = 0.516697, iou_loss = 1.454539, total_loss = 1.971236 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.710748), count: 22, class_loss = 5.753648, iou_loss = 5.782766, total_loss = 11.536414 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716401), count: 21, class_loss = 3.310479, iou_loss = 1.075729, total_loss = 4.386209 \n",
            " total_bbox = 708531, rewritten_bbox = 0.003670 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.719769), count: 16, class_loss = 3.476944, iou_loss = 27.955835, total_loss = 31.432779 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.712330), count: 50, class_loss = 9.291960, iou_loss = 17.993095, total_loss = 27.285055 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730428), count: 24, class_loss = 3.612426, iou_loss = 1.959355, total_loss = 5.571781 \n",
            " total_bbox = 708621, rewritten_bbox = 0.003669 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771079), count: 1, class_loss = 0.185901, iou_loss = 0.113746, total_loss = 0.299647 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.792280), count: 10, class_loss = 0.543722, iou_loss = 0.396224, total_loss = 0.939946 \n",
            " total_bbox = 708632, rewritten_bbox = 0.003669 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000036, iou_loss = 0.000000, total_loss = 0.000036 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000674, iou_loss = 0.000000, total_loss = 0.000674 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728562), count: 9, class_loss = 1.007963, iou_loss = 0.214749, total_loss = 1.222712 \n",
            " total_bbox = 708641, rewritten_bbox = 0.003669 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.814445), count: 10, class_loss = 0.841436, iou_loss = 15.258316, total_loss = 16.099752 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718968), count: 20, class_loss = 2.474885, iou_loss = 6.619757, total_loss = 9.094642 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775289), count: 12, class_loss = 1.373011, iou_loss = 0.551826, total_loss = 1.924837 \n",
            " total_bbox = 708683, rewritten_bbox = 0.003669 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.703766), count: 2, class_loss = 0.547960, iou_loss = 1.550205, total_loss = 2.098166 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793765), count: 33, class_loss = 5.187117, iou_loss = 11.437769, total_loss = 16.624886 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736890), count: 24, class_loss = 1.680344, iou_loss = 1.502766, total_loss = 3.183110 \n",
            " total_bbox = 708742, rewritten_bbox = 0.003668 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.688551), count: 10, class_loss = 2.530011, iou_loss = 10.838627, total_loss = 13.368638 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763238), count: 29, class_loss = 6.555697, iou_loss = 9.315916, total_loss = 15.871614 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767840), count: 27, class_loss = 3.273700, iou_loss = 1.432195, total_loss = 4.705895 \n",
            " total_bbox = 708808, rewritten_bbox = 0.003668 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.693793), count: 3, class_loss = 0.836681, iou_loss = 3.031246, total_loss = 3.867927 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768734), count: 16, class_loss = 4.014247, iou_loss = 4.652178, total_loss = 8.666426 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735549), count: 19, class_loss = 1.654495, iou_loss = 1.111335, total_loss = 2.765830 \n",
            " total_bbox = 708846, rewritten_bbox = 0.003668 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.710667), count: 4, class_loss = 1.352282, iou_loss = 0.558577, total_loss = 1.910859 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.680559), count: 12, class_loss = 1.386941, iou_loss = 0.367289, total_loss = 1.754230 \n",
            " total_bbox = 708862, rewritten_bbox = 0.003668 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003316, iou_loss = 0.000000, total_loss = 0.003316 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.845670), count: 12, class_loss = 1.616491, iou_loss = 2.866586, total_loss = 4.483077 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.643206), count: 14, class_loss = 1.329472, iou_loss = 0.466584, total_loss = 1.796056 \n",
            " total_bbox = 708888, rewritten_bbox = 0.003668 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1050/6000: loss=2.9 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1050: 2.916703, 2.167551 avg loss, 0.001000 rate, 6.837045 seconds, 67200 images, 8.816103 hours left\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 416 x 416 \n",
            " try to allocate additional workspace_size = 111.05 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 1.549678 seconds - performance bottleneck on CPU or Disk HDD/SSD\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.829844), count: 1, class_loss = 0.266903, iou_loss = 0.620288, total_loss = 0.887191 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763042), count: 25, class_loss = 4.406498, iou_loss = 5.290823, total_loss = 9.697322 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719381), count: 20, class_loss = 1.072568, iou_loss = 0.791386, total_loss = 1.863954 \n",
            " total_bbox = 708934, rewritten_bbox = 0.003667 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.733034), count: 7, class_loss = 1.727781, iou_loss = 5.358377, total_loss = 7.086159 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772721), count: 36, class_loss = 5.566782, iou_loss = 7.019044, total_loss = 12.585826 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758130), count: 29, class_loss = 2.724753, iou_loss = 1.895639, total_loss = 4.620392 \n",
            " total_bbox = 709006, rewritten_bbox = 0.003667 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.701569), count: 2, class_loss = 0.514686, iou_loss = 3.710479, total_loss = 4.225165 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736894), count: 27, class_loss = 5.909449, iou_loss = 5.227262, total_loss = 11.136711 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.699536), count: 22, class_loss = 2.614975, iou_loss = 0.938513, total_loss = 3.553488 \n",
            " total_bbox = 709057, rewritten_bbox = 0.003667 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.673213), count: 57, class_loss = 9.849300, iou_loss = 101.521896, total_loss = 111.371193 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758333), count: 62, class_loss = 10.378397, iou_loss = 21.205492, total_loss = 31.583889 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713125), count: 31, class_loss = 5.044123, iou_loss = 2.138947, total_loss = 7.183070 \n",
            " total_bbox = 709207, rewritten_bbox = 0.003666 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.550691), count: 5, class_loss = 1.340867, iou_loss = 2.627115, total_loss = 3.967981 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737399), count: 28, class_loss = 4.773741, iou_loss = 5.341148, total_loss = 10.114889 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732896), count: 24, class_loss = 2.069721, iou_loss = 1.098189, total_loss = 3.167910 \n",
            " total_bbox = 709264, rewritten_bbox = 0.003666 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.561982), count: 2, class_loss = 0.524302, iou_loss = 1.942495, total_loss = 2.466797 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762011), count: 16, class_loss = 3.044466, iou_loss = 2.290758, total_loss = 5.335224 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.706346), count: 22, class_loss = 2.535075, iou_loss = 1.011314, total_loss = 3.546390 \n",
            " total_bbox = 709304, rewritten_bbox = 0.003666 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.693570), count: 17, class_loss = 2.434956, iou_loss = 26.735201, total_loss = 29.170156 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751273), count: 24, class_loss = 5.113969, iou_loss = 5.100670, total_loss = 10.214639 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743598), count: 25, class_loss = 3.593514, iou_loss = 1.241802, total_loss = 4.835316 \n",
            " total_bbox = 709370, rewritten_bbox = 0.003665 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.643821), count: 1, class_loss = 0.328646, iou_loss = 0.449434, total_loss = 0.778080 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720084), count: 36, class_loss = 8.631726, iou_loss = 5.937470, total_loss = 14.569197 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.699357), count: 30, class_loss = 3.170660, iou_loss = 1.348129, total_loss = 4.518789 \n",
            " total_bbox = 709437, rewritten_bbox = 0.003665 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664732), count: 18, class_loss = 4.946875, iou_loss = 23.305336, total_loss = 28.252211 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.643723), count: 9, class_loss = 2.260659, iou_loss = 2.053491, total_loss = 4.314150 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766313), count: 6, class_loss = 1.439613, iou_loss = 0.420038, total_loss = 1.859651 \n",
            " total_bbox = 709470, rewritten_bbox = 0.003665 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.574862), count: 4, class_loss = 1.460664, iou_loss = 2.870059, total_loss = 4.330723 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.702733), count: 13, class_loss = 2.626281, iou_loss = 3.538759, total_loss = 6.165040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.711653), count: 9, class_loss = 1.540053, iou_loss = 0.272837, total_loss = 1.812890 \n",
            " total_bbox = 709496, rewritten_bbox = 0.003665 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.552415), count: 1, class_loss = 0.243694, iou_loss = 0.685585, total_loss = 0.929279 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707969), count: 8, class_loss = 1.757931, iou_loss = 1.358803, total_loss = 3.116735 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741198), count: 16, class_loss = 2.600863, iou_loss = 0.536951, total_loss = 3.137814 \n",
            " total_bbox = 709521, rewritten_bbox = 0.003664 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.637982), count: 7, class_loss = 1.548437, iou_loss = 4.121095, total_loss = 5.669532 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.695827), count: 24, class_loss = 3.868967, iou_loss = 3.096758, total_loss = 6.965725 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734646), count: 29, class_loss = 2.779242, iou_loss = 1.234403, total_loss = 4.013645 \n",
            " total_bbox = 709581, rewritten_bbox = 0.003664 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.552744), count: 3, class_loss = 0.849009, iou_loss = 4.504418, total_loss = 5.353427 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743400), count: 21, class_loss = 3.106346, iou_loss = 3.265110, total_loss = 6.371457 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758620), count: 25, class_loss = 3.098194, iou_loss = 0.939459, total_loss = 4.037652 \n",
            " total_bbox = 709630, rewritten_bbox = 0.003664 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.659441), count: 9, class_loss = 3.299095, iou_loss = 11.352461, total_loss = 14.651555 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749488), count: 30, class_loss = 4.924672, iou_loss = 6.218936, total_loss = 11.143608 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.693692), count: 22, class_loss = 3.192993, iou_loss = 0.919987, total_loss = 4.112980 \n",
            " total_bbox = 709691, rewritten_bbox = 0.003664 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.672432), count: 3, class_loss = 0.730305, iou_loss = 2.751861, total_loss = 3.482167 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734692), count: 26, class_loss = 4.192751, iou_loss = 4.635923, total_loss = 8.828674 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740076), count: 29, class_loss = 3.260584, iou_loss = 1.169365, total_loss = 4.429948 \n",
            " total_bbox = 709749, rewritten_bbox = 0.003663 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.724865), count: 12, class_loss = 1.647920, iou_loss = 11.811990, total_loss = 13.459910 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743343), count: 32, class_loss = 4.483066, iou_loss = 7.672626, total_loss = 12.155692 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746998), count: 25, class_loss = 4.056563, iou_loss = 1.348409, total_loss = 5.404972 \n",
            " total_bbox = 709818, rewritten_bbox = 0.003663 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1051/6000: loss=3.2 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1051: 3.162518, 2.267047 avg loss, 0.001000 rate, 5.428824 seconds, 67264 images, 8.821952 hours left\n",
            "Loaded: 0.000049 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.704592), count: 15, class_loss = 3.921338, iou_loss = 14.764378, total_loss = 18.685715 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725373), count: 35, class_loss = 8.182661, iou_loss = 8.605566, total_loss = 16.788227 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713057), count: 20, class_loss = 3.777604, iou_loss = 1.081998, total_loss = 4.859601 \n",
            " total_bbox = 709888, rewritten_bbox = 0.003663 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.731322), count: 22, class_loss = 5.097070, iou_loss = 39.607784, total_loss = 44.704853 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.717020), count: 40, class_loss = 6.782027, iou_loss = 7.985372, total_loss = 14.767399 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746897), count: 29, class_loss = 1.849844, iou_loss = 1.370931, total_loss = 3.220774 \n",
            " total_bbox = 709979, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690151), count: 3, class_loss = 0.438106, iou_loss = 2.753977, total_loss = 3.192084 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.711640), count: 16, class_loss = 3.266420, iou_loss = 2.132740, total_loss = 5.399160 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772827), count: 19, class_loss = 1.845534, iou_loss = 1.019813, total_loss = 2.865347 \n",
            " total_bbox = 710017, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.884017), count: 3, class_loss = 0.136468, iou_loss = 0.391703, total_loss = 0.528171 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745954), count: 9, class_loss = 0.344573, iou_loss = 0.264683, total_loss = 0.609256 \n",
            " total_bbox = 710029, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.856921), count: 1, class_loss = 0.266610, iou_loss = 0.453624, total_loss = 0.720234 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.695863), count: 4, class_loss = 1.230420, iou_loss = 0.605228, total_loss = 1.835648 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725091), count: 8, class_loss = 0.767198, iou_loss = 0.417787, total_loss = 1.184985 \n",
            " total_bbox = 710042, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.643796), count: 6, class_loss = 1.261984, iou_loss = 0.635442, total_loss = 1.897426 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.697915), count: 11, class_loss = 1.806692, iou_loss = 0.229607, total_loss = 2.036299 \n",
            " total_bbox = 710059, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792440), count: 3, class_loss = 0.185163, iou_loss = 0.278042, total_loss = 0.463205 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.786950), count: 11, class_loss = 1.009154, iou_loss = 0.321373, total_loss = 1.330527 \n",
            " total_bbox = 710073, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.670442), count: 4, class_loss = 0.261349, iou_loss = 0.576660, total_loss = 0.838008 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.692840), count: 8, class_loss = 0.275787, iou_loss = 0.209545, total_loss = 0.485332 \n",
            " total_bbox = 710085, rewritten_bbox = 0.003662 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759514), count: 3, class_loss = 1.041004, iou_loss = 1.960940, total_loss = 3.001943 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778516), count: 20, class_loss = 2.116322, iou_loss = 3.883801, total_loss = 6.000123 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775712), count: 26, class_loss = 1.991542, iou_loss = 1.191835, total_loss = 3.183377 \n",
            " total_bbox = 710134, rewritten_bbox = 0.003661 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.007240, iou_loss = 0.000000, total_loss = 0.007240 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773392), count: 21, class_loss = 3.968851, iou_loss = 3.364253, total_loss = 7.333104 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739502), count: 26, class_loss = 3.534052, iou_loss = 0.861359, total_loss = 4.395411 \n",
            " total_bbox = 710181, rewritten_bbox = 0.003661 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.542761), count: 6, class_loss = 1.997965, iou_loss = 10.122082, total_loss = 12.120047 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786066), count: 15, class_loss = 2.723437, iou_loss = 2.584731, total_loss = 5.308167 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716330), count: 19, class_loss = 1.439766, iou_loss = 0.773841, total_loss = 2.213607 \n",
            " total_bbox = 710221, rewritten_bbox = 0.003661 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000022, iou_loss = 0.000000, total_loss = 0.000022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.897340), count: 2, class_loss = 0.311622, iou_loss = 0.297733, total_loss = 0.609355 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741009), count: 10, class_loss = 0.709877, iou_loss = 0.339522, total_loss = 1.049399 \n",
            " total_bbox = 710233, rewritten_bbox = 0.003661 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.709946), count: 40, class_loss = 6.021266, iou_loss = 62.994083, total_loss = 69.015350 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.673953), count: 19, class_loss = 2.809320, iou_loss = 7.740700, total_loss = 10.550020 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.675013), count: 7, class_loss = 1.309448, iou_loss = 0.145694, total_loss = 1.455141 \n",
            " total_bbox = 710299, rewritten_bbox = 0.003660 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.698064), count: 7, class_loss = 1.634753, iou_loss = 5.077558, total_loss = 6.712310 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.664903), count: 25, class_loss = 4.928881, iou_loss = 4.094982, total_loss = 9.023863 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725422), count: 16, class_loss = 2.294758, iou_loss = 1.319848, total_loss = 3.614606 \n",
            " total_bbox = 710347, rewritten_bbox = 0.003660 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.669277), count: 27, class_loss = 5.913762, iou_loss = 43.830597, total_loss = 49.744358 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.687263), count: 45, class_loss = 9.009418, iou_loss = 12.324949, total_loss = 21.334368 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781552), count: 26, class_loss = 3.440259, iou_loss = 1.512273, total_loss = 4.952531 \n",
            " total_bbox = 710445, rewritten_bbox = 0.003660 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.656065), count: 2, class_loss = 1.036689, iou_loss = 1.820416, total_loss = 2.857105 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757612), count: 25, class_loss = 6.393876, iou_loss = 3.570181, total_loss = 9.964057 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732177), count: 32, class_loss = 4.744603, iou_loss = 1.418831, total_loss = 6.163434 \n",
            " total_bbox = 710504, rewritten_bbox = 0.003659 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1052/6000: loss=2.3 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1052: 2.339238, 2.274266 avg loss, 0.001000 rate, 5.457415 seconds, 67328 images, 8.829668 hours left\n",
            "Loaded: 0.000063 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.002338, iou_loss = 0.000000, total_loss = 0.002338 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765147), count: 29, class_loss = 4.888408, iou_loss = 5.517309, total_loss = 10.405717 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736812), count: 29, class_loss = 2.782359, iou_loss = 1.482631, total_loss = 4.264989 \n",
            " total_bbox = 710562, rewritten_bbox = 0.003659 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.732545), count: 7, class_loss = 1.674748, iou_loss = 11.680822, total_loss = 13.355571 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755786), count: 27, class_loss = 3.190401, iou_loss = 5.278727, total_loss = 8.469128 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767935), count: 28, class_loss = 3.021368, iou_loss = 1.070045, total_loss = 4.091412 \n",
            " total_bbox = 710624, rewritten_bbox = 0.003659 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.709305), count: 33, class_loss = 5.799984, iou_loss = 46.632370, total_loss = 52.432354 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.696409), count: 43, class_loss = 5.532921, iou_loss = 12.411625, total_loss = 17.944546 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735111), count: 20, class_loss = 2.583037, iou_loss = 0.950332, total_loss = 3.533369 \n",
            " total_bbox = 710720, rewritten_bbox = 0.003658 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.667877), count: 2, class_loss = 0.392729, iou_loss = 0.160473, total_loss = 0.553202 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752265), count: 10, class_loss = 1.435884, iou_loss = 0.222620, total_loss = 1.658504 \n",
            " total_bbox = 710732, rewritten_bbox = 0.003658 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.651820), count: 5, class_loss = 0.503551, iou_loss = 0.513533, total_loss = 1.017084 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748852), count: 10, class_loss = 0.650247, iou_loss = 0.267289, total_loss = 0.917536 \n",
            " total_bbox = 710747, rewritten_bbox = 0.003658 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684360), count: 16, class_loss = 4.062082, iou_loss = 33.442833, total_loss = 37.504913 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.697373), count: 9, class_loss = 2.240784, iou_loss = 1.406427, total_loss = 3.647212 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759546), count: 15, class_loss = 1.535581, iou_loss = 0.470794, total_loss = 2.006375 \n",
            " total_bbox = 710787, rewritten_bbox = 0.003658 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.692600), count: 2, class_loss = 0.617600, iou_loss = 1.217363, total_loss = 1.834962 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.710770), count: 31, class_loss = 4.601326, iou_loss = 6.359568, total_loss = 10.960894 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744490), count: 27, class_loss = 2.245680, iou_loss = 1.210170, total_loss = 3.455850 \n",
            " total_bbox = 710847, rewritten_bbox = 0.003658 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.305439), count: 1, class_loss = 0.367435, iou_loss = 0.150177, total_loss = 0.517612 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805090), count: 21, class_loss = 3.038913, iou_loss = 4.305449, total_loss = 7.344361 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768482), count: 29, class_loss = 1.599656, iou_loss = 1.702951, total_loss = 3.302606 \n",
            " total_bbox = 710898, rewritten_bbox = 0.003657 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.707628), count: 17, class_loss = 2.761780, iou_loss = 26.970112, total_loss = 29.731892 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723587), count: 28, class_loss = 4.899272, iou_loss = 6.275074, total_loss = 11.174346 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746183), count: 22, class_loss = 1.748412, iou_loss = 1.053662, total_loss = 2.802074 \n",
            " total_bbox = 710965, rewritten_bbox = 0.003657 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.628498), count: 1, class_loss = 0.312281, iou_loss = 0.454226, total_loss = 0.766506 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763149), count: 21, class_loss = 2.633315, iou_loss = 4.823368, total_loss = 7.456682 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778486), count: 26, class_loss = 1.622102, iou_loss = 1.000169, total_loss = 2.622271 \n",
            " total_bbox = 711013, rewritten_bbox = 0.003657 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.280868), count: 2, class_loss = 0.774012, iou_loss = 0.269992, total_loss = 1.044004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781665), count: 13, class_loss = 2.633665, iou_loss = 2.372618, total_loss = 5.006283 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732751), count: 16, class_loss = 0.663907, iou_loss = 0.583789, total_loss = 1.247696 \n",
            " total_bbox = 711044, rewritten_bbox = 0.003657 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.741179), count: 12, class_loss = 2.651873, iou_loss = 14.372849, total_loss = 17.024721 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762229), count: 33, class_loss = 5.519561, iou_loss = 7.455319, total_loss = 12.974880 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757130), count: 28, class_loss = 2.713088, iou_loss = 1.226220, total_loss = 3.939307 \n",
            " total_bbox = 711117, rewritten_bbox = 0.003656 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.576119), count: 5, class_loss = 1.620118, iou_loss = 3.212004, total_loss = 4.832122 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782453), count: 23, class_loss = 5.482120, iou_loss = 5.128886, total_loss = 10.611006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744131), count: 25, class_loss = 3.904583, iou_loss = 0.946927, total_loss = 4.851510 \n",
            " total_bbox = 711170, rewritten_bbox = 0.003656 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.644307), count: 3, class_loss = 0.748448, iou_loss = 5.407970, total_loss = 6.156418 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724730), count: 30, class_loss = 7.093723, iou_loss = 5.255273, total_loss = 12.348996 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.714475), count: 25, class_loss = 3.979788, iou_loss = 1.013697, total_loss = 4.993484 \n",
            " total_bbox = 711228, rewritten_bbox = 0.003656 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.313655), count: 1, class_loss = 0.253952, iou_loss = 0.186429, total_loss = 0.440381 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730434), count: 21, class_loss = 5.833051, iou_loss = 3.648441, total_loss = 9.481492 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.727432), count: 32, class_loss = 4.690256, iou_loss = 1.336595, total_loss = 6.026851 \n",
            " total_bbox = 711282, rewritten_bbox = 0.003655 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.718228), count: 8, class_loss = 3.174935, iou_loss = 9.518337, total_loss = 12.693272 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748359), count: 28, class_loss = 5.460518, iou_loss = 5.371836, total_loss = 10.832354 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770028), count: 30, class_loss = 4.486428, iou_loss = 1.169966, total_loss = 5.656394 \n",
            " total_bbox = 711348, rewritten_bbox = 0.003655 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1053/6000: loss=2.7 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1053: 2.680515, 2.314891 avg loss, 0.001000 rate, 5.488239 seconds, 67392 images, 8.816381 hours left\n",
            "Loaded: 0.000067 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.726345), count: 2, class_loss = 0.473443, iou_loss = 1.665486, total_loss = 2.138929 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747599), count: 29, class_loss = 5.338901, iou_loss = 5.726923, total_loss = 11.065824 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740229), count: 28, class_loss = 2.997405, iou_loss = 1.617537, total_loss = 4.614943 \n",
            " total_bbox = 711407, rewritten_bbox = 0.003655 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.699737), count: 5, class_loss = 1.339550, iou_loss = 4.802761, total_loss = 6.142311 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.712331), count: 27, class_loss = 6.962261, iou_loss = 5.537838, total_loss = 12.500099 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766591), count: 26, class_loss = 4.024693, iou_loss = 1.123977, total_loss = 5.148671 \n",
            " total_bbox = 711465, rewritten_bbox = 0.003654 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.614372), count: 7, class_loss = 1.631758, iou_loss = 7.608412, total_loss = 9.240170 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.692664), count: 36, class_loss = 7.963602, iou_loss = 6.351385, total_loss = 14.314987 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741771), count: 25, class_loss = 3.357681, iou_loss = 1.355319, total_loss = 4.713000 \n",
            " total_bbox = 711533, rewritten_bbox = 0.003654 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.705391), count: 2, class_loss = 0.634030, iou_loss = 1.635516, total_loss = 2.269546 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747129), count: 27, class_loss = 4.607544, iou_loss = 5.579654, total_loss = 10.187199 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.718600), count: 22, class_loss = 2.744174, iou_loss = 0.893083, total_loss = 3.637257 \n",
            " total_bbox = 711584, rewritten_bbox = 0.003654 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.751403), count: 21, class_loss = 3.092850, iou_loss = 31.044479, total_loss = 34.137329 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736592), count: 37, class_loss = 5.354733, iou_loss = 10.158639, total_loss = 15.513372 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737270), count: 22, class_loss = 2.051145, iou_loss = 0.929117, total_loss = 2.980262 \n",
            " total_bbox = 711664, rewritten_bbox = 0.003653 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.703657), count: 3, class_loss = 0.447483, iou_loss = 4.162902, total_loss = 4.610385 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766869), count: 15, class_loss = 2.267154, iou_loss = 3.000840, total_loss = 5.267994 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773891), count: 12, class_loss = 2.393296, iou_loss = 0.591749, total_loss = 2.985045 \n",
            " total_bbox = 711694, rewritten_bbox = 0.003653 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757750), count: 2, class_loss = 0.623987, iou_loss = 0.186606, total_loss = 0.810593 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769722), count: 14, class_loss = 1.748840, iou_loss = 0.417799, total_loss = 2.166640 \n",
            " total_bbox = 711710, rewritten_bbox = 0.003653 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.703831), count: 14, class_loss = 4.484730, iou_loss = 27.117701, total_loss = 31.602430 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749765), count: 6, class_loss = 0.654872, iou_loss = 2.603989, total_loss = 3.258861 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760633), count: 9, class_loss = 0.995578, iou_loss = 0.230350, total_loss = 1.225928 \n",
            " total_bbox = 711739, rewritten_bbox = 0.003653 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.720456), count: 20, class_loss = 3.148098, iou_loss = 28.164698, total_loss = 31.312796 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.750828), count: 40, class_loss = 4.713802, iou_loss = 11.463945, total_loss = 16.177748 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.723638), count: 21, class_loss = 1.699949, iou_loss = 1.137719, total_loss = 2.837668 \n",
            " total_bbox = 711820, rewritten_bbox = 0.003653 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.458518), count: 4, class_loss = 1.238435, iou_loss = 1.963676, total_loss = 3.202111 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723430), count: 26, class_loss = 5.227425, iou_loss = 4.137455, total_loss = 9.364880 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712880), count: 25, class_loss = 2.152926, iou_loss = 1.305453, total_loss = 3.458379 \n",
            " total_bbox = 711875, rewritten_bbox = 0.003652 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000991, iou_loss = 0.000000, total_loss = 0.000991 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775910), count: 22, class_loss = 2.174462, iou_loss = 3.370110, total_loss = 5.544572 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779370), count: 27, class_loss = 1.325445, iou_loss = 1.227915, total_loss = 2.553360 \n",
            " total_bbox = 711924, rewritten_bbox = 0.003652 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.747200), count: 4, class_loss = 1.268435, iou_loss = 4.895355, total_loss = 6.163790 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744195), count: 18, class_loss = 3.528393, iou_loss = 2.961405, total_loss = 6.489798 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778213), count: 27, class_loss = 2.995683, iou_loss = 0.972349, total_loss = 3.968033 \n",
            " total_bbox = 711973, rewritten_bbox = 0.003652 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.735153), count: 7, class_loss = 1.277462, iou_loss = 8.225496, total_loss = 9.502958 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720409), count: 32, class_loss = 3.589966, iou_loss = 7.009809, total_loss = 10.599774 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756907), count: 27, class_loss = 2.270992, iou_loss = 1.229901, total_loss = 3.500893 \n",
            " total_bbox = 712039, rewritten_bbox = 0.003651 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.763901), count: 2, class_loss = 0.464236, iou_loss = 1.308312, total_loss = 1.772548 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753940), count: 14, class_loss = 2.368476, iou_loss = 4.584414, total_loss = 6.952890 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788870), count: 15, class_loss = 0.942788, iou_loss = 0.602968, total_loss = 1.545755 \n",
            " total_bbox = 712070, rewritten_bbox = 0.003651 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751750), count: 1, class_loss = 0.180390, iou_loss = 0.081759, total_loss = 0.262148 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781597), count: 10, class_loss = 0.907683, iou_loss = 0.269971, total_loss = 1.177654 \n",
            " total_bbox = 712081, rewritten_bbox = 0.003651 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760039), count: 4, class_loss = 0.468310, iou_loss = 0.321765, total_loss = 0.790075 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707176), count: 10, class_loss = 1.484969, iou_loss = 0.273059, total_loss = 1.758029 \n",
            " total_bbox = 712095, rewritten_bbox = 0.003651 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1054/6000: loss=2.3 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1054: 2.288010, 2.312203 avg loss, 0.001000 rate, 5.582887 seconds, 67456 images, 8.803636 hours left\n",
            "Loaded: 0.000065 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.633633), count: 3, class_loss = 0.892175, iou_loss = 1.771084, total_loss = 2.663259 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.754365), count: 12, class_loss = 1.974747, iou_loss = 2.918388, total_loss = 4.893135 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748178), count: 22, class_loss = 1.690029, iou_loss = 1.055218, total_loss = 2.745247 \n",
            " total_bbox = 712132, rewritten_bbox = 0.003651 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.719188), count: 43, class_loss = 5.884108, iou_loss = 61.551735, total_loss = 67.435844 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706878), count: 65, class_loss = 8.962374, iou_loss = 20.113617, total_loss = 29.075991 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740151), count: 28, class_loss = 3.414408, iou_loss = 1.601367, total_loss = 5.015775 \n",
            " total_bbox = 712268, rewritten_bbox = 0.003650 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.721963), count: 21, class_loss = 2.966221, iou_loss = 37.679859, total_loss = 40.646080 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725798), count: 25, class_loss = 4.722368, iou_loss = 4.436429, total_loss = 9.158796 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740700), count: 22, class_loss = 2.416708, iou_loss = 0.843836, total_loss = 3.260544 \n",
            " total_bbox = 712336, rewritten_bbox = 0.003650 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.816499), count: 2, class_loss = 0.493412, iou_loss = 2.433169, total_loss = 2.926580 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.784404), count: 21, class_loss = 3.056382, iou_loss = 3.105275, total_loss = 6.161657 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739514), count: 29, class_loss = 2.208190, iou_loss = 1.177655, total_loss = 3.385845 \n",
            " total_bbox = 712388, rewritten_bbox = 0.003650 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.604659), count: 4, class_loss = 1.244456, iou_loss = 6.262179, total_loss = 7.506635 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782608), count: 18, class_loss = 2.375005, iou_loss = 2.757158, total_loss = 5.132163 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755677), count: 27, class_loss = 1.392292, iou_loss = 1.131140, total_loss = 2.523433 \n",
            " total_bbox = 712437, rewritten_bbox = 0.003649 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000178, iou_loss = 0.000000, total_loss = 0.000178 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742848), count: 13, class_loss = 2.296486, iou_loss = 2.110927, total_loss = 4.407413 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725556), count: 17, class_loss = 2.369721, iou_loss = 0.516352, total_loss = 2.886073 \n",
            " total_bbox = 712467, rewritten_bbox = 0.003649 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000022, iou_loss = 0.000000, total_loss = 0.000022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.878492), count: 2, class_loss = 0.195318, iou_loss = 0.269650, total_loss = 0.464967 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.685450), count: 8, class_loss = 0.781938, iou_loss = 0.186053, total_loss = 0.967990 \n",
            " total_bbox = 712477, rewritten_bbox = 0.003649 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000253, iou_loss = 0.000000, total_loss = 0.000253 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774251), count: 5, class_loss = 0.498944, iou_loss = 0.600503, total_loss = 1.099447 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753587), count: 13, class_loss = 1.107828, iou_loss = 0.371682, total_loss = 1.479510 \n",
            " total_bbox = 712495, rewritten_bbox = 0.003649 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.634877), count: 3, class_loss = 0.892304, iou_loss = 2.686167, total_loss = 3.578472 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715447), count: 21, class_loss = 3.251533, iou_loss = 3.331435, total_loss = 6.582968 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766212), count: 25, class_loss = 1.779785, iou_loss = 1.110585, total_loss = 2.890370 \n",
            " total_bbox = 712544, rewritten_bbox = 0.003649 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.654096), count: 6, class_loss = 1.877724, iou_loss = 5.986369, total_loss = 7.864092 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753921), count: 28, class_loss = 6.447225, iou_loss = 5.818096, total_loss = 12.265321 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707696), count: 21, class_loss = 2.797204, iou_loss = 0.967508, total_loss = 3.764711 \n",
            " total_bbox = 712599, rewritten_bbox = 0.003649 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.710169), count: 6, class_loss = 1.413745, iou_loss = 5.256533, total_loss = 6.670278 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.731607), count: 31, class_loss = 6.246019, iou_loss = 6.384973, total_loss = 12.630992 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748457), count: 28, class_loss = 3.570351, iou_loss = 1.258150, total_loss = 4.828501 \n",
            " total_bbox = 712664, rewritten_bbox = 0.003648 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.754599), count: 8, class_loss = 1.442611, iou_loss = 12.688569, total_loss = 14.131180 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724465), count: 36, class_loss = 7.794274, iou_loss = 7.692244, total_loss = 15.486518 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.726124), count: 25, class_loss = 4.437194, iou_loss = 1.146821, total_loss = 5.584015 \n",
            " total_bbox = 712733, rewritten_bbox = 0.003648 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.903239), count: 1, class_loss = 0.224976, iou_loss = 1.366385, total_loss = 1.591362 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782730), count: 25, class_loss = 4.123225, iou_loss = 4.045282, total_loss = 8.168508 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768020), count: 26, class_loss = 1.922791, iou_loss = 1.651320, total_loss = 3.574111 \n",
            " total_bbox = 712785, rewritten_bbox = 0.003648 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.678418), count: 10, class_loss = 2.227276, iou_loss = 10.654966, total_loss = 12.882242 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.701920), count: 23, class_loss = 5.492761, iou_loss = 5.221624, total_loss = 10.714385 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.682193), count: 16, class_loss = 3.749138, iou_loss = 0.675293, total_loss = 4.424431 \n",
            " total_bbox = 712834, rewritten_bbox = 0.003647 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664827), count: 3, class_loss = 0.839179, iou_loss = 4.107279, total_loss = 4.946458 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739871), count: 22, class_loss = 2.929595, iou_loss = 3.154968, total_loss = 6.084563 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767440), count: 27, class_loss = 1.458901, iou_loss = 1.296974, total_loss = 2.755875 \n",
            " total_bbox = 712886, rewritten_bbox = 0.003647 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.688090), count: 19, class_loss = 2.541690, iou_loss = 17.971203, total_loss = 20.512894 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759955), count: 35, class_loss = 5.713312, iou_loss = 8.487323, total_loss = 14.200635 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744236), count: 16, class_loss = 3.930986, iou_loss = 0.720459, total_loss = 4.651445 \n",
            " total_bbox = 712956, rewritten_bbox = 0.003647 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1055/6000: loss=2.7 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1055: 2.672012, 2.348184 avg loss, 0.001000 rate, 5.514027 seconds, 67520 images, 8.792304 hours left\n",
            "Loaded: 0.000069 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.837702), count: 1, class_loss = 0.243162, iou_loss = 0.117328, total_loss = 0.360491 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.694431), count: 9, class_loss = 1.395489, iou_loss = 0.127892, total_loss = 1.523381 \n",
            " total_bbox = 712966, rewritten_bbox = 0.003647 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000008, iou_loss = 0.000000, total_loss = 0.000008 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.696163), count: 2, class_loss = 0.383906, iou_loss = 0.298085, total_loss = 0.681991 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734929), count: 10, class_loss = 0.878788, iou_loss = 0.265642, total_loss = 1.144430 \n",
            " total_bbox = 712978, rewritten_bbox = 0.003647 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000630, iou_loss = 0.000000, total_loss = 0.000630 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756429), count: 10, class_loss = 1.786991, iou_loss = 2.093955, total_loss = 3.880946 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.701122), count: 12, class_loss = 1.391119, iou_loss = 0.762306, total_loss = 2.153426 \n",
            " total_bbox = 713000, rewritten_bbox = 0.003647 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.688870), count: 10, class_loss = 2.429637, iou_loss = 9.507751, total_loss = 11.937388 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723132), count: 38, class_loss = 7.945231, iou_loss = 8.785775, total_loss = 16.731007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757450), count: 25, class_loss = 2.285769, iou_loss = 1.175326, total_loss = 3.461095 \n",
            " total_bbox = 713073, rewritten_bbox = 0.003646 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690518), count: 11, class_loss = 2.326303, iou_loss = 11.767788, total_loss = 14.094090 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.703998), count: 37, class_loss = 7.001462, iou_loss = 6.764400, total_loss = 13.765862 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707957), count: 23, class_loss = 3.058005, iou_loss = 1.041517, total_loss = 4.099523 \n",
            " total_bbox = 713144, rewritten_bbox = 0.003646 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.698034), count: 9, class_loss = 1.840538, iou_loss = 9.829253, total_loss = 11.669791 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.717566), count: 40, class_loss = 7.137405, iou_loss = 10.223934, total_loss = 17.361340 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721047), count: 24, class_loss = 3.523512, iou_loss = 0.864671, total_loss = 4.388183 \n",
            " total_bbox = 713217, rewritten_bbox = 0.003645 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.737740), count: 8, class_loss = 0.993092, iou_loss = 15.576918, total_loss = 16.570009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747077), count: 31, class_loss = 3.484385, iou_loss = 6.068225, total_loss = 9.552610 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729401), count: 27, class_loss = 3.355363, iou_loss = 1.193970, total_loss = 4.549334 \n",
            " total_bbox = 713283, rewritten_bbox = 0.003645 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.739045), count: 25, class_loss = 7.139740, iou_loss = 45.592285, total_loss = 52.732025 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775046), count: 33, class_loss = 4.908570, iou_loss = 9.415075, total_loss = 14.323645 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743730), count: 22, class_loss = 2.513212, iou_loss = 1.193941, total_loss = 3.707153 \n",
            " total_bbox = 713363, rewritten_bbox = 0.003645 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.650211), count: 8, class_loss = 2.162087, iou_loss = 5.874444, total_loss = 8.036531 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.689502), count: 31, class_loss = 5.948901, iou_loss = 6.289954, total_loss = 12.238854 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729266), count: 23, class_loss = 4.028486, iou_loss = 1.120298, total_loss = 5.148784 \n",
            " total_bbox = 713425, rewritten_bbox = 0.003644 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.847049), count: 1, class_loss = 0.107994, iou_loss = 1.155517, total_loss = 1.263512 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792603), count: 26, class_loss = 4.249344, iou_loss = 4.864639, total_loss = 9.113983 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719873), count: 32, class_loss = 3.305283, iou_loss = 1.559329, total_loss = 4.864612 \n",
            " total_bbox = 713484, rewritten_bbox = 0.003644 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711663), count: 2, class_loss = 0.487836, iou_loss = 1.595230, total_loss = 2.083066 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763793), count: 17, class_loss = 1.670882, iou_loss = 3.708927, total_loss = 5.379809 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774378), count: 23, class_loss = 1.332987, iou_loss = 1.145526, total_loss = 2.478512 \n",
            " total_bbox = 713526, rewritten_bbox = 0.003644 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742141), count: 2, class_loss = 0.050330, iou_loss = 0.225930, total_loss = 0.276260 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744883), count: 9, class_loss = 0.624409, iou_loss = 0.248652, total_loss = 0.873062 \n",
            " total_bbox = 713537, rewritten_bbox = 0.003644 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.848800), count: 1, class_loss = 0.060356, iou_loss = 0.039713, total_loss = 0.100069 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733867), count: 9, class_loss = 0.949443, iou_loss = 0.136221, total_loss = 1.085664 \n",
            " total_bbox = 713547, rewritten_bbox = 0.003644 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.505492), count: 2, class_loss = 0.331830, iou_loss = 7.361285, total_loss = 7.693115 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772805), count: 18, class_loss = 2.632394, iou_loss = 3.566913, total_loss = 6.199307 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733116), count: 19, class_loss = 2.216478, iou_loss = 0.758501, total_loss = 2.974979 \n",
            " total_bbox = 713586, rewritten_bbox = 0.003644 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.781136), count: 4, class_loss = 1.090726, iou_loss = 4.601683, total_loss = 5.692410 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763838), count: 22, class_loss = 4.038615, iou_loss = 4.060153, total_loss = 8.098768 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740061), count: 24, class_loss = 3.026488, iou_loss = 1.390436, total_loss = 4.416924 \n",
            " total_bbox = 713636, rewritten_bbox = 0.003643 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.687776), count: 4, class_loss = 1.163075, iou_loss = 15.509004, total_loss = 16.672079 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746562), count: 31, class_loss = 6.147651, iou_loss = 6.380371, total_loss = 12.528022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719687), count: 26, class_loss = 2.966549, iou_loss = 1.573264, total_loss = 4.539813 \n",
            " total_bbox = 713697, rewritten_bbox = 0.003643 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1056/6000: loss=2.4 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1056: 2.391994, 2.352565 avg loss, 0.001000 rate, 5.448271 seconds, 67584 images, 8.780123 hours left\n",
            "Loaded: 0.000089 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.798678), count: 1, class_loss = 0.106132, iou_loss = 0.129706, total_loss = 0.235838 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.724095), count: 10, class_loss = 0.782533, iou_loss = 0.256283, total_loss = 1.038816 \n",
            " total_bbox = 713708, rewritten_bbox = 0.003643 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.613811), count: 1, class_loss = 0.168445, iou_loss = 0.607191, total_loss = 0.775636 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.708002), count: 12, class_loss = 1.423600, iou_loss = 2.227744, total_loss = 3.651344 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731623), count: 11, class_loss = 0.886064, iou_loss = 0.499718, total_loss = 1.385782 \n",
            " total_bbox = 713732, rewritten_bbox = 0.003643 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.818009), count: 1, class_loss = 0.040934, iou_loss = 0.106070, total_loss = 0.147004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.636972), count: 10, class_loss = 0.622795, iou_loss = 0.191622, total_loss = 0.814417 \n",
            " total_bbox = 713743, rewritten_bbox = 0.003643 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000696, iou_loss = 0.000000, total_loss = 0.000696 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713934), count: 9, class_loss = 1.199399, iou_loss = 0.129997, total_loss = 1.329396 \n",
            " total_bbox = 713752, rewritten_bbox = 0.003643 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.807117), count: 6, class_loss = 0.536799, iou_loss = 0.759024, total_loss = 1.295823 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745536), count: 11, class_loss = 0.185822, iou_loss = 0.408835, total_loss = 0.594657 \n",
            " total_bbox = 713769, rewritten_bbox = 0.003643 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.581408), count: 2, class_loss = 0.461375, iou_loss = 3.920669, total_loss = 4.382044 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.821514), count: 14, class_loss = 1.806972, iou_loss = 2.762204, total_loss = 4.569177 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754393), count: 19, class_loss = 1.611234, iou_loss = 0.745569, total_loss = 2.356803 \n",
            " total_bbox = 713804, rewritten_bbox = 0.003642 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.749346), count: 5, class_loss = 0.883163, iou_loss = 4.620535, total_loss = 5.503698 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730752), count: 32, class_loss = 4.800987, iou_loss = 7.799366, total_loss = 12.600353 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712488), count: 24, class_loss = 2.711047, iou_loss = 1.073407, total_loss = 3.784454 \n",
            " total_bbox = 713865, rewritten_bbox = 0.003642 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.670877), count: 7, class_loss = 2.274412, iou_loss = 4.721818, total_loss = 6.996231 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.708686), count: 30, class_loss = 6.949848, iou_loss = 6.562063, total_loss = 13.511911 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721531), count: 25, class_loss = 3.191973, iou_loss = 1.527118, total_loss = 4.719091 \n",
            " total_bbox = 713927, rewritten_bbox = 0.003642 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.667490), count: 2, class_loss = 0.770924, iou_loss = 2.623011, total_loss = 3.393935 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774226), count: 20, class_loss = 2.672953, iou_loss = 4.000157, total_loss = 6.673110 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778683), count: 24, class_loss = 1.989947, iou_loss = 1.242772, total_loss = 3.232719 \n",
            " total_bbox = 713973, rewritten_bbox = 0.003642 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.672951), count: 21, class_loss = 4.337360, iou_loss = 33.449989, total_loss = 37.787350 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759484), count: 33, class_loss = 6.740716, iou_loss = 8.027178, total_loss = 14.767894 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774584), count: 23, class_loss = 2.816012, iou_loss = 1.105251, total_loss = 3.921263 \n",
            " total_bbox = 714050, rewritten_bbox = 0.003641 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.757729), count: 18, class_loss = 3.139832, iou_loss = 31.266567, total_loss = 34.406399 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738054), count: 34, class_loss = 5.017460, iou_loss = 7.784900, total_loss = 12.802361 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722899), count: 20, class_loss = 1.904431, iou_loss = 0.869043, total_loss = 2.773474 \n",
            " total_bbox = 714122, rewritten_bbox = 0.003641 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.696940), count: 1, class_loss = 0.254300, iou_loss = 1.268364, total_loss = 1.522664 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.779683), count: 29, class_loss = 4.843380, iou_loss = 8.204757, total_loss = 13.048137 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728684), count: 23, class_loss = 2.373614, iou_loss = 1.196466, total_loss = 3.570080 \n",
            " total_bbox = 714175, rewritten_bbox = 0.003641 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.700668), count: 18, class_loss = 3.053515, iou_loss = 24.976973, total_loss = 28.030487 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.735230), count: 47, class_loss = 7.419895, iou_loss = 12.791037, total_loss = 20.210932 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730226), count: 28, class_loss = 3.936952, iou_loss = 1.934800, total_loss = 5.871752 \n",
            " total_bbox = 714268, rewritten_bbox = 0.003640 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.219197), count: 1, class_loss = 0.264060, iou_loss = 0.306345, total_loss = 0.570405 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.788987), count: 10, class_loss = 0.835434, iou_loss = 1.899165, total_loss = 2.734600 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795635), count: 15, class_loss = 1.405645, iou_loss = 0.821230, total_loss = 2.226875 \n",
            " total_bbox = 714294, rewritten_bbox = 0.003640 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762358), count: 3, class_loss = 0.315787, iou_loss = 0.390297, total_loss = 0.706084 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773578), count: 9, class_loss = 0.520169, iou_loss = 0.420269, total_loss = 0.940438 \n",
            " total_bbox = 714306, rewritten_bbox = 0.003640 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.769554), count: 7, class_loss = 1.494460, iou_loss = 10.137903, total_loss = 11.632362 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719269), count: 20, class_loss = 3.712736, iou_loss = 4.853016, total_loss = 8.565752 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740772), count: 13, class_loss = 2.416730, iou_loss = 0.418451, total_loss = 2.835181 \n",
            " total_bbox = 714346, rewritten_bbox = 0.003640 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1057/6000: loss=1.9 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1057: 1.939265, 2.311235 avg loss, 0.001000 rate, 5.393825 seconds, 67648 images, 8.767146 hours left\n",
            "Loaded: 0.000076 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.761974), count: 30, class_loss = 4.834113, iou_loss = 43.962902, total_loss = 48.797016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759585), count: 64, class_loss = 7.514503, iou_loss = 23.829388, total_loss = 31.343889 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.696071), count: 19, class_loss = 1.609256, iou_loss = 1.772750, total_loss = 3.382006 \n",
            " total_bbox = 714459, rewritten_bbox = 0.003639 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.681706), count: 3, class_loss = 0.821709, iou_loss = 0.233492, total_loss = 1.055201 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.704715), count: 11, class_loss = 2.799274, iou_loss = 0.335664, total_loss = 3.134938 \n",
            " total_bbox = 714473, rewritten_bbox = 0.003639 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001085, iou_loss = 0.000000, total_loss = 0.001085 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.825970), count: 4, class_loss = 0.478592, iou_loss = 0.841482, total_loss = 1.320073 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795179), count: 9, class_loss = 0.282117, iou_loss = 0.321219, total_loss = 0.603336 \n",
            " total_bbox = 714486, rewritten_bbox = 0.003639 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.113164, iou_loss = 0.000000, total_loss = 0.113164 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.611909), count: 1, class_loss = 0.700509, iou_loss = 0.076117, total_loss = 0.776625 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.726649), count: 9, class_loss = 1.100536, iou_loss = 0.196053, total_loss = 1.296589 \n",
            " total_bbox = 714496, rewritten_bbox = 0.003639 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000310, iou_loss = 0.000000, total_loss = 0.000310 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.735673), count: 6, class_loss = 0.831994, iou_loss = 1.210546, total_loss = 2.042540 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.808939), count: 12, class_loss = 0.798813, iou_loss = 0.288647, total_loss = 1.087460 \n",
            " total_bbox = 714514, rewritten_bbox = 0.003639 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.738046), count: 4, class_loss = 1.459936, iou_loss = 5.825039, total_loss = 7.284975 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742199), count: 14, class_loss = 2.471733, iou_loss = 2.876668, total_loss = 5.348402 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754121), count: 17, class_loss = 0.847235, iou_loss = 0.783346, total_loss = 1.630581 \n",
            " total_bbox = 714549, rewritten_bbox = 0.003639 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.665479), count: 8, class_loss = 2.076349, iou_loss = 14.499212, total_loss = 16.575562 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727570), count: 29, class_loss = 4.860770, iou_loss = 4.676469, total_loss = 9.537239 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789157), count: 26, class_loss = 1.741501, iou_loss = 1.565231, total_loss = 3.306732 \n",
            " total_bbox = 714612, rewritten_bbox = 0.003638 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.713986), count: 23, class_loss = 8.651075, iou_loss = 31.769812, total_loss = 40.420887 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.663790), count: 53, class_loss = 13.880606, iou_loss = 13.334747, total_loss = 27.215353 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744293), count: 23, class_loss = 3.557006, iou_loss = 1.172810, total_loss = 4.729816 \n",
            " total_bbox = 714711, rewritten_bbox = 0.003638 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723631), count: 3, class_loss = 0.561955, iou_loss = 0.319982, total_loss = 0.881937 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.782411), count: 11, class_loss = 0.827117, iou_loss = 0.274890, total_loss = 1.102007 \n",
            " total_bbox = 714725, rewritten_bbox = 0.003638 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.687240), count: 11, class_loss = 2.047719, iou_loss = 12.862711, total_loss = 14.910431 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719437), count: 11, class_loss = 1.467712, iou_loss = 3.750150, total_loss = 5.217863 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797005), count: 7, class_loss = 0.972864, iou_loss = 0.201191, total_loss = 1.174055 \n",
            " total_bbox = 714754, rewritten_bbox = 0.003638 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.734240), count: 16, class_loss = 1.455503, iou_loss = 35.965397, total_loss = 37.420898 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.794028), count: 18, class_loss = 1.699191, iou_loss = 6.075730, total_loss = 7.774921 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751189), count: 13, class_loss = 1.246402, iou_loss = 0.639690, total_loss = 1.886091 \n",
            " total_bbox = 714801, rewritten_bbox = 0.003637 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.454989), count: 4, class_loss = 1.067224, iou_loss = 3.831618, total_loss = 4.898842 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.794645), count: 23, class_loss = 3.484941, iou_loss = 3.776788, total_loss = 7.261729 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748084), count: 26, class_loss = 1.894748, iou_loss = 1.046354, total_loss = 2.941102 \n",
            " total_bbox = 714854, rewritten_bbox = 0.003637 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.670583), count: 2, class_loss = 0.878584, iou_loss = 1.420170, total_loss = 2.298754 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725050), count: 16, class_loss = 3.185452, iou_loss = 2.444592, total_loss = 5.630044 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715976), count: 24, class_loss = 3.321416, iou_loss = 0.990215, total_loss = 4.311631 \n",
            " total_bbox = 714896, rewritten_bbox = 0.003637 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.779152), count: 3, class_loss = 0.911826, iou_loss = 2.901944, total_loss = 3.813770 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757421), count: 13, class_loss = 2.225426, iou_loss = 2.940738, total_loss = 5.166165 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751846), count: 18, class_loss = 0.903540, iou_loss = 0.685264, total_loss = 1.588804 \n",
            " total_bbox = 714930, rewritten_bbox = 0.003637 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.826871), count: 3, class_loss = 0.307861, iou_loss = 0.137023, total_loss = 0.444885 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.805069), count: 11, class_loss = 1.382551, iou_loss = 0.364791, total_loss = 1.747342 \n",
            " total_bbox = 714944, rewritten_bbox = 0.003637 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.744549), count: 11, class_loss = 1.256775, iou_loss = 14.075024, total_loss = 15.331799 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.683090), count: 11, class_loss = 1.414479, iou_loss = 3.633608, total_loss = 5.048087 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.686974), count: 8, class_loss = 0.799792, iou_loss = 0.215156, total_loss = 1.014948 \n",
            " total_bbox = 714974, rewritten_bbox = 0.003636 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1058/6000: loss=2.0 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1058: 1.977950, 2.277906 avg loss, 0.001000 rate, 5.515573 seconds, 67712 images, 8.753536 hours left\n",
            "Loaded: 0.000065 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.681199), count: 6, class_loss = 1.596537, iou_loss = 4.392054, total_loss = 5.988591 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707717), count: 27, class_loss = 3.926177, iou_loss = 5.919597, total_loss = 9.845774 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752698), count: 23, class_loss = 2.402071, iou_loss = 1.134068, total_loss = 3.536139 \n",
            " total_bbox = 715030, rewritten_bbox = 0.003636 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.578095), count: 8, class_loss = 1.554470, iou_loss = 6.019444, total_loss = 7.573914 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748897), count: 24, class_loss = 4.070064, iou_loss = 4.348340, total_loss = 8.418404 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747575), count: 25, class_loss = 1.659700, iou_loss = 0.902847, total_loss = 2.562547 \n",
            " total_bbox = 715087, rewritten_bbox = 0.003636 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.685605), count: 3, class_loss = 1.307744, iou_loss = 1.844346, total_loss = 3.152090 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715995), count: 39, class_loss = 7.809930, iou_loss = 6.979779, total_loss = 14.789709 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745115), count: 29, class_loss = 2.364853, iou_loss = 1.883845, total_loss = 4.248698 \n",
            " total_bbox = 715158, rewritten_bbox = 0.003636 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.662920), count: 2, class_loss = 0.414216, iou_loss = 1.649405, total_loss = 2.063621 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746387), count: 16, class_loss = 2.360090, iou_loss = 2.211462, total_loss = 4.571553 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748157), count: 26, class_loss = 3.052465, iou_loss = 1.309084, total_loss = 4.361549 \n",
            " total_bbox = 715202, rewritten_bbox = 0.003635 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.658485), count: 9, class_loss = 3.029937, iou_loss = 7.287602, total_loss = 10.317539 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720695), count: 25, class_loss = 5.428485, iou_loss = 4.947196, total_loss = 10.375681 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763338), count: 24, class_loss = 1.863498, iou_loss = 1.300986, total_loss = 3.164484 \n",
            " total_bbox = 715260, rewritten_bbox = 0.003635 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000070, iou_loss = 0.000000, total_loss = 0.000070 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745912), count: 14, class_loss = 2.533284, iou_loss = 2.147863, total_loss = 4.681147 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754606), count: 20, class_loss = 2.136690, iou_loss = 0.972678, total_loss = 3.109368 \n",
            " total_bbox = 715294, rewritten_bbox = 0.003635 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.002887, iou_loss = 0.000000, total_loss = 0.002887 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715518), count: 2, class_loss = 0.477011, iou_loss = 0.208460, total_loss = 0.685471 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753751), count: 11, class_loss = 0.618737, iou_loss = 0.362465, total_loss = 0.981202 \n",
            " total_bbox = 715307, rewritten_bbox = 0.003635 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.776311), count: 1, class_loss = 0.249748, iou_loss = 0.815699, total_loss = 1.065447 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.560937), count: 4, class_loss = 0.902700, iou_loss = 0.577201, total_loss = 1.479901 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778032), count: 6, class_loss = 0.739088, iou_loss = 0.108555, total_loss = 0.847643 \n",
            " total_bbox = 715318, rewritten_bbox = 0.003635 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.788868), count: 20, class_loss = 4.523031, iou_loss = 38.064339, total_loss = 42.587368 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751997), count: 48, class_loss = 7.674974, iou_loss = 14.195292, total_loss = 21.870266 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721801), count: 28, class_loss = 2.149436, iou_loss = 1.254584, total_loss = 3.404021 \n",
            " total_bbox = 715414, rewritten_bbox = 0.003634 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.622627), count: 3, class_loss = 0.928146, iou_loss = 2.892614, total_loss = 3.820760 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734160), count: 19, class_loss = 3.355933, iou_loss = 4.705906, total_loss = 8.061839 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748599), count: 22, class_loss = 1.351093, iou_loss = 1.327847, total_loss = 2.678940 \n",
            " total_bbox = 715458, rewritten_bbox = 0.003634 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.732265), count: 3, class_loss = 0.987397, iou_loss = 3.219481, total_loss = 4.206878 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748040), count: 20, class_loss = 4.596542, iou_loss = 4.315935, total_loss = 8.912477 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.687602), count: 21, class_loss = 2.990853, iou_loss = 0.907017, total_loss = 3.897871 \n",
            " total_bbox = 715502, rewritten_bbox = 0.003634 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.754881), count: 6, class_loss = 1.554299, iou_loss = 8.733145, total_loss = 10.287444 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718166), count: 28, class_loss = 5.699626, iou_loss = 6.310665, total_loss = 12.010291 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751441), count: 25, class_loss = 2.962244, iou_loss = 1.206714, total_loss = 4.168958 \n",
            " total_bbox = 715561, rewritten_bbox = 0.003634 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.557128), count: 2, class_loss = 0.969907, iou_loss = 3.016429, total_loss = 3.986336 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.701133), count: 18, class_loss = 3.314949, iou_loss = 2.150966, total_loss = 5.465914 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759080), count: 25, class_loss = 2.206096, iou_loss = 1.100783, total_loss = 3.306879 \n",
            " total_bbox = 715606, rewritten_bbox = 0.003633 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.621813), count: 4, class_loss = 1.220626, iou_loss = 4.169973, total_loss = 5.390599 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745065), count: 22, class_loss = 5.728336, iou_loss = 4.964405, total_loss = 10.692740 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717846), count: 19, class_loss = 2.973920, iou_loss = 0.730695, total_loss = 3.704615 \n",
            " total_bbox = 715651, rewritten_bbox = 0.003633 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.768564), count: 11, class_loss = 3.070139, iou_loss = 9.714980, total_loss = 12.785119 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765519), count: 37, class_loss = 6.625181, iou_loss = 9.016914, total_loss = 15.642095 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757005), count: 30, class_loss = 3.283799, iou_loss = 1.161788, total_loss = 4.445587 \n",
            " total_bbox = 715728, rewritten_bbox = 0.003633 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.642971), count: 2, class_loss = 0.617951, iou_loss = 2.012343, total_loss = 2.630294 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766734), count: 30, class_loss = 4.172710, iou_loss = 6.058423, total_loss = 10.231133 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740572), count: 24, class_loss = 2.703000, iou_loss = 1.287512, total_loss = 3.990512 \n",
            " total_bbox = 715784, rewritten_bbox = 0.003632 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1059/6000: loss=2.6 map=0.69 best=0.69 hours left=8.7\u0007\n",
            " 1059: 2.633068, 2.313422 avg loss, 0.001000 rate, 5.405281 seconds, 67776 images, 8.741718 hours left\n",
            "Loaded: 0.000066 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.656459), count: 10, class_loss = 2.720075, iou_loss = 9.499367, total_loss = 12.219441 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739163), count: 30, class_loss = 5.703129, iou_loss = 5.449499, total_loss = 11.152628 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770306), count: 27, class_loss = 2.622363, iou_loss = 1.271429, total_loss = 3.893792 \n",
            " total_bbox = 715851, rewritten_bbox = 0.003632 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.659828), count: 77, class_loss = 16.726225, iou_loss = 180.840057, total_loss = 197.566284 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.721248), count: 35, class_loss = 6.318219, iou_loss = 10.352021, total_loss = 16.670240 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.723352), count: 22, class_loss = 3.734190, iou_loss = 0.971905, total_loss = 4.706095 \n",
            " total_bbox = 715985, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.422310), count: 1, class_loss = 0.278120, iou_loss = 1.591156, total_loss = 1.869276 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761779), count: 15, class_loss = 3.134004, iou_loss = 3.092529, total_loss = 6.226533 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.786728), count: 24, class_loss = 2.238672, iou_loss = 1.100093, total_loss = 3.338765 \n",
            " total_bbox = 716025, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000021, iou_loss = 0.000000, total_loss = 0.000021 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706457), count: 4, class_loss = 0.721365, iou_loss = 0.641767, total_loss = 1.363132 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803511), count: 10, class_loss = 1.192772, iou_loss = 0.408720, total_loss = 1.601492 \n",
            " total_bbox = 716039, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722739), count: 5, class_loss = 0.411264, iou_loss = 6.815844, total_loss = 7.227108 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.769374), count: 8, class_loss = 0.427686, iou_loss = 2.585946, total_loss = 3.013633 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.658496), count: 9, class_loss = 0.574018, iou_loss = 0.357005, total_loss = 0.931023 \n",
            " total_bbox = 716061, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.014400, iou_loss = 0.000000, total_loss = 0.014400 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747579), count: 9, class_loss = 1.311776, iou_loss = 2.048708, total_loss = 3.360485 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.703983), count: 11, class_loss = 0.739956, iou_loss = 0.342633, total_loss = 1.082589 \n",
            " total_bbox = 716081, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000660, iou_loss = 0.000000, total_loss = 0.000660 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758228), count: 7, class_loss = 1.198642, iou_loss = 1.314039, total_loss = 2.512681 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752301), count: 11, class_loss = 2.291437, iou_loss = 0.422313, total_loss = 2.713750 \n",
            " total_bbox = 716099, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.870483), count: 3, class_loss = 0.437957, iou_loss = 0.414566, total_loss = 0.852524 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730590), count: 9, class_loss = 1.225626, iou_loss = 0.240244, total_loss = 1.465870 \n",
            " total_bbox = 716110, rewritten_bbox = 0.003631 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.785302), count: 22, class_loss = 5.143489, iou_loss = 23.669687, total_loss = 28.813177 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.776471), count: 56, class_loss = 10.250257, iou_loss = 16.446087, total_loss = 26.696344 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716604), count: 18, class_loss = 3.619813, iou_loss = 0.938184, total_loss = 4.557997 \n",
            " total_bbox = 716206, rewritten_bbox = 0.003630 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.896056), count: 1, class_loss = 0.059095, iou_loss = 0.152040, total_loss = 0.211135 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.814007), count: 10, class_loss = 0.373059, iou_loss = 0.379110, total_loss = 0.752169 \n",
            " total_bbox = 716217, rewritten_bbox = 0.003630 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.658223), count: 12, class_loss = 2.477026, iou_loss = 13.039783, total_loss = 15.516809 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734456), count: 25, class_loss = 3.136268, iou_loss = 7.060414, total_loss = 10.196682 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710393), count: 12, class_loss = 1.118726, iou_loss = 0.787222, total_loss = 1.905948 \n",
            " total_bbox = 716266, rewritten_bbox = 0.003630 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.594350), count: 1, class_loss = 0.139152, iou_loss = 0.375049, total_loss = 0.514201 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789106), count: 9, class_loss = 0.764796, iou_loss = 1.991538, total_loss = 2.756334 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748505), count: 10, class_loss = 0.675140, iou_loss = 0.396963, total_loss = 1.072102 \n",
            " total_bbox = 716286, rewritten_bbox = 0.003630 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.615911), count: 1, class_loss = 0.230996, iou_loss = 0.048068, total_loss = 0.279065 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769977), count: 11, class_loss = 1.320605, iou_loss = 0.311627, total_loss = 1.632232 \n",
            " total_bbox = 716298, rewritten_bbox = 0.003630 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.648562), count: 1, class_loss = 0.261887, iou_loss = 0.431594, total_loss = 0.693481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755548), count: 9, class_loss = 2.056580, iou_loss = 1.956088, total_loss = 4.012667 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790399), count: 21, class_loss = 2.065584, iou_loss = 0.903658, total_loss = 2.969243 \n",
            " total_bbox = 716329, rewritten_bbox = 0.003630 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.677417), count: 6, class_loss = 2.071790, iou_loss = 5.652118, total_loss = 7.723908 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.704747), count: 21, class_loss = 6.706913, iou_loss = 4.023989, total_loss = 10.730902 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.709016), count: 23, class_loss = 3.267443, iou_loss = 1.012066, total_loss = 4.279509 \n",
            " total_bbox = 716379, rewritten_bbox = 0.003629 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.504546), count: 6, class_loss = 1.522184, iou_loss = 7.285801, total_loss = 8.807985 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.721702), count: 28, class_loss = 5.024155, iou_loss = 5.345928, total_loss = 10.370083 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733848), count: 29, class_loss = 2.438982, iou_loss = 1.317095, total_loss = 3.756077 \n",
            " total_bbox = 716442, rewritten_bbox = 0.003629 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1060/6000: loss=2.3 map=0.69 best=0.69 hours left=8.7\u0007\n",
            " 1060: 2.269811, 2.309061 avg loss, 0.001000 rate, 5.437801 seconds, 67840 images, 8.728490 hours left\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 576 x 576 \n",
            " try to allocate additional workspace_size = 212.87 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 0.000049 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001401, iou_loss = 0.000000, total_loss = 0.001401 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781983), count: 18, class_loss = 2.103874, iou_loss = 7.218733, total_loss = 9.322607 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781609), count: 33, class_loss = 4.060478, iou_loss = 3.069099, total_loss = 7.129578 \n",
            " total_bbox = 716493, rewritten_bbox = 0.003629 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.700700), count: 10, class_loss = 2.157334, iou_loss = 20.300838, total_loss = 22.458174 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700374), count: 26, class_loss = 6.066456, iou_loss = 11.202734, total_loss = 17.269190 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.776357), count: 21, class_loss = 3.868197, iou_loss = 2.202569, total_loss = 6.070766 \n",
            " total_bbox = 716550, rewritten_bbox = 0.003628 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.685793), count: 1, class_loss = 0.366222, iou_loss = 6.849849, total_loss = 7.216071 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.684106), count: 25, class_loss = 3.500737, iou_loss = 8.767147, total_loss = 12.267884 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741358), count: 25, class_loss = 1.817745, iou_loss = 2.189436, total_loss = 4.007181 \n",
            " total_bbox = 716601, rewritten_bbox = 0.003628 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000313, iou_loss = 0.000000, total_loss = 0.000313 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781974), count: 9, class_loss = 1.734972, iou_loss = 3.421022, total_loss = 5.155994 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722750), count: 15, class_loss = 1.893606, iou_loss = 0.897991, total_loss = 2.791597 \n",
            " total_bbox = 716625, rewritten_bbox = 0.003628 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.609240), count: 4, class_loss = 0.881301, iou_loss = 6.026003, total_loss = 6.907304 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.784195), count: 15, class_loss = 1.200843, iou_loss = 8.416843, total_loss = 9.617687 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715483), count: 9, class_loss = 0.826251, iou_loss = 0.772487, total_loss = 1.598738 \n",
            " total_bbox = 716653, rewritten_bbox = 0.003628 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001089, iou_loss = 0.000000, total_loss = 0.001089 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.800576), count: 11, class_loss = 1.464420, iou_loss = 3.253670, total_loss = 4.718090 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754065), count: 22, class_loss = 1.923538, iou_loss = 1.788147, total_loss = 3.711685 \n",
            " total_bbox = 716686, rewritten_bbox = 0.003628 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.067179, iou_loss = 0.000000, total_loss = 0.067179 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.712221), count: 15, class_loss = 4.625978, iou_loss = 4.048020, total_loss = 8.673998 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757456), count: 25, class_loss = 4.000066, iou_loss = 2.124689, total_loss = 6.124755 \n",
            " total_bbox = 716726, rewritten_bbox = 0.003628 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.020852, iou_loss = 0.000000, total_loss = 0.020852 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724161), count: 19, class_loss = 4.942895, iou_loss = 6.739615, total_loss = 11.682510 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715997), count: 32, class_loss = 5.688766, iou_loss = 2.635449, total_loss = 8.324216 \n",
            " total_bbox = 716777, rewritten_bbox = 0.003627 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003858, iou_loss = 0.000000, total_loss = 0.003858 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.661469), count: 10, class_loss = 2.763278, iou_loss = 7.129140, total_loss = 9.892418 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710011), count: 17, class_loss = 3.630340, iou_loss = 1.080422, total_loss = 4.710762 \n",
            " total_bbox = 716804, rewritten_bbox = 0.003627 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000507, iou_loss = 0.000000, total_loss = 0.000507 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.001468, iou_loss = 0.000000, total_loss = 0.001468 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725820), count: 8, class_loss = 0.940086, iou_loss = 0.164051, total_loss = 1.104137 \n",
            " total_bbox = 716812, rewritten_bbox = 0.003627 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.263617), count: 1, class_loss = 0.260278, iou_loss = 0.254227, total_loss = 0.514504 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761680), count: 5, class_loss = 0.276872, iou_loss = 1.928035, total_loss = 2.204907 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716914), count: 14, class_loss = 1.934127, iou_loss = 0.767166, total_loss = 2.701293 \n",
            " total_bbox = 716832, rewritten_bbox = 0.003627 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.008258, iou_loss = 0.000000, total_loss = 0.008258 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742510), count: 25, class_loss = 4.677369, iou_loss = 8.190112, total_loss = 12.867481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748655), count: 32, class_loss = 3.056452, iou_loss = 2.534342, total_loss = 5.590794 \n",
            " total_bbox = 716889, rewritten_bbox = 0.003627 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.657179), count: 11, class_loss = 2.846836, iou_loss = 15.258997, total_loss = 18.105833 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.651001), count: 26, class_loss = 6.287409, iou_loss = 9.799072, total_loss = 16.086481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770467), count: 26, class_loss = 3.853446, iou_loss = 2.087845, total_loss = 5.941291 \n",
            " total_bbox = 716952, rewritten_bbox = 0.003626 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000219, iou_loss = 0.000000, total_loss = 0.000219 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766061), count: 8, class_loss = 2.076885, iou_loss = 1.811951, total_loss = 3.888836 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736092), count: 32, class_loss = 3.811254, iou_loss = 2.058832, total_loss = 5.870086 \n",
            " total_bbox = 716992, rewritten_bbox = 0.003626 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.846440), count: 3, class_loss = 1.002239, iou_loss = 5.107190, total_loss = 6.109429 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787804), count: 34, class_loss = 7.611898, iou_loss = 15.039326, total_loss = 22.651224 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742807), count: 37, class_loss = 3.975579, iou_loss = 2.961057, total_loss = 6.936636 \n",
            " total_bbox = 717066, rewritten_bbox = 0.003626 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.845350), count: 2, class_loss = 0.601711, iou_loss = 6.782303, total_loss = 7.384015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729135), count: 24, class_loss = 4.450345, iou_loss = 7.679202, total_loss = 12.129547 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757622), count: 35, class_loss = 5.219633, iou_loss = 3.148776, total_loss = 8.368408 \n",
            " total_bbox = 717127, rewritten_bbox = 0.003626 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1061/6000: loss=2.3 map=0.69 best=0.69 hours left=8.7\u0007\n",
            " 1061: 2.347661, 2.312921 avg loss, 0.001000 rate, 10.004049 seconds, 67904 images, 8.715825 hours left\n",
            "Loaded: 0.000096 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000015, iou_loss = 0.000000, total_loss = 0.000015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.638163), count: 1, class_loss = 0.344755, iou_loss = 0.158787, total_loss = 0.503542 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747421), count: 10, class_loss = 0.883030, iou_loss = 0.394166, total_loss = 1.277196 \n",
            " total_bbox = 717138, rewritten_bbox = 0.003626 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000017, iou_loss = 0.000000, total_loss = 0.000017 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727677), count: 1, class_loss = 0.200055, iou_loss = 0.206443, total_loss = 0.406498 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.670607), count: 8, class_loss = 1.101975, iou_loss = 0.275954, total_loss = 1.377929 \n",
            " total_bbox = 717147, rewritten_bbox = 0.003625 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000030, iou_loss = 0.000000, total_loss = 0.000030 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.533813), count: 1, class_loss = 0.401850, iou_loss = 0.233347, total_loss = 0.635197 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757413), count: 14, class_loss = 1.330518, iou_loss = 0.793721, total_loss = 2.124239 \n",
            " total_bbox = 717162, rewritten_bbox = 0.003625 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.798356), count: 9, class_loss = 0.942222, iou_loss = 15.913917, total_loss = 16.856138 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724017), count: 36, class_loss = 6.677279, iou_loss = 13.446856, total_loss = 20.124136 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733990), count: 31, class_loss = 6.302979, iou_loss = 2.250973, total_loss = 8.553951 \n",
            " total_bbox = 717238, rewritten_bbox = 0.003625 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.025434, iou_loss = 0.000000, total_loss = 0.025434 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.702462), count: 19, class_loss = 4.004471, iou_loss = 6.610004, total_loss = 10.614475 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.724074), count: 34, class_loss = 4.336780, iou_loss = 2.194365, total_loss = 6.531145 \n",
            " total_bbox = 717291, rewritten_bbox = 0.003625 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.729016), count: 1, class_loss = 0.329303, iou_loss = 1.641194, total_loss = 1.970497 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733083), count: 8, class_loss = 1.488060, iou_loss = 2.871184, total_loss = 4.359243 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751335), count: 18, class_loss = 2.203444, iou_loss = 0.768263, total_loss = 2.971707 \n",
            " total_bbox = 717318, rewritten_bbox = 0.003625 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.694274), count: 24, class_loss = 5.359874, iou_loss = 49.974945, total_loss = 55.334820 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.690951), count: 46, class_loss = 6.408347, iou_loss = 23.031729, total_loss = 29.440075 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728243), count: 16, class_loss = 1.282533, iou_loss = 2.477129, total_loss = 3.759662 \n",
            " total_bbox = 717404, rewritten_bbox = 0.003624 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.855950), count: 3, class_loss = 0.161977, iou_loss = 6.171061, total_loss = 6.333037 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.779944), count: 21, class_loss = 1.260213, iou_loss = 9.655047, total_loss = 10.915260 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.714349), count: 12, class_loss = 1.268272, iou_loss = 2.439895, total_loss = 3.708168 \n",
            " total_bbox = 717440, rewritten_bbox = 0.003624 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.674419), count: 6, class_loss = 2.178323, iou_loss = 12.158585, total_loss = 14.336908 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745540), count: 23, class_loss = 5.459390, iou_loss = 8.691608, total_loss = 14.150998 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732853), count: 29, class_loss = 4.788157, iou_loss = 1.665717, total_loss = 6.453875 \n",
            " total_bbox = 717498, rewritten_bbox = 0.003624 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.594897), count: 4, class_loss = 1.145457, iou_loss = 12.531413, total_loss = 13.676870 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738964), count: 13, class_loss = 3.277552, iou_loss = 5.225225, total_loss = 8.502777 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739355), count: 27, class_loss = 3.423962, iou_loss = 1.516132, total_loss = 4.940094 \n",
            " total_bbox = 717542, rewritten_bbox = 0.003623 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.758067), count: 5, class_loss = 1.288539, iou_loss = 13.927955, total_loss = 15.216494 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.691769), count: 30, class_loss = 6.113969, iou_loss = 10.497453, total_loss = 16.611422 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736538), count: 31, class_loss = 4.542477, iou_loss = 2.729986, total_loss = 7.272463 \n",
            " total_bbox = 717608, rewritten_bbox = 0.003623 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.641482), count: 7, class_loss = 1.278194, iou_loss = 22.026979, total_loss = 23.305174 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720109), count: 30, class_loss = 7.138201, iou_loss = 12.722630, total_loss = 19.860830 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751059), count: 24, class_loss = 4.912542, iou_loss = 2.559721, total_loss = 7.472263 \n",
            " total_bbox = 717669, rewritten_bbox = 0.003623 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.676117), count: 3, class_loss = 0.484528, iou_loss = 4.463946, total_loss = 4.948474 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.656249), count: 22, class_loss = 4.305458, iou_loss = 7.328131, total_loss = 11.633589 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729080), count: 32, class_loss = 4.666635, iou_loss = 2.267447, total_loss = 6.934082 \n",
            " total_bbox = 717726, rewritten_bbox = 0.003623 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.608310), count: 1, class_loss = 0.474824, iou_loss = 0.768499, total_loss = 1.243323 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740639), count: 21, class_loss = 3.975187, iou_loss = 7.296072, total_loss = 11.271258 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754269), count: 32, class_loss = 4.877084, iou_loss = 2.601182, total_loss = 7.478266 \n",
            " total_bbox = 717780, rewritten_bbox = 0.003622 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.543490), count: 4, class_loss = 1.788957, iou_loss = 3.775082, total_loss = 5.564040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722216), count: 21, class_loss = 5.265054, iou_loss = 6.913043, total_loss = 12.178097 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754127), count: 32, class_loss = 4.032485, iou_loss = 2.054491, total_loss = 6.086976 \n",
            " total_bbox = 717837, rewritten_bbox = 0.003622 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.785467), count: 15, class_loss = 2.508782, iou_loss = 30.895390, total_loss = 33.404171 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733528), count: 34, class_loss = 3.975685, iou_loss = 14.878538, total_loss = 18.854223 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710267), count: 34, class_loss = 7.295397, iou_loss = 2.839491, total_loss = 10.134888 \n",
            " total_bbox = 717920, rewritten_bbox = 0.003622 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1062/6000: loss=2.8 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1062: 2.827734, 2.364402 avg loss, 0.001000 rate, 10.089805 seconds, 67968 images, 8.765917 hours left\n",
            "Loaded: 0.000070 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.557010), count: 1, class_loss = 0.377693, iou_loss = 0.576846, total_loss = 0.954539 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.705634), count: 19, class_loss = 4.327468, iou_loss = 8.274063, total_loss = 12.601531 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.711398), count: 28, class_loss = 4.373660, iou_loss = 1.933781, total_loss = 6.307440 \n",
            " total_bbox = 717968, rewritten_bbox = 0.003621 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.017724, iou_loss = 0.000000, total_loss = 0.017724 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763778), count: 20, class_loss = 3.753078, iou_loss = 10.060890, total_loss = 13.813968 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736483), count: 32, class_loss = 5.949559, iou_loss = 1.936229, total_loss = 7.885788 \n",
            " total_bbox = 718020, rewritten_bbox = 0.003621 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.670539), count: 8, class_loss = 2.659596, iou_loss = 19.405981, total_loss = 22.065577 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706265), count: 7, class_loss = 3.754998, iou_loss = 3.474764, total_loss = 7.229763 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781440), count: 13, class_loss = 2.306152, iou_loss = 0.500485, total_loss = 2.806637 \n",
            " total_bbox = 718048, rewritten_bbox = 0.003621 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.791006), count: 11, class_loss = 2.001068, iou_loss = 20.427834, total_loss = 22.428902 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738883), count: 23, class_loss = 3.498467, iou_loss = 11.602800, total_loss = 15.101268 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.692252), count: 10, class_loss = 1.700505, iou_loss = 0.939365, total_loss = 2.639870 \n",
            " total_bbox = 718092, rewritten_bbox = 0.003621 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782569), count: 4, class_loss = 0.534390, iou_loss = 1.448771, total_loss = 1.983160 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715510), count: 10, class_loss = 1.852970, iou_loss = 0.438198, total_loss = 2.291169 \n",
            " total_bbox = 718106, rewritten_bbox = 0.003621 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000095, iou_loss = 0.000000, total_loss = 0.000095 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805354), count: 11, class_loss = 2.475316, iou_loss = 3.400032, total_loss = 5.875347 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763274), count: 24, class_loss = 3.570851, iou_loss = 1.511813, total_loss = 5.082664 \n",
            " total_bbox = 718141, rewritten_bbox = 0.003620 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.324123, iou_loss = 0.000000, total_loss = 0.324123 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744975), count: 15, class_loss = 4.983346, iou_loss = 4.644885, total_loss = 9.628230 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747845), count: 29, class_loss = 4.109104, iou_loss = 1.772276, total_loss = 5.881380 \n",
            " total_bbox = 718185, rewritten_bbox = 0.003620 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.731268), count: 8, class_loss = 1.789805, iou_loss = 22.119934, total_loss = 23.909739 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736336), count: 18, class_loss = 3.940888, iou_loss = 5.835339, total_loss = 9.776226 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.714125), count: 26, class_loss = 3.635099, iou_loss = 1.349707, total_loss = 4.984806 \n",
            " total_bbox = 718237, rewritten_bbox = 0.003620 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.778503), count: 4, class_loss = 0.816143, iou_loss = 5.874121, total_loss = 6.690263 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752188), count: 12, class_loss = 1.060950, iou_loss = 5.675987, total_loss = 6.736937 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722303), count: 10, class_loss = 2.185477, iou_loss = 0.569120, total_loss = 2.754597 \n",
            " total_bbox = 718263, rewritten_bbox = 0.003620 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.021610, iou_loss = 0.000000, total_loss = 0.021610 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.861432), count: 5, class_loss = 1.173336, iou_loss = 1.902060, total_loss = 3.075396 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.805269), count: 13, class_loss = 0.872797, iou_loss = 0.950695, total_loss = 1.823492 \n",
            " total_bbox = 718281, rewritten_bbox = 0.003620 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.754005), count: 14, class_loss = 2.621507, iou_loss = 24.779715, total_loss = 27.401222 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789002), count: 22, class_loss = 1.751445, iou_loss = 15.875426, total_loss = 17.626871 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707500), count: 9, class_loss = 1.281930, iou_loss = 1.490990, total_loss = 2.772920 \n",
            " total_bbox = 718326, rewritten_bbox = 0.003620 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.751551), count: 7, class_loss = 1.479733, iou_loss = 12.343440, total_loss = 13.823173 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.675617), count: 13, class_loss = 2.701629, iou_loss = 5.588411, total_loss = 8.290040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.612931), count: 8, class_loss = 1.980774, iou_loss = 0.973539, total_loss = 2.954314 \n",
            " total_bbox = 718354, rewritten_bbox = 0.003619 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000781, iou_loss = 0.000000, total_loss = 0.000781 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.698008), count: 8, class_loss = 1.543208, iou_loss = 0.184261, total_loss = 1.727469 \n",
            " total_bbox = 718362, rewritten_bbox = 0.003619 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000247, iou_loss = 0.000000, total_loss = 0.000247 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761189), count: 10, class_loss = 1.389502, iou_loss = 2.872157, total_loss = 4.261659 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751619), count: 22, class_loss = 3.454543, iou_loss = 1.299859, total_loss = 4.754402 \n",
            " total_bbox = 718394, rewritten_bbox = 0.003619 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.698220), count: 18, class_loss = 2.972829, iou_loss = 36.967026, total_loss = 39.939854 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718379), count: 40, class_loss = 6.926387, iou_loss = 18.646688, total_loss = 25.573076 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752488), count: 26, class_loss = 4.129079, iou_loss = 2.408677, total_loss = 6.537756 \n",
            " total_bbox = 718478, rewritten_bbox = 0.003619 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.633939), count: 3, class_loss = 0.799927, iou_loss = 4.016078, total_loss = 4.816005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727153), count: 16, class_loss = 4.008425, iou_loss = 6.787950, total_loss = 10.796375 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.704851), count: 28, class_loss = 4.183643, iou_loss = 1.694512, total_loss = 5.878155 \n",
            " total_bbox = 718525, rewritten_bbox = 0.003619 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1063/6000: loss=2.3 map=0.69 best=0.69 hours left=8.8\u0007\n",
            " 1063: 2.280832, 2.356045 avg loss, 0.001000 rate, 10.238709 seconds, 68032 images, 8.816658 hours left\n",
            "Loaded: 0.000049 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.028069, iou_loss = 0.000000, total_loss = 0.028069 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744465), count: 21, class_loss = 4.849090, iou_loss = 5.788647, total_loss = 10.637737 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729838), count: 41, class_loss = 5.403151, iou_loss = 2.364269, total_loss = 7.767420 \n",
            " total_bbox = 718587, rewritten_bbox = 0.003618 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.668754), count: 8, class_loss = 2.281815, iou_loss = 18.168022, total_loss = 20.449837 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727189), count: 15, class_loss = 3.447249, iou_loss = 8.348898, total_loss = 11.796147 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767590), count: 29, class_loss = 3.628148, iou_loss = 1.733685, total_loss = 5.361833 \n",
            " total_bbox = 718639, rewritten_bbox = 0.003618 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.762773), count: 10, class_loss = 1.667825, iou_loss = 18.009880, total_loss = 19.677706 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748517), count: 33, class_loss = 6.107933, iou_loss = 14.475286, total_loss = 20.583220 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.669139), count: 26, class_loss = 2.675375, iou_loss = 1.561181, total_loss = 4.236556 \n",
            " total_bbox = 718708, rewritten_bbox = 0.003618 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.769165), count: 4, class_loss = 1.355189, iou_loss = 7.295717, total_loss = 8.650906 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743821), count: 30, class_loss = 6.431773, iou_loss = 11.206663, total_loss = 17.638435 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747580), count: 34, class_loss = 4.876979, iou_loss = 2.284624, total_loss = 7.161603 \n",
            " total_bbox = 718776, rewritten_bbox = 0.003617 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.658262), count: 24, class_loss = 6.164010, iou_loss = 46.313847, total_loss = 52.477856 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.687383), count: 40, class_loss = 9.459051, iou_loss = 20.774208, total_loss = 30.233259 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722899), count: 21, class_loss = 3.134643, iou_loss = 1.120090, total_loss = 4.254733 \n",
            " total_bbox = 718861, rewritten_bbox = 0.003617 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.573213), count: 2, class_loss = 0.817031, iou_loss = 2.047327, total_loss = 2.864358 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713377), count: 9, class_loss = 1.928018, iou_loss = 7.291591, total_loss = 9.219608 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.703770), count: 18, class_loss = 2.625403, iou_loss = 0.791540, total_loss = 3.416943 \n",
            " total_bbox = 718890, rewritten_bbox = 0.003617 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.909506), count: 1, class_loss = 0.195412, iou_loss = 0.301035, total_loss = 0.496448 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756405), count: 9, class_loss = 2.476768, iou_loss = 0.321398, total_loss = 2.798166 \n",
            " total_bbox = 718900, rewritten_bbox = 0.003617 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001211, iou_loss = 0.000000, total_loss = 0.001211 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.824911), count: 5, class_loss = 0.769398, iou_loss = 1.581289, total_loss = 2.350687 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.672683), count: 9, class_loss = 1.463264, iou_loss = 0.374018, total_loss = 1.837282 \n",
            " total_bbox = 718914, rewritten_bbox = 0.003617 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.466864), count: 5, class_loss = 2.202658, iou_loss = 4.226346, total_loss = 6.429004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733340), count: 35, class_loss = 7.956238, iou_loss = 13.283010, total_loss = 21.239248 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745521), count: 36, class_loss = 6.538685, iou_loss = 2.523830, total_loss = 9.062515 \n",
            " total_bbox = 718990, rewritten_bbox = 0.003616 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.620386), count: 8, class_loss = 2.762791, iou_loss = 11.121648, total_loss = 13.884439 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.704744), count: 25, class_loss = 6.632116, iou_loss = 8.559832, total_loss = 15.191947 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759015), count: 36, class_loss = 3.844255, iou_loss = 2.273972, total_loss = 6.118227 \n",
            " total_bbox = 719059, rewritten_bbox = 0.003616 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.601494), count: 19, class_loss = 5.312980, iou_loss = 31.575882, total_loss = 36.888863 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727571), count: 33, class_loss = 10.578402, iou_loss = 20.534742, total_loss = 31.113144 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743662), count: 36, class_loss = 5.289485, iou_loss = 2.607986, total_loss = 7.897472 \n",
            " total_bbox = 719147, rewritten_bbox = 0.003615 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.668380), count: 14, class_loss = 2.195587, iou_loss = 29.535831, total_loss = 31.731419 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.814511), count: 26, class_loss = 2.628991, iou_loss = 13.940650, total_loss = 16.569641 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765825), count: 29, class_loss = 3.591623, iou_loss = 2.492772, total_loss = 6.084395 \n",
            " total_bbox = 719216, rewritten_bbox = 0.003615 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.762873), count: 21, class_loss = 5.112377, iou_loss = 60.821865, total_loss = 65.934242 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743539), count: 55, class_loss = 7.288123, iou_loss = 28.227970, total_loss = 35.516094 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729143), count: 36, class_loss = 3.131669, iou_loss = 3.234162, total_loss = 6.365831 \n",
            " total_bbox = 719328, rewritten_bbox = 0.003614 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.666663), count: 7, class_loss = 1.617981, iou_loss = 17.421740, total_loss = 19.039721 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739935), count: 30, class_loss = 7.653363, iou_loss = 13.363377, total_loss = 21.016739 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741125), count: 37, class_loss = 3.929016, iou_loss = 2.822009, total_loss = 6.751025 \n",
            " total_bbox = 719402, rewritten_bbox = 0.003614 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.646243), count: 8, class_loss = 2.635664, iou_loss = 14.664576, total_loss = 17.300240 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718739), count: 31, class_loss = 6.428410, iou_loss = 12.746666, total_loss = 19.175076 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757200), count: 34, class_loss = 3.667260, iou_loss = 2.553110, total_loss = 6.220370 \n",
            " total_bbox = 719475, rewritten_bbox = 0.003614 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000470, iou_loss = 0.000000, total_loss = 0.000470 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741262), count: 14, class_loss = 3.026324, iou_loss = 4.539667, total_loss = 7.565991 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742694), count: 35, class_loss = 6.198233, iou_loss = 1.697213, total_loss = 7.895446 \n",
            " total_bbox = 719524, rewritten_bbox = 0.003613 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1064/6000: loss=3.8 map=0.69 best=0.69 hours left=8.9\u0007\n",
            " 1064: 3.796370, 2.500078 avg loss, 0.001000 rate, 10.296452 seconds, 68096 images, 8.868905 hours left\n",
            "Loaded: 0.000077 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741501), count: 1, class_loss = 0.037877, iou_loss = 0.214224, total_loss = 0.252101 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.711838), count: 8, class_loss = 0.620659, iou_loss = 0.293916, total_loss = 0.914575 \n",
            " total_bbox = 719533, rewritten_bbox = 0.003613 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.846763), count: 2, class_loss = 0.446252, iou_loss = 0.559267, total_loss = 1.005519 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.786965), count: 12, class_loss = 1.071372, iou_loss = 0.484389, total_loss = 1.555761 \n",
            " total_bbox = 719547, rewritten_bbox = 0.003613 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.274005), count: 2, class_loss = 0.469792, iou_loss = 0.378513, total_loss = 0.848305 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.704207), count: 2, class_loss = 0.415018, iou_loss = 0.349196, total_loss = 0.764214 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741946), count: 10, class_loss = 1.152512, iou_loss = 0.482855, total_loss = 1.635367 \n",
            " total_bbox = 719561, rewritten_bbox = 0.003613 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.668684), count: 3, class_loss = 0.766843, iou_loss = 16.882801, total_loss = 17.649645 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707398), count: 8, class_loss = 1.600518, iou_loss = 4.482181, total_loss = 6.082699 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774053), count: 26, class_loss = 4.487045, iou_loss = 1.555376, total_loss = 6.042421 \n",
            " total_bbox = 719598, rewritten_bbox = 0.003613 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.139820), count: 1, class_loss = 0.270156, iou_loss = 6.482403, total_loss = 6.752559 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755012), count: 9, class_loss = 2.147411, iou_loss = 4.905211, total_loss = 7.052622 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774811), count: 26, class_loss = 3.371659, iou_loss = 1.405975, total_loss = 4.777635 \n",
            " total_bbox = 719634, rewritten_bbox = 0.003613 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.617544), count: 10, class_loss = 2.966885, iou_loss = 23.339283, total_loss = 26.306168 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.701119), count: 22, class_loss = 4.756339, iou_loss = 9.391399, total_loss = 14.147738 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763696), count: 30, class_loss = 6.244332, iou_loss = 2.133001, total_loss = 8.377333 \n",
            " total_bbox = 719696, rewritten_bbox = 0.003613 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.782054), count: 6, class_loss = 1.262209, iou_loss = 11.841122, total_loss = 13.103331 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725650), count: 29, class_loss = 5.349358, iou_loss = 12.494783, total_loss = 17.844141 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733874), count: 32, class_loss = 5.271984, iou_loss = 1.911985, total_loss = 7.183969 \n",
            " total_bbox = 719763, rewritten_bbox = 0.003612 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.731031), count: 8, class_loss = 0.826822, iou_loss = 11.841172, total_loss = 12.667994 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748952), count: 24, class_loss = 4.049640, iou_loss = 10.992123, total_loss = 15.041763 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.726231), count: 29, class_loss = 2.683323, iou_loss = 1.660459, total_loss = 4.343782 \n",
            " total_bbox = 719824, rewritten_bbox = 0.003612 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.563003), count: 5, class_loss = 1.787373, iou_loss = 13.978313, total_loss = 15.765686 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743608), count: 23, class_loss = 3.869938, iou_loss = 11.589361, total_loss = 15.459300 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731030), count: 28, class_loss = 3.104352, iou_loss = 1.968087, total_loss = 5.072440 \n",
            " total_bbox = 719880, rewritten_bbox = 0.003612 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.654422), count: 4, class_loss = 1.128822, iou_loss = 6.127924, total_loss = 7.256746 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759993), count: 21, class_loss = 5.033130, iou_loss = 5.771450, total_loss = 10.804580 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764769), count: 36, class_loss = 4.505707, iou_loss = 2.922273, total_loss = 7.427980 \n",
            " total_bbox = 719941, rewritten_bbox = 0.003611 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.006389, iou_loss = 0.000000, total_loss = 0.006389 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749343), count: 8, class_loss = 1.836315, iou_loss = 2.427414, total_loss = 4.263729 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752483), count: 29, class_loss = 5.372089, iou_loss = 2.148102, total_loss = 7.520191 \n",
            " total_bbox = 719978, rewritten_bbox = 0.003611 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.749702), count: 8, class_loss = 2.354949, iou_loss = 13.974878, total_loss = 16.329826 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.658388), count: 27, class_loss = 6.383394, iou_loss = 10.200987, total_loss = 16.584381 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739409), count: 14, class_loss = 2.409701, iou_loss = 1.512141, total_loss = 3.921842 \n",
            " total_bbox = 720027, rewritten_bbox = 0.003611 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.711478), count: 2, class_loss = 0.397290, iou_loss = 0.361022, total_loss = 0.758312 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795920), count: 10, class_loss = 0.805895, iou_loss = 0.601670, total_loss = 1.407565 \n",
            " total_bbox = 720039, rewritten_bbox = 0.003611 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.726150), count: 10, class_loss = 2.347455, iou_loss = 15.336178, total_loss = 17.683632 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723124), count: 31, class_loss = 4.692240, iou_loss = 13.953583, total_loss = 18.645823 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707696), count: 13, class_loss = 1.908743, iou_loss = 1.433885, total_loss = 3.342628 \n",
            " total_bbox = 720093, rewritten_bbox = 0.003611 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.553148), count: 2, class_loss = 0.507885, iou_loss = 1.677215, total_loss = 2.185100 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757801), count: 30, class_loss = 4.689601, iou_loss = 11.707745, total_loss = 16.397346 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766731), count: 35, class_loss = 3.913824, iou_loss = 3.508233, total_loss = 7.422057 \n",
            " total_bbox = 720160, rewritten_bbox = 0.003610 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.716561), count: 2, class_loss = 0.283175, iou_loss = 3.313243, total_loss = 3.596419 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763144), count: 22, class_loss = 3.541344, iou_loss = 8.886896, total_loss = 12.428240 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744788), count: 30, class_loss = 3.593707, iou_loss = 1.971585, total_loss = 5.565291 \n",
            " total_bbox = 720214, rewritten_bbox = 0.003610 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1065/6000: loss=2.4 map=0.69 best=0.69 hours left=8.9\u0007\n",
            " 1065: 2.395188, 2.489589 avg loss, 0.001000 rate, 10.073279 seconds, 68160 images, 8.921393 hours left\n",
            "Loaded: 0.000061 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.632078), count: 2, class_loss = 0.656838, iou_loss = 7.482369, total_loss = 8.139207 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730612), count: 21, class_loss = 3.054212, iou_loss = 6.616966, total_loss = 9.671179 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795391), count: 29, class_loss = 2.823911, iou_loss = 2.386081, total_loss = 5.209991 \n",
            " total_bbox = 720266, rewritten_bbox = 0.003610 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.721254), count: 11, class_loss = 1.648093, iou_loss = 17.622272, total_loss = 19.270365 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751668), count: 49, class_loss = 6.412632, iou_loss = 24.046282, total_loss = 30.458914 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.708038), count: 30, class_loss = 5.340106, iou_loss = 3.285388, total_loss = 8.625494 \n",
            " total_bbox = 720356, rewritten_bbox = 0.003609 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.612267), count: 6, class_loss = 1.180210, iou_loss = 15.485466, total_loss = 16.665676 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.769241), count: 40, class_loss = 4.210314, iou_loss = 17.321449, total_loss = 21.531763 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750346), count: 29, class_loss = 2.718210, iou_loss = 3.709300, total_loss = 6.427509 \n",
            " total_bbox = 720431, rewritten_bbox = 0.003609 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000215, iou_loss = 0.000000, total_loss = 0.000215 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000429, iou_loss = 0.000000, total_loss = 0.000429 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728564), count: 8, class_loss = 0.641795, iou_loss = 0.154921, total_loss = 0.796715 \n",
            " total_bbox = 720439, rewritten_bbox = 0.003609 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.002120, iou_loss = 0.000000, total_loss = 0.002120 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746287), count: 9, class_loss = 0.453376, iou_loss = 0.323376, total_loss = 0.776752 \n",
            " total_bbox = 720448, rewritten_bbox = 0.003609 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.708940), count: 14, class_loss = 3.330949, iou_loss = 22.621704, total_loss = 25.952654 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755385), count: 60, class_loss = 9.886927, iou_loss = 32.087234, total_loss = 41.974163 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.709050), count: 31, class_loss = 4.309649, iou_loss = 2.944488, total_loss = 7.254137 \n",
            " total_bbox = 720553, rewritten_bbox = 0.003608 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.626128), count: 4, class_loss = 0.799943, iou_loss = 9.842485, total_loss = 10.642428 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758450), count: 16, class_loss = 2.175668, iou_loss = 5.079569, total_loss = 7.255237 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755619), count: 29, class_loss = 4.213525, iou_loss = 2.161423, total_loss = 6.374948 \n",
            " total_bbox = 720602, rewritten_bbox = 0.003608 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.335291, iou_loss = 0.000000, total_loss = 0.335291 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.661201), count: 21, class_loss = 6.039076, iou_loss = 6.737306, total_loss = 12.776382 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.749251), count: 29, class_loss = 5.258334, iou_loss = 1.997893, total_loss = 7.256227 \n",
            " total_bbox = 720652, rewritten_bbox = 0.003608 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.641397), count: 1, class_loss = 0.268261, iou_loss = 1.782234, total_loss = 2.050496 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778764), count: 25, class_loss = 4.777462, iou_loss = 9.694580, total_loss = 14.472042 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775495), count: 41, class_loss = 5.116713, iou_loss = 2.910288, total_loss = 8.027000 \n",
            " total_bbox = 720719, rewritten_bbox = 0.003608 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.716443), count: 17, class_loss = 3.969076, iou_loss = 40.958561, total_loss = 44.927635 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.685845), count: 30, class_loss = 6.901145, iou_loss = 12.773335, total_loss = 19.674479 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765052), count: 26, class_loss = 1.893260, iou_loss = 2.065202, total_loss = 3.958462 \n",
            " total_bbox = 720792, rewritten_bbox = 0.003607 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.732551), count: 5, class_loss = 0.828847, iou_loss = 14.172785, total_loss = 15.001632 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725659), count: 13, class_loss = 2.204591, iou_loss = 3.575698, total_loss = 5.780289 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.776591), count: 22, class_loss = 2.994915, iou_loss = 1.501951, total_loss = 4.496866 \n",
            " total_bbox = 720832, rewritten_bbox = 0.003607 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000012, iou_loss = 0.000000, total_loss = 0.000012 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760761), count: 5, class_loss = 0.997791, iou_loss = 2.265754, total_loss = 3.263546 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721879), count: 13, class_loss = 2.245230, iou_loss = 0.693310, total_loss = 2.938541 \n",
            " total_bbox = 720850, rewritten_bbox = 0.003607 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.670161), count: 5, class_loss = 0.929971, iou_loss = 10.553732, total_loss = 11.483703 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761391), count: 11, class_loss = 1.436966, iou_loss = 9.969314, total_loss = 11.406280 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730918), count: 7, class_loss = 1.596560, iou_loss = 0.339895, total_loss = 1.936454 \n",
            " total_bbox = 720873, rewritten_bbox = 0.003607 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.669594), count: 1, class_loss = 0.073572, iou_loss = 0.135595, total_loss = 0.209167 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.695133), count: 9, class_loss = 0.832545, iou_loss = 0.393978, total_loss = 1.226523 \n",
            " total_bbox = 720883, rewritten_bbox = 0.003607 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793047), count: 6, class_loss = 0.943683, iou_loss = 2.555852, total_loss = 3.499536 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.692268), count: 17, class_loss = 2.920641, iou_loss = 0.926389, total_loss = 3.847030 \n",
            " total_bbox = 720906, rewritten_bbox = 0.003607 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.649434), count: 1, class_loss = 0.272583, iou_loss = 0.164435, total_loss = 0.437018 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.668704), count: 9, class_loss = 1.987152, iou_loss = 0.242896, total_loss = 2.230049 \n",
            " total_bbox = 720916, rewritten_bbox = 0.003607 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1066/6000: loss=2.3 map=0.69 best=0.69 hours left=9.0\u0007\n",
            " 1066: 2.268206, 2.467450 avg loss, 0.001000 rate, 9.961879 seconds, 68224 images, 8.970268 hours left\n",
            "Loaded: 0.000076 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000110, iou_loss = 0.000000, total_loss = 0.000110 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738800), count: 17, class_loss = 3.724137, iou_loss = 5.819181, total_loss = 9.543319 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.697313), count: 24, class_loss = 5.883507, iou_loss = 1.392480, total_loss = 7.275987 \n",
            " total_bbox = 720957, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.767611), count: 1, class_loss = 0.340778, iou_loss = 1.391268, total_loss = 1.732046 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793409), count: 28, class_loss = 2.403303, iou_loss = 13.200918, total_loss = 15.604220 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.676053), count: 17, class_loss = 2.347449, iou_loss = 1.816815, total_loss = 4.164264 \n",
            " total_bbox = 721003, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000031, iou_loss = 0.000000, total_loss = 0.000031 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.723175), count: 8, class_loss = 1.200239, iou_loss = 0.148728, total_loss = 1.348968 \n",
            " total_bbox = 721011, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000648, iou_loss = 0.000000, total_loss = 0.000648 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.800711), count: 2, class_loss = 0.662531, iou_loss = 0.430805, total_loss = 1.093336 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.691511), count: 10, class_loss = 1.602595, iou_loss = 0.365543, total_loss = 1.968139 \n",
            " total_bbox = 721023, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792851), count: 1, class_loss = 0.236600, iou_loss = 0.245039, total_loss = 0.481639 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750005), count: 8, class_loss = 0.875445, iou_loss = 0.318201, total_loss = 1.193645 \n",
            " total_bbox = 721032, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.686444), count: 8, class_loss = 1.827912, iou_loss = 18.926533, total_loss = 20.754444 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.677209), count: 8, class_loss = 2.098112, iou_loss = 5.948892, total_loss = 8.047004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.680267), count: 5, class_loss = 0.871384, iou_loss = 0.204727, total_loss = 1.076110 \n",
            " total_bbox = 721053, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.002216, iou_loss = 0.000000, total_loss = 0.002216 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.699772), count: 3, class_loss = 0.809245, iou_loss = 0.451816, total_loss = 1.261061 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.684708), count: 10, class_loss = 0.875585, iou_loss = 0.572033, total_loss = 1.447618 \n",
            " total_bbox = 721066, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000218, iou_loss = 0.000000, total_loss = 0.000218 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748589), count: 8, class_loss = 0.397075, iou_loss = 0.249035, total_loss = 0.646109 \n",
            " total_bbox = 721074, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775679), count: 5, class_loss = 1.096415, iou_loss = 2.069681, total_loss = 3.166096 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.727002), count: 10, class_loss = 1.235554, iou_loss = 0.483387, total_loss = 1.718941 \n",
            " total_bbox = 721089, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000214, iou_loss = 0.000000, total_loss = 0.000214 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736453), count: 8, class_loss = 0.954733, iou_loss = 0.163708, total_loss = 1.118440 \n",
            " total_bbox = 721097, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.002372, iou_loss = 0.000000, total_loss = 0.002372 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.627690), count: 7, class_loss = 1.485999, iou_loss = 0.106864, total_loss = 1.592864 \n",
            " total_bbox = 721104, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.626522), count: 1, class_loss = 0.076154, iou_loss = 0.152973, total_loss = 0.229128 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.638263), count: 8, class_loss = 1.490242, iou_loss = 0.217085, total_loss = 1.707327 \n",
            " total_bbox = 721113, rewritten_bbox = 0.003606 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000459, iou_loss = 0.000000, total_loss = 0.000459 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769769), count: 8, class_loss = 0.735962, iou_loss = 0.174719, total_loss = 0.910681 \n",
            " total_bbox = 721121, rewritten_bbox = 0.003605 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000461, iou_loss = 0.000000, total_loss = 0.000461 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737975), count: 15, class_loss = 3.655742, iou_loss = 4.552346, total_loss = 8.208089 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779821), count: 27, class_loss = 3.320478, iou_loss = 2.232964, total_loss = 5.553442 \n",
            " total_bbox = 721163, rewritten_bbox = 0.003605 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.013952, iou_loss = 0.000000, total_loss = 0.013952 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759075), count: 37, class_loss = 6.806535, iou_loss = 13.815232, total_loss = 20.621767 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731223), count: 43, class_loss = 5.810750, iou_loss = 4.298377, total_loss = 10.109127 \n",
            " total_bbox = 721243, rewritten_bbox = 0.003605 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690304), count: 10, class_loss = 2.385358, iou_loss = 29.328909, total_loss = 31.714268 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783755), count: 24, class_loss = 3.277362, iou_loss = 18.219194, total_loss = 21.496557 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763725), count: 24, class_loss = 2.465206, iou_loss = 2.962493, total_loss = 5.427699 \n",
            " total_bbox = 721301, rewritten_bbox = 0.003605 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1067/6000: loss=1.3 map=0.69 best=0.69 hours left=9.0\u0007\n",
            " 1067: 1.273279, 2.348033 avg loss, 0.001000 rate, 9.905912 seconds, 68288 images, 9.017099 hours left\n",
            "Loaded: 0.000074 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.771692), count: 2, class_loss = 0.500102, iou_loss = 2.451140, total_loss = 2.951241 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771658), count: 18, class_loss = 4.328415, iou_loss = 7.048010, total_loss = 11.376426 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.718661), count: 33, class_loss = 4.159249, iou_loss = 2.260418, total_loss = 6.419667 \n",
            " total_bbox = 721354, rewritten_bbox = 0.003604 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.594468), count: 17, class_loss = 4.460294, iou_loss = 41.555817, total_loss = 46.016109 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741167), count: 17, class_loss = 2.806382, iou_loss = 5.642152, total_loss = 8.448534 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736358), count: 29, class_loss = 3.837975, iou_loss = 1.549253, total_loss = 5.387228 \n",
            " total_bbox = 721417, rewritten_bbox = 0.003604 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.754160), count: 2, class_loss = 0.515059, iou_loss = 3.778586, total_loss = 4.293645 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737231), count: 18, class_loss = 4.712215, iou_loss = 5.623898, total_loss = 10.336113 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707679), count: 34, class_loss = 6.930431, iou_loss = 2.550933, total_loss = 9.481364 \n",
            " total_bbox = 721471, rewritten_bbox = 0.003604 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.002638, iou_loss = 0.000000, total_loss = 0.002638 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.813232), count: 9, class_loss = 1.604589, iou_loss = 2.840861, total_loss = 4.445449 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762943), count: 31, class_loss = 3.413471, iou_loss = 1.921232, total_loss = 5.334703 \n",
            " total_bbox = 721511, rewritten_bbox = 0.003604 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001822, iou_loss = 0.000000, total_loss = 0.001822 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786027), count: 15, class_loss = 2.291655, iou_loss = 5.659943, total_loss = 7.951598 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770128), count: 36, class_loss = 4.371258, iou_loss = 2.952848, total_loss = 7.324106 \n",
            " total_bbox = 721562, rewritten_bbox = 0.003603 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664512), count: 5, class_loss = 1.735940, iou_loss = 6.685527, total_loss = 8.421468 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.676335), count: 16, class_loss = 4.265364, iou_loss = 7.568947, total_loss = 11.834311 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.696062), count: 19, class_loss = 3.853754, iou_loss = 2.025635, total_loss = 5.879389 \n",
            " total_bbox = 721602, rewritten_bbox = 0.003603 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.002077, iou_loss = 0.000000, total_loss = 0.002077 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719743), count: 9, class_loss = 1.560581, iou_loss = 0.319750, total_loss = 1.880331 \n",
            " total_bbox = 721611, rewritten_bbox = 0.003603 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000281, iou_loss = 0.000000, total_loss = 0.000281 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716660), count: 8, class_loss = 0.373144, iou_loss = 0.141724, total_loss = 0.514868 \n",
            " total_bbox = 721619, rewritten_bbox = 0.003603 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.760533), count: 15, class_loss = 2.168869, iou_loss = 43.560860, total_loss = 45.729729 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.712473), count: 14, class_loss = 1.731994, iou_loss = 7.418338, total_loss = 9.150332 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751548), count: 8, class_loss = 1.526547, iou_loss = 0.789968, total_loss = 2.316515 \n",
            " total_bbox = 721656, rewritten_bbox = 0.003603 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.734321), count: 11, class_loss = 2.987669, iou_loss = 17.504955, total_loss = 20.492624 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773672), count: 49, class_loss = 11.879671, iou_loss = 21.534895, total_loss = 33.414566 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.684027), count: 28, class_loss = 4.848014, iou_loss = 2.270164, total_loss = 7.118178 \n",
            " total_bbox = 721744, rewritten_bbox = 0.003602 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000204, iou_loss = 0.000000, total_loss = 0.000204 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.669850), count: 8, class_loss = 0.945481, iou_loss = 0.154342, total_loss = 1.099823 \n",
            " total_bbox = 721752, rewritten_bbox = 0.003602 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768399), count: 8, class_loss = 1.428658, iou_loss = 1.648575, total_loss = 3.077233 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757727), count: 19, class_loss = 1.525945, iou_loss = 1.168375, total_loss = 2.694320 \n",
            " total_bbox = 721779, rewritten_bbox = 0.003602 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000023, iou_loss = 0.000000, total_loss = 0.000023 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.809438), count: 1, class_loss = 0.125402, iou_loss = 0.255450, total_loss = 0.380853 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760256), count: 7, class_loss = 0.639038, iou_loss = 0.227540, total_loss = 0.866579 \n",
            " total_bbox = 721787, rewritten_bbox = 0.003602 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.749551), count: 8, class_loss = 1.146874, iou_loss = 17.879086, total_loss = 19.025959 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738259), count: 16, class_loss = 1.474783, iou_loss = 10.043612, total_loss = 11.518394 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719877), count: 15, class_loss = 2.669062, iou_loss = 0.855664, total_loss = 3.524727 \n",
            " total_bbox = 721826, rewritten_bbox = 0.003602 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001022, iou_loss = 0.000000, total_loss = 0.001022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773098), count: 14, class_loss = 2.772964, iou_loss = 6.440598, total_loss = 9.213561 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752377), count: 29, class_loss = 2.570281, iou_loss = 1.658320, total_loss = 4.228601 \n",
            " total_bbox = 721869, rewritten_bbox = 0.003602 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.743556), count: 10, class_loss = 1.748731, iou_loss = 18.090727, total_loss = 19.839458 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723729), count: 38, class_loss = 6.358809, iou_loss = 17.653305, total_loss = 24.012114 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722342), count: 29, class_loss = 6.279170, iou_loss = 2.589221, total_loss = 8.868391 \n",
            " total_bbox = 721946, rewritten_bbox = 0.003601 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1068/6000: loss=2.3 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1068: 2.306805, 2.343910 avg loss, 0.001000 rate, 10.333624 seconds, 68352 images, 9.062668 hours left\n",
            "Loaded: 0.000076 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759171), count: 4, class_loss = 0.959001, iou_loss = 7.045077, total_loss = 8.004079 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.791124), count: 23, class_loss = 4.183355, iou_loss = 12.528797, total_loss = 16.712152 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.723975), count: 27, class_loss = 4.408358, iou_loss = 2.570508, total_loss = 6.978866 \n",
            " total_bbox = 722000, rewritten_bbox = 0.003601 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.500204), count: 3, class_loss = 0.885898, iou_loss = 5.465045, total_loss = 6.350943 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759588), count: 29, class_loss = 4.909656, iou_loss = 13.420136, total_loss = 18.329792 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.724058), count: 26, class_loss = 5.128885, iou_loss = 1.980054, total_loss = 7.108940 \n",
            " total_bbox = 722058, rewritten_bbox = 0.003601 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.768676), count: 2, class_loss = 0.545857, iou_loss = 2.464511, total_loss = 3.010368 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.704477), count: 13, class_loss = 2.799378, iou_loss = 4.079551, total_loss = 6.878929 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750336), count: 29, class_loss = 3.158362, iou_loss = 1.737781, total_loss = 4.896143 \n",
            " total_bbox = 722102, rewritten_bbox = 0.003601 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000288, iou_loss = 0.000000, total_loss = 0.000288 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.826521), count: 14, class_loss = 2.492389, iou_loss = 3.294300, total_loss = 5.786689 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771621), count: 37, class_loss = 4.361137, iou_loss = 2.866812, total_loss = 7.227950 \n",
            " total_bbox = 722153, rewritten_bbox = 0.003600 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.799998), count: 1, class_loss = 0.097653, iou_loss = 1.810846, total_loss = 1.908499 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755977), count: 41, class_loss = 6.234103, iou_loss = 14.957890, total_loss = 21.191992 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736745), count: 39, class_loss = 4.106155, iou_loss = 3.750082, total_loss = 7.856237 \n",
            " total_bbox = 722234, rewritten_bbox = 0.003600 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000351, iou_loss = 0.000000, total_loss = 0.000351 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.615011), count: 5, class_loss = 1.047293, iou_loss = 2.796952, total_loss = 3.844245 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.727591), count: 13, class_loss = 1.450623, iou_loss = 0.692747, total_loss = 2.143370 \n",
            " total_bbox = 722252, rewritten_bbox = 0.003600 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.265288), count: 1, class_loss = 0.284861, iou_loss = 0.163927, total_loss = 0.448788 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.849236), count: 2, class_loss = 0.796685, iou_loss = 0.314558, total_loss = 1.111243 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.726897), count: 10, class_loss = 1.510240, iou_loss = 0.418422, total_loss = 1.928662 \n",
            " total_bbox = 722265, rewritten_bbox = 0.003600 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.836497), count: 2, class_loss = 0.207176, iou_loss = 0.485525, total_loss = 0.692701 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.792379), count: 9, class_loss = 1.308266, iou_loss = 0.471384, total_loss = 1.779650 \n",
            " total_bbox = 722276, rewritten_bbox = 0.003600 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711031), count: 10, class_loss = 2.038916, iou_loss = 18.453627, total_loss = 20.492542 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752844), count: 27, class_loss = 3.969101, iou_loss = 11.035423, total_loss = 15.004524 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744660), count: 30, class_loss = 5.395713, iou_loss = 2.351843, total_loss = 7.747556 \n",
            " total_bbox = 722343, rewritten_bbox = 0.003599 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.578087), count: 5, class_loss = 1.761140, iou_loss = 6.113151, total_loss = 7.874290 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.672389), count: 15, class_loss = 3.810152, iou_loss = 4.053798, total_loss = 7.863949 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745897), count: 33, class_loss = 5.276303, iou_loss = 1.965183, total_loss = 7.241486 \n",
            " total_bbox = 722396, rewritten_bbox = 0.003599 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.697212), count: 1, class_loss = 0.171801, iou_loss = 1.501099, total_loss = 1.672900 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.799706), count: 12, class_loss = 2.448822, iou_loss = 4.146305, total_loss = 6.595127 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772701), count: 29, class_loss = 2.550333, iou_loss = 1.899900, total_loss = 4.450233 \n",
            " total_bbox = 722438, rewritten_bbox = 0.003599 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.737823), count: 4, class_loss = 1.198971, iou_loss = 8.699211, total_loss = 9.898183 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756641), count: 13, class_loss = 2.399328, iou_loss = 4.407462, total_loss = 6.806790 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781588), count: 33, class_loss = 3.163820, iou_loss = 3.432578, total_loss = 6.596397 \n",
            " total_bbox = 722488, rewritten_bbox = 0.003599 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.667400), count: 10, class_loss = 2.523528, iou_loss = 19.537024, total_loss = 22.060551 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736443), count: 26, class_loss = 5.097251, iou_loss = 12.948485, total_loss = 18.045736 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.682288), count: 27, class_loss = 2.627120, iou_loss = 2.520576, total_loss = 5.147697 \n",
            " total_bbox = 722551, rewritten_bbox = 0.003598 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.676253), count: 2, class_loss = 0.500462, iou_loss = 3.670380, total_loss = 4.170842 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781170), count: 23, class_loss = 3.630970, iou_loss = 8.760061, total_loss = 12.391031 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764983), count: 23, class_loss = 1.722397, iou_loss = 2.160625, total_loss = 3.883022 \n",
            " total_bbox = 722599, rewritten_bbox = 0.003598 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.005483, iou_loss = 0.000000, total_loss = 0.005483 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805259), count: 18, class_loss = 2.649590, iou_loss = 6.141385, total_loss = 8.790976 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.686039), count: 22, class_loss = 2.439913, iou_loss = 1.271927, total_loss = 3.711840 \n",
            " total_bbox = 722639, rewritten_bbox = 0.003598 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.010167, iou_loss = 0.000000, total_loss = 0.010167 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773928), count: 14, class_loss = 3.126736, iou_loss = 6.617761, total_loss = 9.744497 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.676123), count: 12, class_loss = 1.672122, iou_loss = 0.572604, total_loss = 2.244725 \n",
            " total_bbox = 722665, rewritten_bbox = 0.003598 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1069/6000: loss=2.3 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1069: 2.318185, 2.341338 avg loss, 0.001000 rate, 10.016639 seconds, 68416 images, 9.113613 hours left\n",
            "Loaded: 0.000059 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.739805), count: 2, class_loss = 0.254985, iou_loss = 3.310842, total_loss = 3.565827 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742237), count: 25, class_loss = 5.956801, iou_loss = 9.152294, total_loss = 15.109096 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750636), count: 31, class_loss = 5.123183, iou_loss = 2.951687, total_loss = 8.074870 \n",
            " total_bbox = 722723, rewritten_bbox = 0.003598 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.682721), count: 32, class_loss = 5.075290, iou_loss = 69.126762, total_loss = 74.202049 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727978), count: 63, class_loss = 10.244452, iou_loss = 34.258385, total_loss = 44.502838 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.749294), count: 32, class_loss = 4.211389, iou_loss = 2.849339, total_loss = 7.060728 \n",
            " total_bbox = 722850, rewritten_bbox = 0.003597 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.621973), count: 2, class_loss = 0.675964, iou_loss = 2.879978, total_loss = 3.555942 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805193), count: 11, class_loss = 2.426226, iou_loss = 6.727041, total_loss = 9.153268 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787452), count: 21, class_loss = 4.599339, iou_loss = 1.793196, total_loss = 6.392535 \n",
            " total_bbox = 722884, rewritten_bbox = 0.003597 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.613712), count: 9, class_loss = 2.288411, iou_loss = 18.357868, total_loss = 20.646278 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.601962), count: 20, class_loss = 4.802394, iou_loss = 7.192750, total_loss = 11.995144 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.695656), count: 21, class_loss = 3.345861, iou_loss = 1.669183, total_loss = 5.015044 \n",
            " total_bbox = 722934, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000084, iou_loss = 0.000000, total_loss = 0.000084 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.639484), count: 1, class_loss = 0.144990, iou_loss = 0.084133, total_loss = 0.229124 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.651807), count: 8, class_loss = 1.549786, iou_loss = 0.198696, total_loss = 1.748482 \n",
            " total_bbox = 722943, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000118, iou_loss = 0.000000, total_loss = 0.000118 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730135), count: 8, class_loss = 0.179726, iou_loss = 0.166220, total_loss = 0.345946 \n",
            " total_bbox = 722951, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000017, iou_loss = 0.000000, total_loss = 0.000017 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.015400, iou_loss = 0.000000, total_loss = 0.015400 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777096), count: 10, class_loss = 0.956781, iou_loss = 0.402369, total_loss = 1.359149 \n",
            " total_bbox = 722961, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711131), count: 10, class_loss = 1.618997, iou_loss = 19.838520, total_loss = 21.457518 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.691355), count: 15, class_loss = 1.341168, iou_loss = 8.962873, total_loss = 10.304041 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.818074), count: 7, class_loss = 0.611474, iou_loss = 0.351012, total_loss = 0.962486 \n",
            " total_bbox = 722993, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.796106), count: 5, class_loss = 1.058358, iou_loss = 8.485474, total_loss = 9.543832 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783366), count: 30, class_loss = 4.825094, iou_loss = 16.630453, total_loss = 21.455547 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742694), count: 18, class_loss = 2.979300, iou_loss = 2.488186, total_loss = 5.467486 \n",
            " total_bbox = 723046, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.691750), count: 2, class_loss = 0.091425, iou_loss = 4.204345, total_loss = 4.295769 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781520), count: 16, class_loss = 2.980873, iou_loss = 9.761824, total_loss = 12.742697 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710672), count: 12, class_loss = 1.331706, iou_loss = 0.894331, total_loss = 2.226037 \n",
            " total_bbox = 723076, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.848896), count: 8, class_loss = 1.163275, iou_loss = 18.829561, total_loss = 19.992836 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.664895), count: 11, class_loss = 1.305625, iou_loss = 3.709257, total_loss = 5.014882 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.792561), count: 13, class_loss = 1.265351, iou_loss = 0.690872, total_loss = 1.956223 \n",
            " total_bbox = 723108, rewritten_bbox = 0.003596 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.669881), count: 10, class_loss = 2.329629, iou_loss = 22.087238, total_loss = 24.416868 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746651), count: 55, class_loss = 9.339437, iou_loss = 25.224241, total_loss = 34.563679 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758662), count: 35, class_loss = 4.184972, iou_loss = 3.770705, total_loss = 7.955677 \n",
            " total_bbox = 723208, rewritten_bbox = 0.003595 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.238578), count: 1, class_loss = 0.306830, iou_loss = 0.178143, total_loss = 0.484974 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.662908), count: 7, class_loss = 2.007013, iou_loss = 2.794413, total_loss = 4.801426 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779716), count: 31, class_loss = 3.122797, iou_loss = 1.911738, total_loss = 5.034535 \n",
            " total_bbox = 723247, rewritten_bbox = 0.003595 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000626, iou_loss = 0.000000, total_loss = 0.000626 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.716178), count: 26, class_loss = 8.247959, iou_loss = 6.632149, total_loss = 14.880108 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716177), count: 41, class_loss = 9.857547, iou_loss = 2.705939, total_loss = 12.563486 \n",
            " total_bbox = 723314, rewritten_bbox = 0.003595 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.609566), count: 8, class_loss = 1.965550, iou_loss = 22.130577, total_loss = 24.096127 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729048), count: 23, class_loss = 5.798337, iou_loss = 9.220015, total_loss = 15.018351 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780256), count: 23, class_loss = 3.695088, iou_loss = 1.628975, total_loss = 5.324063 \n",
            " total_bbox = 723368, rewritten_bbox = 0.003594 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.498399), count: 2, class_loss = 0.540277, iou_loss = 4.252673, total_loss = 4.792950 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778585), count: 27, class_loss = 4.504306, iou_loss = 10.065601, total_loss = 14.569907 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775737), count: 30, class_loss = 2.850203, iou_loss = 2.478307, total_loss = 5.328510 \n",
            " total_bbox = 723427, rewritten_bbox = 0.003594 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1070/6000: loss=2.7 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1070: 2.737245, 2.380929 avg loss, 0.001000 rate, 10.047410 seconds, 68480 images, 9.159678 hours left\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 480 x 480 \n",
            " try to allocate additional workspace_size = 147.84 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 0.928553 seconds - performance bottleneck on CPU or Disk HDD/SSD\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.733564), count: 37, class_loss = 6.648655, iou_loss = 62.789074, total_loss = 69.437729 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730426), count: 75, class_loss = 11.020947, iou_loss = 33.268391, total_loss = 44.289337 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736987), count: 33, class_loss = 3.765495, iou_loss = 1.979900, total_loss = 5.745395 \n",
            " total_bbox = 723572, rewritten_bbox = 0.003593 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.780616), count: 15, class_loss = 3.293918, iou_loss = 32.677864, total_loss = 35.971783 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760681), count: 50, class_loss = 7.113665, iou_loss = 17.357262, total_loss = 24.470926 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715615), count: 30, class_loss = 4.158866, iou_loss = 1.608055, total_loss = 5.766921 \n",
            " total_bbox = 723667, rewritten_bbox = 0.003593 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.717427), count: 23, class_loss = 5.622687, iou_loss = 30.340345, total_loss = 35.963032 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727245), count: 43, class_loss = 6.952048, iou_loss = 16.704288, total_loss = 23.656338 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.782744), count: 17, class_loss = 2.708409, iou_loss = 1.320626, total_loss = 4.029035 \n",
            " total_bbox = 723750, rewritten_bbox = 0.003592 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.681663), count: 25, class_loss = 6.430728, iou_loss = 35.016369, total_loss = 41.447098 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727181), count: 39, class_loss = 8.023231, iou_loss = 11.925176, total_loss = 19.948406 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750838), count: 28, class_loss = 4.705774, iou_loss = 1.388748, total_loss = 6.094522 \n",
            " total_bbox = 723842, rewritten_bbox = 0.003592 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.723013), count: 31, class_loss = 8.140433, iou_loss = 42.589565, total_loss = 50.730000 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.726900), count: 63, class_loss = 10.422817, iou_loss = 24.799614, total_loss = 35.222431 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730176), count: 23, class_loss = 2.379418, iou_loss = 1.696026, total_loss = 4.075444 \n",
            " total_bbox = 723959, rewritten_bbox = 0.003591 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.763992), count: 9, class_loss = 2.823263, iou_loss = 18.131870, total_loss = 20.955133 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744345), count: 39, class_loss = 7.746119, iou_loss = 12.554798, total_loss = 20.300917 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751358), count: 28, class_loss = 5.584616, iou_loss = 1.876675, total_loss = 7.461291 \n",
            " total_bbox = 724035, rewritten_bbox = 0.003591 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.514108), count: 7, class_loss = 1.597435, iou_loss = 13.618107, total_loss = 15.215541 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757799), count: 23, class_loss = 3.162454, iou_loss = 5.578152, total_loss = 8.740606 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734012), count: 28, class_loss = 2.340441, iou_loss = 1.562805, total_loss = 3.903246 \n",
            " total_bbox = 724093, rewritten_bbox = 0.003591 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.720218), count: 4, class_loss = 1.068546, iou_loss = 5.263955, total_loss = 6.332501 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749944), count: 32, class_loss = 5.984715, iou_loss = 8.009886, total_loss = 13.994600 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753011), count: 23, class_loss = 2.144659, iou_loss = 1.391701, total_loss = 3.536360 \n",
            " total_bbox = 724152, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.892960), count: 1, class_loss = 0.047255, iou_loss = 0.194569, total_loss = 0.241824 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785345), count: 9, class_loss = 0.084715, iou_loss = 0.199889, total_loss = 0.284605 \n",
            " total_bbox = 724162, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778900), count: 2, class_loss = 0.263409, iou_loss = 0.330673, total_loss = 0.594082 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.805142), count: 8, class_loss = 0.181067, iou_loss = 0.279559, total_loss = 0.460626 \n",
            " total_bbox = 724172, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000100, iou_loss = 0.000000, total_loss = 0.000100 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.800057), count: 5, class_loss = 0.475461, iou_loss = 1.041578, total_loss = 1.517040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.708793), count: 9, class_loss = 0.468205, iou_loss = 0.347790, total_loss = 0.815994 \n",
            " total_bbox = 724186, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.189749, iou_loss = 0.000000, total_loss = 0.189749 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.786897), count: 10, class_loss = 1.255209, iou_loss = 0.317462, total_loss = 1.572671 \n",
            " total_bbox = 724196, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.711615), count: 1, class_loss = 0.353964, iou_loss = 0.092681, total_loss = 0.446645 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755579), count: 10, class_loss = 1.538193, iou_loss = 0.269403, total_loss = 1.807596 \n",
            " total_bbox = 724207, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.798389), count: 3, class_loss = 0.841605, iou_loss = 0.577624, total_loss = 1.419228 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774700), count: 9, class_loss = 1.535155, iou_loss = 0.379019, total_loss = 1.914174 \n",
            " total_bbox = 724219, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.533280), count: 1, class_loss = 0.251184, iou_loss = 0.325702, total_loss = 0.576886 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.671780), count: 8, class_loss = 1.855053, iou_loss = 1.330833, total_loss = 3.185886 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.695197), count: 13, class_loss = 2.032428, iou_loss = 0.506220, total_loss = 2.538648 \n",
            " total_bbox = 724241, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.737656), count: 18, class_loss = 3.535110, iou_loss = 34.356785, total_loss = 37.891895 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722639), count: 18, class_loss = 2.481808, iou_loss = 10.840953, total_loss = 13.322762 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772948), count: 7, class_loss = 0.346515, iou_loss = 0.217104, total_loss = 0.563619 \n",
            " total_bbox = 724284, rewritten_bbox = 0.003590 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1071/6000: loss=3.0 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1071: 2.953411, 2.438177 avg loss, 0.001000 rate, 6.885597 seconds, 68544 images, 9.205676 hours left\n",
            "Loaded: 0.000072 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.620635), count: 2, class_loss = 0.187325, iou_loss = 0.164849, total_loss = 0.352173 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735782), count: 11, class_loss = 0.587362, iou_loss = 0.379960, total_loss = 0.967322 \n",
            " total_bbox = 724297, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.732444), count: 1, class_loss = 0.015641, iou_loss = 0.098612, total_loss = 0.114253 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.709305), count: 9, class_loss = 0.781456, iou_loss = 0.178011, total_loss = 0.959467 \n",
            " total_bbox = 724307, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000057, iou_loss = 0.000000, total_loss = 0.000057 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766651), count: 9, class_loss = 1.708065, iou_loss = 1.581078, total_loss = 3.289143 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773392), count: 13, class_loss = 1.275488, iou_loss = 0.823066, total_loss = 2.098554 \n",
            " total_bbox = 724329, rewritten_bbox = 0.003590 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.738910), count: 32, class_loss = 5.574060, iou_loss = 45.561405, total_loss = 51.135464 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741486), count: 56, class_loss = 8.303586, iou_loss = 22.699879, total_loss = 31.003466 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761558), count: 26, class_loss = 3.223313, iou_loss = 1.630240, total_loss = 4.853553 \n",
            " total_bbox = 724443, rewritten_bbox = 0.003589 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.677104), count: 1, class_loss = 0.335734, iou_loss = 0.983218, total_loss = 1.318952 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.695150), count: 12, class_loss = 2.910713, iou_loss = 2.304547, total_loss = 5.215261 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757385), count: 22, class_loss = 2.803194, iou_loss = 0.885202, total_loss = 3.688396 \n",
            " total_bbox = 724478, rewritten_bbox = 0.003589 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.557318), count: 1, class_loss = 0.306198, iou_loss = 6.434872, total_loss = 6.741070 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772579), count: 9, class_loss = 2.408373, iou_loss = 2.021250, total_loss = 4.429623 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772564), count: 23, class_loss = 2.655625, iou_loss = 0.996957, total_loss = 3.652582 \n",
            " total_bbox = 724511, rewritten_bbox = 0.003589 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740965), count: 2, class_loss = 0.179482, iou_loss = 0.217194, total_loss = 0.396676 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.810617), count: 11, class_loss = 0.956941, iou_loss = 0.510232, total_loss = 1.467173 \n",
            " total_bbox = 724524, rewritten_bbox = 0.003589 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.091709, iou_loss = 0.000000, total_loss = 0.091709 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.809285), count: 9, class_loss = 0.383422, iou_loss = 0.248907, total_loss = 0.632329 \n",
            " total_bbox = 724533, rewritten_bbox = 0.003589 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.615624), count: 13, class_loss = 1.627412, iou_loss = 27.795336, total_loss = 29.422749 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774376), count: 28, class_loss = 4.831858, iou_loss = 10.708856, total_loss = 15.540713 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721754), count: 23, class_loss = 2.302853, iou_loss = 1.223794, total_loss = 3.526647 \n",
            " total_bbox = 724597, rewritten_bbox = 0.003588 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001572, iou_loss = 0.000000, total_loss = 0.001572 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.791207), count: 28, class_loss = 5.122003, iou_loss = 6.252169, total_loss = 11.374172 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753835), count: 36, class_loss = 3.516736, iou_loss = 2.068025, total_loss = 5.584760 \n",
            " total_bbox = 724661, rewritten_bbox = 0.003588 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759392), count: 19, class_loss = 2.678382, iou_loss = 34.263165, total_loss = 36.941547 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.820901), count: 28, class_loss = 2.682622, iou_loss = 13.725295, total_loss = 16.407917 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768066), count: 18, class_loss = 2.148416, iou_loss = 1.193008, total_loss = 3.341424 \n",
            " total_bbox = 724726, rewritten_bbox = 0.003588 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.770276), count: 5, class_loss = 1.177738, iou_loss = 8.250752, total_loss = 9.428490 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.794361), count: 30, class_loss = 3.838005, iou_loss = 11.197415, total_loss = 15.035420 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779238), count: 33, class_loss = 2.955304, iou_loss = 2.773666, total_loss = 5.728971 \n",
            " total_bbox = 724794, rewritten_bbox = 0.003587 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.631454), count: 39, class_loss = 8.735811, iou_loss = 73.853256, total_loss = 82.589066 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.690059), count: 42, class_loss = 9.082572, iou_loss = 13.162597, total_loss = 22.245169 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781873), count: 26, class_loss = 2.825314, iou_loss = 1.399290, total_loss = 4.224604 \n",
            " total_bbox = 724901, rewritten_bbox = 0.003587 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003091, iou_loss = 0.000000, total_loss = 0.003091 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.814291), count: 23, class_loss = 3.303275, iou_loss = 5.973031, total_loss = 9.276305 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740045), count: 34, class_loss = 3.316351, iou_loss = 1.646217, total_loss = 4.962568 \n",
            " total_bbox = 724958, rewritten_bbox = 0.003586 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.798767), count: 9, class_loss = 1.172444, iou_loss = 17.205627, total_loss = 18.378073 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737880), count: 28, class_loss = 3.407170, iou_loss = 8.404347, total_loss = 11.811517 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780117), count: 27, class_loss = 4.262523, iou_loss = 1.618986, total_loss = 5.881508 \n",
            " total_bbox = 725022, rewritten_bbox = 0.003586 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.005206, iou_loss = 0.000000, total_loss = 0.005206 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.813270), count: 23, class_loss = 4.013632, iou_loss = 5.897985, total_loss = 9.911617 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760613), count: 36, class_loss = 2.904016, iou_loss = 1.669951, total_loss = 4.573967 \n",
            " total_bbox = 725081, rewritten_bbox = 0.003586 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1072/6000: loss=2.3 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1072: 2.307830, 2.425142 avg loss, 0.001000 rate, 6.799005 seconds, 68608 images, 9.220608 hours left\n",
            "Loaded: 0.000079 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.632388), count: 18, class_loss = 4.862758, iou_loss = 33.066303, total_loss = 37.929062 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751795), count: 51, class_loss = 8.467483, iou_loss = 13.958560, total_loss = 22.426043 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720535), count: 31, class_loss = 3.805945, iou_loss = 2.028012, total_loss = 5.833957 \n",
            " total_bbox = 725181, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.797802), count: 3, class_loss = 0.786336, iou_loss = 2.940861, total_loss = 3.727198 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.769759), count: 14, class_loss = 3.064069, iou_loss = 3.912542, total_loss = 6.976610 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763413), count: 27, class_loss = 1.853417, iou_loss = 1.656679, total_loss = 3.510096 \n",
            " total_bbox = 725225, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.864129), count: 4, class_loss = 0.314470, iou_loss = 5.944004, total_loss = 6.258474 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.776741), count: 20, class_loss = 2.931999, iou_loss = 5.548586, total_loss = 8.480585 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759058), count: 24, class_loss = 3.605899, iou_loss = 1.377480, total_loss = 4.983378 \n",
            " total_bbox = 725273, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.001041, iou_loss = 0.000000, total_loss = 0.001041 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.818908), count: 10, class_loss = 0.612373, iou_loss = 0.332818, total_loss = 0.945190 \n",
            " total_bbox = 725283, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.875028), count: 1, class_loss = 0.201882, iou_loss = 0.647161, total_loss = 0.849043 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774235), count: 19, class_loss = 1.627812, iou_loss = 8.333117, total_loss = 9.960928 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739422), count: 13, class_loss = 1.099605, iou_loss = 1.008024, total_loss = 2.107630 \n",
            " total_bbox = 725316, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.784262), count: 2, class_loss = 0.378150, iou_loss = 0.205051, total_loss = 0.583201 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730933), count: 10, class_loss = 1.536920, iou_loss = 0.369705, total_loss = 1.906625 \n",
            " total_bbox = 725328, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.881649), count: 1, class_loss = 0.084122, iou_loss = 0.144191, total_loss = 0.228314 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720941), count: 8, class_loss = 0.901168, iou_loss = 0.167199, total_loss = 1.068366 \n",
            " total_bbox = 725337, rewritten_bbox = 0.003585 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000021, iou_loss = 0.000000, total_loss = 0.000021 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.837643), count: 4, class_loss = 0.163130, iou_loss = 0.801793, total_loss = 0.964923 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722331), count: 10, class_loss = 0.678263, iou_loss = 0.300896, total_loss = 0.979159 \n",
            " total_bbox = 725351, rewritten_bbox = 0.003584 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.067125, iou_loss = 0.000000, total_loss = 0.067125 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747222), count: 10, class_loss = 0.485624, iou_loss = 0.240378, total_loss = 0.726003 \n",
            " total_bbox = 725361, rewritten_bbox = 0.003584 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.837498), count: 4, class_loss = 0.395675, iou_loss = 8.437953, total_loss = 8.833628 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747305), count: 12, class_loss = 1.530398, iou_loss = 4.430523, total_loss = 5.960921 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.718596), count: 10, class_loss = 0.318868, iou_loss = 0.318968, total_loss = 0.637836 \n",
            " total_bbox = 725387, rewritten_bbox = 0.003584 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.856443), count: 1, class_loss = 0.189875, iou_loss = 1.129690, total_loss = 1.319565 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.819921), count: 5, class_loss = 1.075681, iou_loss = 2.007730, total_loss = 3.083411 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781940), count: 14, class_loss = 0.602541, iou_loss = 0.614309, total_loss = 1.216849 \n",
            " total_bbox = 725407, rewritten_bbox = 0.003584 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.750325), count: 3, class_loss = 0.834199, iou_loss = 3.996268, total_loss = 4.830467 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718626), count: 24, class_loss = 5.409051, iou_loss = 6.812063, total_loss = 12.221114 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743311), count: 29, class_loss = 3.127407, iou_loss = 1.643279, total_loss = 4.770685 \n",
            " total_bbox = 725463, rewritten_bbox = 0.003584 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.709874), count: 1, class_loss = 0.287325, iou_loss = 0.758374, total_loss = 1.045699 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786112), count: 15, class_loss = 2.718094, iou_loss = 2.709766, total_loss = 5.427860 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738282), count: 24, class_loss = 2.948838, iou_loss = 1.035046, total_loss = 3.983883 \n",
            " total_bbox = 725503, rewritten_bbox = 0.003584 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.731512), count: 3, class_loss = 0.617435, iou_loss = 3.249424, total_loss = 3.866858 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763667), count: 22, class_loss = 3.468393, iou_loss = 9.766907, total_loss = 13.235299 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721657), count: 21, class_loss = 2.434721, iou_loss = 1.080594, total_loss = 3.515315 \n",
            " total_bbox = 725549, rewritten_bbox = 0.003583 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000475, iou_loss = 0.000000, total_loss = 0.000475 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789600), count: 15, class_loss = 3.916115, iou_loss = 2.914628, total_loss = 6.830743 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768126), count: 33, class_loss = 5.549728, iou_loss = 1.450754, total_loss = 7.000482 \n",
            " total_bbox = 725597, rewritten_bbox = 0.003583 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.732273), count: 22, class_loss = 3.794538, iou_loss = 46.079540, total_loss = 49.874077 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775773), count: 42, class_loss = 6.187253, iou_loss = 13.252100, total_loss = 19.439352 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750599), count: 30, class_loss = 5.025054, iou_loss = 2.237533, total_loss = 7.262587 \n",
            " total_bbox = 725691, rewritten_bbox = 0.003583 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1073/6000: loss=1.8 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1073: 1.835914, 2.366220 avg loss, 0.001000 rate, 6.750599 seconds, 68672 images, 9.221474 hours left\n",
            "Loaded: 0.000070 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.555947), count: 2, class_loss = 0.680309, iou_loss = 1.295246, total_loss = 1.975555 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768538), count: 16, class_loss = 4.436547, iou_loss = 5.180146, total_loss = 9.616693 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772339), count: 29, class_loss = 3.574123, iou_loss = 1.301783, total_loss = 4.875906 \n",
            " total_bbox = 725738, rewritten_bbox = 0.003583 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.523472), count: 2, class_loss = 0.682989, iou_loss = 0.772947, total_loss = 1.455935 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793719), count: 18, class_loss = 3.312083, iou_loss = 5.146108, total_loss = 8.458190 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779910), count: 17, class_loss = 3.225462, iou_loss = 1.280360, total_loss = 4.505822 \n",
            " total_bbox = 725775, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664536), count: 13, class_loss = 2.997691, iou_loss = 14.347417, total_loss = 17.345108 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.712404), count: 24, class_loss = 6.255065, iou_loss = 7.604003, total_loss = 13.859068 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.782927), count: 24, class_loss = 3.056928, iou_loss = 1.280103, total_loss = 4.337031 \n",
            " total_bbox = 725836, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.872780), count: 3, class_loss = 0.375450, iou_loss = 5.737299, total_loss = 6.112749 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.790811), count: 12, class_loss = 2.088300, iou_loss = 3.146594, total_loss = 5.234894 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707669), count: 12, class_loss = 3.068654, iou_loss = 0.604750, total_loss = 3.673404 \n",
            " total_bbox = 725863, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.002899, iou_loss = 0.000000, total_loss = 0.002899 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771636), count: 10, class_loss = 0.424352, iou_loss = 0.268400, total_loss = 0.692752 \n",
            " total_bbox = 725873, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.009667, iou_loss = 0.000000, total_loss = 0.009667 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.918106), count: 3, class_loss = 0.300188, iou_loss = 1.363013, total_loss = 1.663201 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737870), count: 10, class_loss = 1.108550, iou_loss = 0.297992, total_loss = 1.406542 \n",
            " total_bbox = 725886, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741832), count: 4, class_loss = 1.570380, iou_loss = 0.643469, total_loss = 2.213849 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.680757), count: 11, class_loss = 1.115245, iou_loss = 0.304471, total_loss = 1.419716 \n",
            " total_bbox = 725901, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.007145, iou_loss = 0.000000, total_loss = 0.007145 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.820129), count: 4, class_loss = 0.138679, iou_loss = 1.139591, total_loss = 1.278271 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751967), count: 9, class_loss = 0.236387, iou_loss = 0.229529, total_loss = 0.465916 \n",
            " total_bbox = 725914, rewritten_bbox = 0.003582 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.738847), count: 6, class_loss = 1.833610, iou_loss = 13.544470, total_loss = 15.378079 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763742), count: 35, class_loss = 4.593035, iou_loss = 12.326828, total_loss = 16.919863 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769657), count: 18, class_loss = 1.415242, iou_loss = 1.375963, total_loss = 2.791206 \n",
            " total_bbox = 725973, rewritten_bbox = 0.003581 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000468, iou_loss = 0.000000, total_loss = 0.000468 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762901), count: 12, class_loss = 4.073392, iou_loss = 3.695282, total_loss = 7.768674 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.704632), count: 9, class_loss = 1.299595, iou_loss = 0.829909, total_loss = 2.129504 \n",
            " total_bbox = 725994, rewritten_bbox = 0.003581 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.037474, iou_loss = 0.000000, total_loss = 0.037474 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.794197), count: 7, class_loss = 1.514270, iou_loss = 2.118582, total_loss = 3.632852 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757211), count: 14, class_loss = 1.805765, iou_loss = 0.691451, total_loss = 2.497216 \n",
            " total_bbox = 726015, rewritten_bbox = 0.003581 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.732145), count: 9, class_loss = 1.851741, iou_loss = 13.384902, total_loss = 15.236643 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713403), count: 27, class_loss = 5.517488, iou_loss = 6.507171, total_loss = 12.024659 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738792), count: 32, class_loss = 4.325010, iou_loss = 1.665298, total_loss = 5.990309 \n",
            " total_bbox = 726083, rewritten_bbox = 0.003581 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.698593), count: 18, class_loss = 3.589750, iou_loss = 42.656754, total_loss = 46.246502 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787763), count: 30, class_loss = 8.543797, iou_loss = 11.629910, total_loss = 20.173708 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757004), count: 30, class_loss = 4.601404, iou_loss = 1.656657, total_loss = 6.258061 \n",
            " total_bbox = 726161, rewritten_bbox = 0.003580 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.611710), count: 8, class_loss = 2.350571, iou_loss = 14.614239, total_loss = 16.964809 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.794629), count: 22, class_loss = 4.101734, iou_loss = 8.813799, total_loss = 12.915533 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774610), count: 20, class_loss = 1.486972, iou_loss = 1.191143, total_loss = 2.678115 \n",
            " total_bbox = 726211, rewritten_bbox = 0.003580 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.658858), count: 10, class_loss = 1.959799, iou_loss = 10.003273, total_loss = 11.963072 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.785998), count: 13, class_loss = 1.557304, iou_loss = 6.132601, total_loss = 7.689906 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756806), count: 7, class_loss = 1.313644, iou_loss = 0.248417, total_loss = 1.562061 \n",
            " total_bbox = 726241, rewritten_bbox = 0.003580 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.011717, iou_loss = 0.000000, total_loss = 0.011717 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.797663), count: 19, class_loss = 3.704266, iou_loss = 5.649116, total_loss = 9.353381 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742536), count: 17, class_loss = 1.953850, iou_loss = 1.147104, total_loss = 3.100954 \n",
            " total_bbox = 726277, rewritten_bbox = 0.003580 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1074/6000: loss=2.1 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1074: 2.130994, 2.342697 avg loss, 0.001000 rate, 6.745686 seconds, 68736 images, 9.221650 hours left\n",
            "Loaded: 0.000076 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.620263), count: 11, class_loss = 1.994383, iou_loss = 19.013210, total_loss = 21.007593 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767104), count: 26, class_loss = 3.304058, iou_loss = 8.910178, total_loss = 12.214236 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777977), count: 23, class_loss = 1.857121, iou_loss = 1.579972, total_loss = 3.437093 \n",
            " total_bbox = 726337, rewritten_bbox = 0.003580 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.629780), count: 23, class_loss = 5.996879, iou_loss = 42.774345, total_loss = 48.771225 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.754111), count: 42, class_loss = 6.304677, iou_loss = 15.241005, total_loss = 21.545683 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728174), count: 25, class_loss = 2.494820, iou_loss = 1.517229, total_loss = 4.012049 \n",
            " total_bbox = 726427, rewritten_bbox = 0.003579 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.586876), count: 15, class_loss = 3.249747, iou_loss = 10.994936, total_loss = 14.244682 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.698399), count: 39, class_loss = 6.950879, iou_loss = 11.390105, total_loss = 18.340984 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.714289), count: 24, class_loss = 3.402369, iou_loss = 1.666323, total_loss = 5.068692 \n",
            " total_bbox = 726505, rewritten_bbox = 0.003579 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000250, iou_loss = 0.000000, total_loss = 0.000250 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731965), count: 9, class_loss = 0.698675, iou_loss = 0.175667, total_loss = 0.874342 \n",
            " total_bbox = 726514, rewritten_bbox = 0.003579 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.735156), count: 2, class_loss = 0.028029, iou_loss = 0.243909, total_loss = 0.271938 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.852331), count: 8, class_loss = 0.936968, iou_loss = 0.340069, total_loss = 1.277037 \n",
            " total_bbox = 726524, rewritten_bbox = 0.003579 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.838682), count: 1, class_loss = 0.011579, iou_loss = 0.190441, total_loss = 0.202020 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755088), count: 10, class_loss = 1.898954, iou_loss = 0.322146, total_loss = 2.221100 \n",
            " total_bbox = 726535, rewritten_bbox = 0.003579 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.659632), count: 7, class_loss = 1.482143, iou_loss = 6.482304, total_loss = 7.964447 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.627541), count: 9, class_loss = 2.192508, iou_loss = 3.679797, total_loss = 5.872305 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770063), count: 8, class_loss = 1.060324, iou_loss = 0.197203, total_loss = 1.257527 \n",
            " total_bbox = 726559, rewritten_bbox = 0.003579 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.001958, iou_loss = 0.000000, total_loss = 0.001958 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787636), count: 11, class_loss = 0.245281, iou_loss = 0.342153, total_loss = 0.587434 \n",
            " total_bbox = 726570, rewritten_bbox = 0.003578 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.724893), count: 1, class_loss = 0.181357, iou_loss = 0.848578, total_loss = 1.029936 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786450), count: 22, class_loss = 3.455847, iou_loss = 5.356423, total_loss = 8.812270 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760118), count: 21, class_loss = 1.301047, iou_loss = 1.430352, total_loss = 2.731399 \n",
            " total_bbox = 726614, rewritten_bbox = 0.003578 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.698564), count: 21, class_loss = 4.547692, iou_loss = 39.153282, total_loss = 43.700974 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734287), count: 37, class_loss = 5.900206, iou_loss = 11.406694, total_loss = 17.306900 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778919), count: 22, class_loss = 2.136983, iou_loss = 1.630005, total_loss = 3.766988 \n",
            " total_bbox = 726694, rewritten_bbox = 0.003578 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.639194), count: 16, class_loss = 2.527790, iou_loss = 21.067883, total_loss = 23.595673 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734359), count: 37, class_loss = 7.042097, iou_loss = 10.417130, total_loss = 17.459227 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750799), count: 32, class_loss = 6.425547, iou_loss = 2.054343, total_loss = 8.479890 \n",
            " total_bbox = 726779, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000823, iou_loss = 0.000000, total_loss = 0.000823 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.688391), count: 3, class_loss = 1.236699, iou_loss = 0.484614, total_loss = 1.721313 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716428), count: 11, class_loss = 1.419854, iou_loss = 0.335155, total_loss = 1.755009 \n",
            " total_bbox = 726793, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.788478), count: 11, class_loss = 1.666516, iou_loss = 12.300965, total_loss = 13.967482 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761043), count: 39, class_loss = 2.276711, iou_loss = 12.076987, total_loss = 14.353698 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732421), count: 17, class_loss = 1.838493, iou_loss = 1.882789, total_loss = 3.721282 \n",
            " total_bbox = 726860, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733180), count: 3, class_loss = 0.336498, iou_loss = 0.239356, total_loss = 0.575854 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.796154), count: 9, class_loss = 0.476920, iou_loss = 0.492008, total_loss = 0.968928 \n",
            " total_bbox = 726872, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.056942, iou_loss = 0.000000, total_loss = 0.056942 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766464), count: 7, class_loss = 1.115508, iou_loss = 2.370095, total_loss = 3.485604 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.726442), count: 11, class_loss = 0.869683, iou_loss = 0.341242, total_loss = 1.210925 \n",
            " total_bbox = 726890, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000030, iou_loss = 0.000000, total_loss = 0.000030 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.884545), count: 1, class_loss = 0.021615, iou_loss = 0.172804, total_loss = 0.194419 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785890), count: 10, class_loss = 0.727991, iou_loss = 0.325637, total_loss = 1.053628 \n",
            " total_bbox = 726901, rewritten_bbox = 0.003577 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1075/6000: loss=1.9 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1075: 1.871856, 2.295613 avg loss, 0.001000 rate, 6.774993 seconds, 68800 images, 9.221738 hours left\n",
            "Loaded: 0.000065 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.099965, iou_loss = 0.000000, total_loss = 0.099965 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.701834), count: 10, class_loss = 1.501336, iou_loss = 0.270607, total_loss = 1.771943 \n",
            " total_bbox = 726911, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.702856), count: 5, class_loss = 1.327009, iou_loss = 8.297482, total_loss = 9.624491 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740890), count: 7, class_loss = 0.896408, iou_loss = 2.761228, total_loss = 3.657636 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712986), count: 10, class_loss = 0.472925, iou_loss = 0.346014, total_loss = 0.818939 \n",
            " total_bbox = 726933, rewritten_bbox = 0.003577 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.678411), count: 7, class_loss = 2.481992, iou_loss = 8.188900, total_loss = 10.670893 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760017), count: 17, class_loss = 3.485611, iou_loss = 6.316648, total_loss = 9.802258 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735297), count: 17, class_loss = 1.759456, iou_loss = 1.075875, total_loss = 2.835331 \n",
            " total_bbox = 726974, rewritten_bbox = 0.003576 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.225085), count: 1, class_loss = 0.273001, iou_loss = 0.372958, total_loss = 0.645959 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786007), count: 23, class_loss = 4.349807, iou_loss = 5.619992, total_loss = 9.969799 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746295), count: 34, class_loss = 4.632152, iou_loss = 1.722467, total_loss = 6.354619 \n",
            " total_bbox = 727032, rewritten_bbox = 0.003576 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.621813), count: 8, class_loss = 2.631458, iou_loss = 7.423849, total_loss = 10.055306 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.685181), count: 19, class_loss = 4.122193, iou_loss = 7.378507, total_loss = 11.500700 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771523), count: 18, class_loss = 1.940803, iou_loss = 1.275048, total_loss = 3.215852 \n",
            " total_bbox = 727077, rewritten_bbox = 0.003576 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.514078), count: 9, class_loss = 2.385742, iou_loss = 6.795586, total_loss = 9.181328 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.780604), count: 27, class_loss = 6.449409, iou_loss = 8.154671, total_loss = 14.604079 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755487), count: 26, class_loss = 2.568075, iou_loss = 1.580297, total_loss = 4.148372 \n",
            " total_bbox = 727139, rewritten_bbox = 0.003576 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.738631), count: 2, class_loss = 0.433735, iou_loss = 1.195443, total_loss = 1.629178 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789465), count: 20, class_loss = 4.073485, iou_loss = 4.326091, total_loss = 8.399576 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773923), count: 27, class_loss = 2.426426, iou_loss = 1.669521, total_loss = 4.095947 \n",
            " total_bbox = 727188, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759805), count: 8, class_loss = 2.999171, iou_loss = 11.098570, total_loss = 14.097741 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.709449), count: 33, class_loss = 6.559917, iou_loss = 8.489388, total_loss = 15.049304 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767451), count: 31, class_loss = 3.673680, iou_loss = 1.907667, total_loss = 5.581347 \n",
            " total_bbox = 727260, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000192, iou_loss = 0.000000, total_loss = 0.000192 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.809625), count: 3, class_loss = 0.319428, iou_loss = 0.552454, total_loss = 0.871882 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751731), count: 10, class_loss = 1.363949, iou_loss = 0.453077, total_loss = 1.817027 \n",
            " total_bbox = 727273, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782242), count: 1, class_loss = 0.103490, iou_loss = 0.135615, total_loss = 0.239106 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719097), count: 9, class_loss = 0.985000, iou_loss = 0.238070, total_loss = 1.223070 \n",
            " total_bbox = 727283, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.818477), count: 2, class_loss = 0.410670, iou_loss = 0.327067, total_loss = 0.737737 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773116), count: 9, class_loss = 0.442119, iou_loss = 0.288244, total_loss = 0.730364 \n",
            " total_bbox = 727294, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000073, iou_loss = 0.000000, total_loss = 0.000073 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793835), count: 2, class_loss = 0.050879, iou_loss = 0.343092, total_loss = 0.393971 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813301), count: 10, class_loss = 0.187527, iou_loss = 0.387769, total_loss = 0.575295 \n",
            " total_bbox = 727306, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.889129), count: 1, class_loss = 0.029058, iou_loss = 0.079432, total_loss = 0.108490 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.673115), count: 8, class_loss = 1.101051, iou_loss = 0.132998, total_loss = 1.234050 \n",
            " total_bbox = 727315, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.711024), count: 3, class_loss = 0.298896, iou_loss = 0.347749, total_loss = 0.646645 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.807380), count: 9, class_loss = 0.287864, iou_loss = 0.359447, total_loss = 0.647311 \n",
            " total_bbox = 727327, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000020, iou_loss = 0.000000, total_loss = 0.000020 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757124), count: 2, class_loss = 0.218488, iou_loss = 0.157761, total_loss = 0.376249 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.691717), count: 11, class_loss = 2.069396, iou_loss = 0.289162, total_loss = 2.358558 \n",
            " total_bbox = 727340, rewritten_bbox = 0.003575 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.675071), count: 6, class_loss = 1.792114, iou_loss = 5.370241, total_loss = 7.162355 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.808555), count: 21, class_loss = 6.199752, iou_loss = 7.421830, total_loss = 13.621582 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780024), count: 12, class_loss = 1.351287, iou_loss = 0.560748, total_loss = 1.912036 \n",
            " total_bbox = 727379, rewritten_bbox = 0.003574 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1076/6000: loss=1.6 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1076: 1.644554, 2.230507 avg loss, 0.001000 rate, 6.820738 seconds, 68864 images, 9.222208 hours left\n",
            "Loaded: 0.000047 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.576479), count: 2, class_loss = 0.574831, iou_loss = 1.806430, total_loss = 2.381261 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.764059), count: 21, class_loss = 3.254896, iou_loss = 5.378388, total_loss = 8.633284 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750173), count: 24, class_loss = 2.710349, iou_loss = 1.411583, total_loss = 4.121932 \n",
            " total_bbox = 727426, rewritten_bbox = 0.003574 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.632415), count: 10, class_loss = 2.148206, iou_loss = 12.473772, total_loss = 14.621978 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715492), count: 28, class_loss = 4.571302, iou_loss = 9.117893, total_loss = 13.689196 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728024), count: 24, class_loss = 2.306190, iou_loss = 1.609466, total_loss = 3.915656 \n",
            " total_bbox = 727488, rewritten_bbox = 0.003574 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.651416), count: 9, class_loss = 2.339203, iou_loss = 8.398832, total_loss = 10.738036 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773340), count: 36, class_loss = 6.175440, iou_loss = 13.063536, total_loss = 19.238976 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746097), count: 22, class_loss = 2.525234, iou_loss = 1.661473, total_loss = 4.186707 \n",
            " total_bbox = 727555, rewritten_bbox = 0.003574 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660264), count: 6, class_loss = 1.346089, iou_loss = 5.920592, total_loss = 7.266681 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745077), count: 29, class_loss = 4.595666, iou_loss = 8.354468, total_loss = 12.950134 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730640), count: 26, class_loss = 3.023388, iou_loss = 1.294297, total_loss = 4.317685 \n",
            " total_bbox = 727616, rewritten_bbox = 0.003573 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.565405), count: 7, class_loss = 1.519635, iou_loss = 7.340717, total_loss = 8.860353 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.794092), count: 25, class_loss = 4.269285, iou_loss = 8.542079, total_loss = 12.811364 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743218), count: 21, class_loss = 2.142883, iou_loss = 1.345341, total_loss = 3.488224 \n",
            " total_bbox = 727669, rewritten_bbox = 0.003573 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711489), count: 11, class_loss = 2.026657, iou_loss = 12.450516, total_loss = 14.477173 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.769904), count: 37, class_loss = 5.573135, iou_loss = 11.813984, total_loss = 17.387119 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.689444), count: 18, class_loss = 3.828527, iou_loss = 1.674789, total_loss = 5.503316 \n",
            " total_bbox = 727735, rewritten_bbox = 0.003573 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.538535), count: 1, class_loss = 0.388722, iou_loss = 0.078460, total_loss = 0.467182 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765144), count: 9, class_loss = 0.770740, iou_loss = 0.287462, total_loss = 1.058202 \n",
            " total_bbox = 727745, rewritten_bbox = 0.003573 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000020, iou_loss = 0.000000, total_loss = 0.000020 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.835290), count: 1, class_loss = 0.141670, iou_loss = 0.188876, total_loss = 0.330546 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743153), count: 10, class_loss = 1.045374, iou_loss = 0.264811, total_loss = 1.310185 \n",
            " total_bbox = 727756, rewritten_bbox = 0.003573 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.524698, iou_loss = 0.000000, total_loss = 0.524698 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742650), count: 21, class_loss = 4.585782, iou_loss = 4.290730, total_loss = 8.876513 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.702997), count: 32, class_loss = 4.496282, iou_loss = 1.655703, total_loss = 6.151985 \n",
            " total_bbox = 727809, rewritten_bbox = 0.003572 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.697117), count: 2, class_loss = 1.229470, iou_loss = 2.652207, total_loss = 3.881676 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736436), count: 21, class_loss = 5.665463, iou_loss = 5.002927, total_loss = 10.668390 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728860), count: 34, class_loss = 5.908170, iou_loss = 1.662376, total_loss = 7.570546 \n",
            " total_bbox = 727866, rewritten_bbox = 0.003572 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.578986), count: 22, class_loss = 8.168822, iou_loss = 31.140514, total_loss = 39.309338 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723949), count: 44, class_loss = 7.957008, iou_loss = 13.353117, total_loss = 21.310125 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.680639), count: 25, class_loss = 3.827949, iou_loss = 1.711540, total_loss = 5.539489 \n",
            " total_bbox = 727957, rewritten_bbox = 0.003572 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.765574), count: 6, class_loss = 1.505038, iou_loss = 16.097136, total_loss = 17.602175 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748181), count: 26, class_loss = 4.850232, iou_loss = 7.862545, total_loss = 12.712777 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730244), count: 29, class_loss = 2.786448, iou_loss = 1.328648, total_loss = 4.115096 \n",
            " total_bbox = 728018, rewritten_bbox = 0.003571 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660082), count: 7, class_loss = 1.917767, iou_loss = 6.386859, total_loss = 8.304626 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773750), count: 28, class_loss = 4.472820, iou_loss = 7.142705, total_loss = 11.615525 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744596), count: 27, class_loss = 1.946118, iou_loss = 1.938411, total_loss = 3.884530 \n",
            " total_bbox = 728080, rewritten_bbox = 0.003571 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.572064), count: 6, class_loss = 1.398960, iou_loss = 8.632988, total_loss = 10.031948 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.769177), count: 22, class_loss = 4.660477, iou_loss = 6.793865, total_loss = 11.454342 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733680), count: 31, class_loss = 3.066990, iou_loss = 1.580508, total_loss = 4.647498 \n",
            " total_bbox = 728139, rewritten_bbox = 0.003571 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.687453), count: 3, class_loss = 1.157975, iou_loss = 3.575496, total_loss = 4.733471 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752231), count: 47, class_loss = 4.844593, iou_loss = 12.188303, total_loss = 17.032896 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761627), count: 34, class_loss = 2.682045, iou_loss = 2.445370, total_loss = 5.127416 \n",
            " total_bbox = 728223, rewritten_bbox = 0.003570 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.643858), count: 16, class_loss = 3.167026, iou_loss = 26.929846, total_loss = 30.096872 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753563), count: 36, class_loss = 5.169014, iou_loss = 10.273123, total_loss = 15.442137 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747515), count: 28, class_loss = 2.737641, iou_loss = 2.143679, total_loss = 4.881320 \n",
            " total_bbox = 728303, rewritten_bbox = 0.003570 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1077/6000: loss=3.0 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1077: 3.046471, 2.312103 avg loss, 0.001000 rate, 7.083792 seconds, 68928 images, 9.223279 hours left\n",
            "Loaded: 0.000064 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746114), count: 5, class_loss = 1.047476, iou_loss = 0.907761, total_loss = 1.955236 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746141), count: 14, class_loss = 2.265564, iou_loss = 0.530910, total_loss = 2.796474 \n",
            " total_bbox = 728322, rewritten_bbox = 0.003570 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004409, iou_loss = 0.000000, total_loss = 0.004409 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744096), count: 8, class_loss = 1.512524, iou_loss = 1.787648, total_loss = 3.300172 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740683), count: 12, class_loss = 1.428280, iou_loss = 0.537826, total_loss = 1.966106 \n",
            " total_bbox = 728342, rewritten_bbox = 0.003570 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.719035), count: 15, class_loss = 5.330393, iou_loss = 22.360470, total_loss = 27.690863 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755767), count: 23, class_loss = 5.214876, iou_loss = 10.359975, total_loss = 15.574851 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713318), count: 11, class_loss = 1.333920, iou_loss = 0.549480, total_loss = 1.883400 \n",
            " total_bbox = 728391, rewritten_bbox = 0.003570 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001715, iou_loss = 0.000000, total_loss = 0.001715 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759493), count: 16, class_loss = 2.399608, iou_loss = 3.170274, total_loss = 5.569882 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741663), count: 27, class_loss = 3.571079, iou_loss = 1.685929, total_loss = 5.257008 \n",
            " total_bbox = 728434, rewritten_bbox = 0.003569 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.482634), count: 3, class_loss = 0.784841, iou_loss = 5.390568, total_loss = 6.175409 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749856), count: 16, class_loss = 3.918610, iou_loss = 3.489648, total_loss = 7.408258 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789904), count: 33, class_loss = 4.422135, iou_loss = 1.701323, total_loss = 6.123458 \n",
            " total_bbox = 728486, rewritten_bbox = 0.003569 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.524223), count: 2, class_loss = 0.335377, iou_loss = 0.912115, total_loss = 1.247492 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739125), count: 27, class_loss = 3.892433, iou_loss = 7.234051, total_loss = 11.126484 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747140), count: 24, class_loss = 2.396458, iou_loss = 1.781249, total_loss = 4.177707 \n",
            " total_bbox = 728539, rewritten_bbox = 0.003569 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756799), count: 1, class_loss = 0.072708, iou_loss = 0.121607, total_loss = 0.194315 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748964), count: 10, class_loss = 0.387972, iou_loss = 0.326755, total_loss = 0.714727 \n",
            " total_bbox = 728550, rewritten_bbox = 0.003569 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.717710), count: 8, class_loss = 2.023197, iou_loss = 10.612486, total_loss = 12.635683 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.785215), count: 8, class_loss = 2.705920, iou_loss = 3.375834, total_loss = 6.081754 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745965), count: 7, class_loss = 1.295552, iou_loss = 0.174002, total_loss = 1.469554 \n",
            " total_bbox = 728573, rewritten_bbox = 0.003569 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.412379), count: 5, class_loss = 1.950288, iou_loss = 16.855938, total_loss = 18.806227 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767804), count: 32, class_loss = 6.946510, iou_loss = 9.144657, total_loss = 16.091167 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768021), count: 31, class_loss = 3.466185, iou_loss = 2.421051, total_loss = 5.887235 \n",
            " total_bbox = 728641, rewritten_bbox = 0.003568 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.620228), count: 10, class_loss = 3.084866, iou_loss = 11.786148, total_loss = 14.871014 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719380), count: 30, class_loss = 5.536867, iou_loss = 7.954980, total_loss = 13.491847 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.784549), count: 29, class_loss = 2.736675, iou_loss = 1.632644, total_loss = 4.369318 \n",
            " total_bbox = 728710, rewritten_bbox = 0.003568 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.687276), count: 7, class_loss = 1.951485, iou_loss = 5.483479, total_loss = 7.434965 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749380), count: 32, class_loss = 5.251408, iou_loss = 9.569832, total_loss = 14.821239 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.784320), count: 29, class_loss = 2.220670, iou_loss = 2.169064, total_loss = 4.389733 \n",
            " total_bbox = 728778, rewritten_bbox = 0.003568 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.632298), count: 13, class_loss = 3.329401, iou_loss = 12.626335, total_loss = 15.955736 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.721140), count: 28, class_loss = 4.923670, iou_loss = 8.810396, total_loss = 13.734066 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.821030), count: 27, class_loss = 1.959105, iou_loss = 1.384390, total_loss = 3.343495 \n",
            " total_bbox = 728846, rewritten_bbox = 0.003567 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.724832), count: 7, class_loss = 2.273118, iou_loss = 12.737654, total_loss = 15.010772 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760092), count: 22, class_loss = 4.461396, iou_loss = 7.080508, total_loss = 11.541904 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754339), count: 27, class_loss = 2.435172, iou_loss = 1.239597, total_loss = 3.674769 \n",
            " total_bbox = 728902, rewritten_bbox = 0.003567 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.028775, iou_loss = 0.000000, total_loss = 0.028775 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715904), count: 19, class_loss = 2.202194, iou_loss = 5.197126, total_loss = 7.399320 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.718084), count: 22, class_loss = 2.628567, iou_loss = 1.441257, total_loss = 4.069824 \n",
            " total_bbox = 728943, rewritten_bbox = 0.003567 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.609720), count: 3, class_loss = 1.144086, iou_loss = 8.883968, total_loss = 10.028054 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772829), count: 16, class_loss = 2.826463, iou_loss = 5.220224, total_loss = 8.046687 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753150), count: 21, class_loss = 1.631009, iou_loss = 1.024168, total_loss = 2.655178 \n",
            " total_bbox = 728983, rewritten_bbox = 0.003567 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.595476), count: 4, class_loss = 1.203464, iou_loss = 6.465226, total_loss = 7.668690 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.728999), count: 28, class_loss = 4.968806, iou_loss = 7.897559, total_loss = 12.866364 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729862), count: 29, class_loss = 3.141165, iou_loss = 1.626286, total_loss = 4.767451 \n",
            " total_bbox = 729044, rewritten_bbox = 0.003566 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1078/6000: loss=2.5 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1078: 2.476253, 2.328518 avg loss, 0.001000 rate, 6.800832 seconds, 68992 images, 9.227918 hours left\n",
            "Loaded: 0.000073 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.527035), count: 2, class_loss = 0.543148, iou_loss = 0.989859, total_loss = 1.533008 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.754096), count: 22, class_loss = 5.012590, iou_loss = 6.086128, total_loss = 11.098718 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741290), count: 27, class_loss = 4.404339, iou_loss = 2.051066, total_loss = 6.455405 \n",
            " total_bbox = 729095, rewritten_bbox = 0.003566 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.519889), count: 7, class_loss = 1.302585, iou_loss = 17.622917, total_loss = 18.925503 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.698808), count: 22, class_loss = 4.954778, iou_loss = 5.792168, total_loss = 10.746946 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732508), count: 17, class_loss = 3.239606, iou_loss = 1.080225, total_loss = 4.319831 \n",
            " total_bbox = 729141, rewritten_bbox = 0.003566 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.827431), count: 2, class_loss = 0.498338, iou_loss = 2.609695, total_loss = 3.108032 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.780906), count: 26, class_loss = 5.445019, iou_loss = 8.069603, total_loss = 13.514623 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.677130), count: 25, class_loss = 3.884178, iou_loss = 1.561689, total_loss = 5.445867 \n",
            " total_bbox = 729194, rewritten_bbox = 0.003566 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.520176), count: 4, class_loss = 1.384266, iou_loss = 8.570442, total_loss = 9.954708 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739580), count: 29, class_loss = 6.109456, iou_loss = 7.605854, total_loss = 13.715310 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775994), count: 35, class_loss = 3.348216, iou_loss = 2.115108, total_loss = 5.463324 \n",
            " total_bbox = 729262, rewritten_bbox = 0.003565 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.796797), count: 4, class_loss = 0.227062, iou_loss = 7.030782, total_loss = 7.257844 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778720), count: 25, class_loss = 4.106718, iou_loss = 8.517023, total_loss = 12.623741 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755909), count: 29, class_loss = 4.156548, iou_loss = 1.397425, total_loss = 5.553973 \n",
            " total_bbox = 729320, rewritten_bbox = 0.003565 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.636813), count: 2, class_loss = 0.516290, iou_loss = 2.205157, total_loss = 2.721447 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763840), count: 16, class_loss = 3.352091, iou_loss = 4.149418, total_loss = 7.501509 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750448), count: 23, class_loss = 1.738210, iou_loss = 1.508131, total_loss = 3.246341 \n",
            " total_bbox = 729361, rewritten_bbox = 0.003565 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.815858), count: 3, class_loss = 0.366279, iou_loss = 0.708898, total_loss = 1.075177 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757788), count: 8, class_loss = 1.267269, iou_loss = 0.312516, total_loss = 1.579785 \n",
            " total_bbox = 729372, rewritten_bbox = 0.003565 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690839), count: 79, class_loss = 9.791967, iou_loss = 132.215042, total_loss = 142.007004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.608543), count: 57, class_loss = 5.990617, iou_loss = 18.636570, total_loss = 24.627188 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800558), count: 6, class_loss = 0.469976, iou_loss = 0.276926, total_loss = 0.746902 \n",
            " total_bbox = 729514, rewritten_bbox = 0.003564 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.793664), count: 1, class_loss = 0.277788, iou_loss = 1.159118, total_loss = 1.436906 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.679508), count: 4, class_loss = 0.849815, iou_loss = 0.886812, total_loss = 1.736627 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736310), count: 7, class_loss = 0.331793, iou_loss = 0.223520, total_loss = 0.555312 \n",
            " total_bbox = 729526, rewritten_bbox = 0.003564 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.820015), count: 1, class_loss = 0.140087, iou_loss = 0.573891, total_loss = 0.713978 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761165), count: 5, class_loss = 0.381914, iou_loss = 1.188568, total_loss = 1.570482 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773243), count: 7, class_loss = 0.334848, iou_loss = 0.458987, total_loss = 0.793835 \n",
            " total_bbox = 729539, rewritten_bbox = 0.003564 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.688849), count: 4, class_loss = 1.074224, iou_loss = 4.648284, total_loss = 5.722508 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761451), count: 14, class_loss = 1.532919, iou_loss = 5.869194, total_loss = 7.402112 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.697166), count: 9, class_loss = 1.384957, iou_loss = 0.421823, total_loss = 1.806780 \n",
            " total_bbox = 729566, rewritten_bbox = 0.003564 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722232), count: 6, class_loss = 0.973471, iou_loss = 6.733146, total_loss = 7.706617 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762666), count: 19, class_loss = 2.335726, iou_loss = 7.029064, total_loss = 9.364790 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707490), count: 10, class_loss = 0.901951, iou_loss = 0.411943, total_loss = 1.313894 \n",
            " total_bbox = 729601, rewritten_bbox = 0.003564 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000014, iou_loss = 0.000000, total_loss = 0.000014 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.809838), count: 1, class_loss = 0.259903, iou_loss = 0.086722, total_loss = 0.346625 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764126), count: 10, class_loss = 1.272716, iou_loss = 0.389905, total_loss = 1.662621 \n",
            " total_bbox = 729611, rewritten_bbox = 0.003564 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.448673), count: 1, class_loss = 0.197272, iou_loss = 0.376392, total_loss = 0.573664 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.797129), count: 19, class_loss = 2.453360, iou_loss = 5.088100, total_loss = 7.541461 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.819688), count: 20, class_loss = 1.715782, iou_loss = 1.874475, total_loss = 3.590257 \n",
            " total_bbox = 729651, rewritten_bbox = 0.003563 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.815186), count: 6, class_loss = 0.704377, iou_loss = 10.709286, total_loss = 11.413663 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767510), count: 29, class_loss = 4.608637, iou_loss = 7.280154, total_loss = 11.888791 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772346), count: 27, class_loss = 2.114111, iou_loss = 1.804296, total_loss = 3.918407 \n",
            " total_bbox = 729713, rewritten_bbox = 0.003563 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.522043), count: 9, class_loss = 2.639578, iou_loss = 9.148207, total_loss = 11.787785 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.813798), count: 27, class_loss = 4.276865, iou_loss = 10.207470, total_loss = 14.484335 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743348), count: 25, class_loss = 2.830420, iou_loss = 1.418901, total_loss = 4.249321 \n",
            " total_bbox = 729774, rewritten_bbox = 0.003563 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1079/6000: loss=2.2 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1079: 2.206710, 2.316337 avg loss, 0.001000 rate, 6.700242 seconds, 69056 images, 9.228622 hours left\n",
            "Loaded: 0.000073 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.015335, iou_loss = 0.000000, total_loss = 0.015335 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715427), count: 1, class_loss = 0.226840, iou_loss = 0.126702, total_loss = 0.353542 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.809274), count: 10, class_loss = 0.704257, iou_loss = 0.458647, total_loss = 1.162903 \n",
            " total_bbox = 729785, rewritten_bbox = 0.003563 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.853968), count: 3, class_loss = 0.247604, iou_loss = 3.050300, total_loss = 3.297904 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.806935), count: 13, class_loss = 0.821623, iou_loss = 5.439099, total_loss = 6.260722 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729662), count: 12, class_loss = 0.922465, iou_loss = 0.720266, total_loss = 1.642731 \n",
            " total_bbox = 729813, rewritten_bbox = 0.003563 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.806272), count: 6, class_loss = 0.736073, iou_loss = 11.405647, total_loss = 12.141720 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743922), count: 22, class_loss = 0.989168, iou_loss = 7.107183, total_loss = 8.096352 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.659332), count: 13, class_loss = 1.350861, iou_loss = 1.136918, total_loss = 2.487780 \n",
            " total_bbox = 729854, rewritten_bbox = 0.003562 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.761142), count: 4, class_loss = 0.368796, iou_loss = 6.573577, total_loss = 6.942373 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758821), count: 15, class_loss = 1.547133, iou_loss = 5.676218, total_loss = 7.223351 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734686), count: 11, class_loss = 0.425210, iou_loss = 0.430737, total_loss = 0.855947 \n",
            " total_bbox = 729884, rewritten_bbox = 0.003562 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.043561, iou_loss = 0.000000, total_loss = 0.043561 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.818575), count: 10, class_loss = 1.177373, iou_loss = 0.305803, total_loss = 1.483176 \n",
            " total_bbox = 729894, rewritten_bbox = 0.003562 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001010, iou_loss = 0.000000, total_loss = 0.001010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738175), count: 11, class_loss = 2.220494, iou_loss = 1.527602, total_loss = 3.748096 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773152), count: 23, class_loss = 3.111697, iou_loss = 1.025613, total_loss = 4.137310 \n",
            " total_bbox = 729928, rewritten_bbox = 0.003562 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.723647), count: 13, class_loss = 3.857820, iou_loss = 23.775862, total_loss = 27.633682 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.715847), count: 31, class_loss = 7.065680, iou_loss = 7.557461, total_loss = 14.623141 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751189), count: 22, class_loss = 3.390631, iou_loss = 1.357689, total_loss = 4.748320 \n",
            " total_bbox = 729994, rewritten_bbox = 0.003562 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.500498), count: 2, class_loss = 0.676748, iou_loss = 1.320990, total_loss = 1.997738 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730863), count: 20, class_loss = 4.871028, iou_loss = 4.482986, total_loss = 9.354014 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751246), count: 29, class_loss = 3.467424, iou_loss = 2.223624, total_loss = 5.691048 \n",
            " total_bbox = 730045, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000029, iou_loss = 0.000000, total_loss = 0.000029 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.900946), count: 4, class_loss = 0.324164, iou_loss = 0.643200, total_loss = 0.967363 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777324), count: 9, class_loss = 1.121194, iou_loss = 0.507136, total_loss = 1.628331 \n",
            " total_bbox = 730058, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.807702), count: 3, class_loss = 0.111043, iou_loss = 0.561211, total_loss = 0.672254 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.709281), count: 10, class_loss = 1.479133, iou_loss = 0.420046, total_loss = 1.899178 \n",
            " total_bbox = 730071, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.817656), count: 2, class_loss = 0.680298, iou_loss = 2.762342, total_loss = 3.442640 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768404), count: 35, class_loss = 5.846944, iou_loss = 11.018240, total_loss = 16.865185 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728655), count: 20, class_loss = 2.207837, iou_loss = 1.428863, total_loss = 3.636700 \n",
            " total_bbox = 730128, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000023, iou_loss = 0.000000, total_loss = 0.000023 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.802737), count: 1, class_loss = 0.009195, iou_loss = 0.139884, total_loss = 0.149079 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779989), count: 8, class_loss = 0.828891, iou_loss = 0.201814, total_loss = 1.030704 \n",
            " total_bbox = 730137, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.104867), count: 1, class_loss = 0.276661, iou_loss = 5.118746, total_loss = 5.395407 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.814023), count: 6, class_loss = 1.644488, iou_loss = 1.377386, total_loss = 3.021874 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742366), count: 16, class_loss = 1.440606, iou_loss = 0.698923, total_loss = 2.139529 \n",
            " total_bbox = 730160, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000704, iou_loss = 0.000000, total_loss = 0.000704 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743325), count: 12, class_loss = 2.559062, iou_loss = 2.309700, total_loss = 4.868762 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737351), count: 15, class_loss = 1.399562, iou_loss = 0.889227, total_loss = 2.288789 \n",
            " total_bbox = 730187, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.669359), count: 1, class_loss = 0.228474, iou_loss = 0.450842, total_loss = 0.679316 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783913), count: 4, class_loss = 0.602548, iou_loss = 1.535780, total_loss = 2.138327 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756188), count: 9, class_loss = 0.844835, iou_loss = 0.539528, total_loss = 1.384363 \n",
            " total_bbox = 730201, rewritten_bbox = 0.003561 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.828928), count: 2, class_loss = 0.309482, iou_loss = 0.360148, total_loss = 0.669630 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813716), count: 11, class_loss = 0.607004, iou_loss = 0.527484, total_loss = 1.134488 \n",
            " total_bbox = 730214, rewritten_bbox = 0.003561 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1080/6000: loss=1.3 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1080: 1.269512, 2.211655 avg loss, 0.001000 rate, 6.727159 seconds, 69120 images, 9.227926 hours left\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 416 x 416 \n",
            " try to allocate additional workspace_size = 111.05 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 1.212205 seconds - performance bottleneck on CPU or Disk HDD/SSD\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690721), count: 20, class_loss = 6.153771, iou_loss = 29.772961, total_loss = 35.926731 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748871), count: 41, class_loss = 8.204395, iou_loss = 11.585743, total_loss = 19.790138 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.708774), count: 21, class_loss = 5.195925, iou_loss = 1.074566, total_loss = 6.270491 \n",
            " total_bbox = 730296, rewritten_bbox = 0.003560 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.651314), count: 7, class_loss = 0.975697, iou_loss = 15.708120, total_loss = 16.683817 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.830645), count: 34, class_loss = 2.547324, iou_loss = 7.235777, total_loss = 9.783101 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771741), count: 29, class_loss = 1.108905, iou_loss = 1.233133, total_loss = 2.342038 \n",
            " total_bbox = 730366, rewritten_bbox = 0.003560 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.681066), count: 10, class_loss = 2.024804, iou_loss = 10.194729, total_loss = 12.219533 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727956), count: 36, class_loss = 7.580130, iou_loss = 7.692490, total_loss = 15.272620 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740435), count: 23, class_loss = 2.670233, iou_loss = 1.015623, total_loss = 3.685856 \n",
            " total_bbox = 730435, rewritten_bbox = 0.003560 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.783427), count: 30, class_loss = 0.871463, iou_loss = 68.975456, total_loss = 69.846916 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.657616), count: 14, class_loss = 2.062835, iou_loss = 3.666530, total_loss = 5.729365 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764089), count: 8, class_loss = 0.099880, iou_loss = 0.363665, total_loss = 0.463544 \n",
            " total_bbox = 730487, rewritten_bbox = 0.003559 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.870264), count: 3, class_loss = 0.256432, iou_loss = 0.124252, total_loss = 0.380685 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.699327), count: 10, class_loss = 1.170560, iou_loss = 0.334096, total_loss = 1.504656 \n",
            " total_bbox = 730500, rewritten_bbox = 0.003559 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.696369), count: 6, class_loss = 1.388622, iou_loss = 6.262790, total_loss = 7.651412 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792121), count: 18, class_loss = 2.379390, iou_loss = 3.851542, total_loss = 6.230932 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789798), count: 20, class_loss = 1.393912, iou_loss = 0.849154, total_loss = 2.243067 \n",
            " total_bbox = 730544, rewritten_bbox = 0.003559 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.544953), count: 3, class_loss = 0.850489, iou_loss = 2.173449, total_loss = 3.023938 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.777077), count: 16, class_loss = 2.638090, iou_loss = 2.911428, total_loss = 5.549518 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790009), count: 22, class_loss = 2.162141, iou_loss = 1.008487, total_loss = 3.170628 \n",
            " total_bbox = 730585, rewritten_bbox = 0.003559 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.691726), count: 7, class_loss = 1.867924, iou_loss = 7.300746, total_loss = 9.168671 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740749), count: 28, class_loss = 5.429620, iou_loss = 8.817719, total_loss = 14.247339 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739809), count: 17, class_loss = 2.204956, iou_loss = 0.830438, total_loss = 3.035394 \n",
            " total_bbox = 730637, rewritten_bbox = 0.003559 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000014, iou_loss = 0.000000, total_loss = 0.000014 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.777670), count: 2, class_loss = 0.290213, iou_loss = 0.226820, total_loss = 0.517034 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757468), count: 11, class_loss = 0.996161, iou_loss = 0.311679, total_loss = 1.307840 \n",
            " total_bbox = 730650, rewritten_bbox = 0.003558 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000054, iou_loss = 0.000000, total_loss = 0.000054 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.854662), count: 2, class_loss = 0.070270, iou_loss = 0.194246, total_loss = 0.264516 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750736), count: 9, class_loss = 0.496471, iou_loss = 0.209117, total_loss = 0.705588 \n",
            " total_bbox = 730661, rewritten_bbox = 0.003558 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.782281), count: 1, class_loss = 0.636805, iou_loss = 0.457877, total_loss = 1.094682 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761384), count: 7, class_loss = 1.783033, iou_loss = 0.793071, total_loss = 2.576103 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717872), count: 14, class_loss = 2.350413, iou_loss = 0.535850, total_loss = 2.886263 \n",
            " total_bbox = 730683, rewritten_bbox = 0.003558 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.739709), count: 18, class_loss = 2.811639, iou_loss = 15.663636, total_loss = 18.475275 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.711045), count: 50, class_loss = 8.486389, iou_loss = 11.927650, total_loss = 20.414040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.696235), count: 31, class_loss = 4.006543, iou_loss = 1.129597, total_loss = 5.136140 \n",
            " total_bbox = 730782, rewritten_bbox = 0.003558 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.638805), count: 4, class_loss = 1.313397, iou_loss = 2.945197, total_loss = 4.258594 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789584), count: 19, class_loss = 4.533782, iou_loss = 3.159303, total_loss = 7.693085 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.802321), count: 27, class_loss = 2.934678, iou_loss = 1.551231, total_loss = 4.485909 \n",
            " total_bbox = 730832, rewritten_bbox = 0.003558 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.864126), count: 1, class_loss = 0.633462, iou_loss = 1.114191, total_loss = 1.747653 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787371), count: 15, class_loss = 2.493064, iou_loss = 3.390391, total_loss = 5.883455 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748785), count: 20, class_loss = 1.492048, iou_loss = 0.896460, total_loss = 2.388509 \n",
            " total_bbox = 730868, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765029), count: 3, class_loss = 0.628141, iou_loss = 0.338341, total_loss = 0.966482 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803038), count: 10, class_loss = 1.774740, iou_loss = 0.396668, total_loss = 2.171407 \n",
            " total_bbox = 730881, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000017, iou_loss = 0.000000, total_loss = 0.000017 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767528), count: 3, class_loss = 0.081872, iou_loss = 0.569707, total_loss = 0.651579 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.817963), count: 10, class_loss = 0.221272, iou_loss = 0.377520, total_loss = 0.598791 \n",
            " total_bbox = 730894, rewritten_bbox = 0.003557 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1081/6000: loss=2.1 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1081: 2.072095, 2.197699 avg loss, 0.001000 rate, 5.344909 seconds, 69184 images, 9.227586 hours left\n",
            "Loaded: 0.000070 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.839307), count: 10, class_loss = 0.375135, iou_loss = 19.836739, total_loss = 20.211874 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.672243), count: 7, class_loss = 0.339501, iou_loss = 2.111028, total_loss = 2.450529 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777872), count: 8, class_loss = 0.213741, iou_loss = 0.247668, total_loss = 0.461409 \n",
            " total_bbox = 730919, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.811641), count: 7, class_loss = 1.285992, iou_loss = 1.162562, total_loss = 2.448554 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766321), count: 12, class_loss = 1.231962, iou_loss = 0.392324, total_loss = 1.624286 \n",
            " total_bbox = 730938, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.133029, iou_loss = 0.000000, total_loss = 0.133029 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.784282), count: 11, class_loss = 0.370308, iou_loss = 0.239185, total_loss = 0.609493 \n",
            " total_bbox = 730949, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.669033), count: 2, class_loss = 0.489322, iou_loss = 1.550379, total_loss = 2.039701 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.693354), count: 6, class_loss = 0.775212, iou_loss = 1.129210, total_loss = 1.904422 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813974), count: 7, class_loss = 1.096812, iou_loss = 0.200040, total_loss = 1.296852 \n",
            " total_bbox = 730964, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.802218), count: 7, class_loss = 0.474291, iou_loss = 1.316684, total_loss = 1.790975 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736158), count: 8, class_loss = 0.111932, iou_loss = 0.306491, total_loss = 0.418422 \n",
            " total_bbox = 730979, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.859249), count: 1, class_loss = 0.252356, iou_loss = 1.021109, total_loss = 1.273465 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.813121), count: 12, class_loss = 2.333917, iou_loss = 2.359170, total_loss = 4.693087 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755658), count: 17, class_loss = 1.485700, iou_loss = 0.597777, total_loss = 2.083477 \n",
            " total_bbox = 731009, rewritten_bbox = 0.003557 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.739390), count: 15, class_loss = 3.693874, iou_loss = 32.418903, total_loss = 36.112778 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771990), count: 26, class_loss = 5.394300, iou_loss = 8.151368, total_loss = 13.545668 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765641), count: 23, class_loss = 1.636404, iou_loss = 0.971538, total_loss = 2.607942 \n",
            " total_bbox = 731073, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.497962), count: 2, class_loss = 0.897531, iou_loss = 7.426742, total_loss = 8.324273 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756212), count: 16, class_loss = 3.289964, iou_loss = 4.444952, total_loss = 7.734915 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800978), count: 18, class_loss = 1.414651, iou_loss = 0.746875, total_loss = 2.161526 \n",
            " total_bbox = 731109, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.014396, iou_loss = 0.000000, total_loss = 0.014396 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736569), count: 6, class_loss = 1.307222, iou_loss = 0.825770, total_loss = 2.132993 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753216), count: 12, class_loss = 1.340521, iou_loss = 0.436045, total_loss = 1.776566 \n",
            " total_bbox = 731127, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000142, iou_loss = 0.000000, total_loss = 0.000142 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.792590), count: 10, class_loss = 0.973953, iou_loss = 0.216888, total_loss = 1.190842 \n",
            " total_bbox = 731137, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.856192), count: 3, class_loss = 0.460479, iou_loss = 0.333814, total_loss = 0.794294 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774257), count: 8, class_loss = 0.935373, iou_loss = 0.272151, total_loss = 1.207524 \n",
            " total_bbox = 731148, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.665482), count: 1, class_loss = 0.260546, iou_loss = 0.090062, total_loss = 0.350607 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.806723), count: 11, class_loss = 0.827957, iou_loss = 0.321519, total_loss = 1.149476 \n",
            " total_bbox = 731160, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000008, iou_loss = 0.000000, total_loss = 0.000008 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.639147), count: 2, class_loss = 0.646748, iou_loss = 0.146898, total_loss = 0.793645 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752778), count: 10, class_loss = 1.038829, iou_loss = 0.280624, total_loss = 1.319453 \n",
            " total_bbox = 731172, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000011, iou_loss = 0.000000, total_loss = 0.000011 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.832647), count: 3, class_loss = 0.034139, iou_loss = 0.760774, total_loss = 0.794912 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795013), count: 8, class_loss = 0.999488, iou_loss = 0.208568, total_loss = 1.208056 \n",
            " total_bbox = 731183, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722931), count: 3, class_loss = 0.208046, iou_loss = 0.522059, total_loss = 0.730106 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764879), count: 8, class_loss = 0.614493, iou_loss = 0.141529, total_loss = 0.756021 \n",
            " total_bbox = 731194, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.014113, iou_loss = 0.000000, total_loss = 0.014113 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.834290), count: 2, class_loss = 0.287507, iou_loss = 0.233346, total_loss = 0.520853 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785317), count: 10, class_loss = 1.387501, iou_loss = 0.282163, total_loss = 1.669664 \n",
            " total_bbox = 731206, rewritten_bbox = 0.003556 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1082/6000: loss=0.8 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1082: 0.808203, 2.058749 avg loss, 0.001000 rate, 5.294485 seconds, 69248 images, 9.224906 hours left\n",
            "Loaded: 0.000063 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.721674), count: 3, class_loss = 0.603393, iou_loss = 0.412839, total_loss = 1.016232 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755546), count: 10, class_loss = 0.491611, iou_loss = 0.256480, total_loss = 0.748091 \n",
            " total_bbox = 731219, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744560), count: 1, class_loss = 0.069901, iou_loss = 0.112742, total_loss = 0.182643 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754175), count: 9, class_loss = 1.014051, iou_loss = 0.151521, total_loss = 1.165572 \n",
            " total_bbox = 731229, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.872721), count: 1, class_loss = 0.263687, iou_loss = 0.464886, total_loss = 0.728574 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.750112), count: 16, class_loss = 2.482237, iou_loss = 2.900573, total_loss = 5.382810 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755441), count: 13, class_loss = 1.410376, iou_loss = 0.617087, total_loss = 2.027462 \n",
            " total_bbox = 731259, rewritten_bbox = 0.003556 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772119), count: 2, class_loss = 0.633889, iou_loss = 0.194010, total_loss = 0.827899 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.818443), count: 11, class_loss = 0.827076, iou_loss = 0.359388, total_loss = 1.186463 \n",
            " total_bbox = 731272, rewritten_bbox = 0.003555 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.555079), count: 8, class_loss = 1.389972, iou_loss = 4.825360, total_loss = 6.215332 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.677009), count: 11, class_loss = 0.742415, iou_loss = 2.939184, total_loss = 3.681599 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.798533), count: 7, class_loss = 0.220371, iou_loss = 0.218695, total_loss = 0.439066 \n",
            " total_bbox = 731298, rewritten_bbox = 0.003555 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.637783), count: 2, class_loss = 0.493774, iou_loss = 0.753596, total_loss = 1.247369 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781447), count: 13, class_loss = 2.059743, iou_loss = 3.434848, total_loss = 5.494591 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758127), count: 19, class_loss = 2.186000, iou_loss = 0.674161, total_loss = 2.860161 \n",
            " total_bbox = 731332, rewritten_bbox = 0.003555 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.740315), count: 23, class_loss = 3.666716, iou_loss = 47.136822, total_loss = 50.803539 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740494), count: 39, class_loss = 5.150444, iou_loss = 11.778137, total_loss = 16.928581 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.802975), count: 26, class_loss = 2.189330, iou_loss = 1.351768, total_loss = 3.541098 \n",
            " total_bbox = 731420, rewritten_bbox = 0.003555 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.769642), count: 11, class_loss = 1.303425, iou_loss = 35.251419, total_loss = 36.554844 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.803412), count: 24, class_loss = 3.339573, iou_loss = 4.281114, total_loss = 7.620687 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.783475), count: 28, class_loss = 2.044998, iou_loss = 1.679529, total_loss = 3.724527 \n",
            " total_bbox = 731483, rewritten_bbox = 0.003554 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.493485), count: 1, class_loss = 0.166891, iou_loss = 0.392563, total_loss = 0.559454 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740076), count: 7, class_loss = 1.616445, iou_loss = 1.365666, total_loss = 2.982111 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.706094), count: 7, class_loss = 1.211758, iou_loss = 0.196164, total_loss = 1.407922 \n",
            " total_bbox = 731498, rewritten_bbox = 0.003554 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728408), count: 21, class_loss = 2.383505, iou_loss = 49.889988, total_loss = 52.273495 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.860467), count: 4, class_loss = 0.451463, iou_loss = 0.761963, total_loss = 1.213426 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793998), count: 7, class_loss = 0.692021, iou_loss = 0.235512, total_loss = 0.927533 \n",
            " total_bbox = 731530, rewritten_bbox = 0.003554 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.549892), count: 3, class_loss = 0.801343, iou_loss = 3.877523, total_loss = 4.678865 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765080), count: 10, class_loss = 1.911005, iou_loss = 1.957101, total_loss = 3.868106 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762051), count: 16, class_loss = 1.584976, iou_loss = 0.460198, total_loss = 2.045173 \n",
            " total_bbox = 731559, rewritten_bbox = 0.003554 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004444, iou_loss = 0.000000, total_loss = 0.004444 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765936), count: 28, class_loss = 5.348094, iou_loss = 5.785935, total_loss = 11.134029 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748993), count: 27, class_loss = 2.977925, iou_loss = 1.305039, total_loss = 4.282963 \n",
            " total_bbox = 731614, rewritten_bbox = 0.003554 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.593535), count: 7, class_loss = 1.635348, iou_loss = 9.285650, total_loss = 10.920999 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763837), count: 42, class_loss = 6.736099, iou_loss = 9.773247, total_loss = 16.509346 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752703), count: 21, class_loss = 2.337456, iou_loss = 1.060282, total_loss = 3.397738 \n",
            " total_bbox = 731684, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.776895), count: 1, class_loss = 0.209466, iou_loss = 0.972757, total_loss = 1.182222 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.801904), count: 16, class_loss = 1.376863, iou_loss = 3.962633, total_loss = 5.339496 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.812796), count: 16, class_loss = 1.159090, iou_loss = 1.013239, total_loss = 2.172328 \n",
            " total_bbox = 731717, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758671), count: 3, class_loss = 0.374459, iou_loss = 0.305578, total_loss = 0.680037 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780693), count: 9, class_loss = 1.454170, iou_loss = 0.349654, total_loss = 1.803824 \n",
            " total_bbox = 731729, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000409, iou_loss = 0.000000, total_loss = 0.000409 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.732495), count: 6, class_loss = 0.520372, iou_loss = 1.008301, total_loss = 1.528674 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.857685), count: 8, class_loss = 0.662373, iou_loss = 0.380251, total_loss = 1.042624 \n",
            " total_bbox = 731743, rewritten_bbox = 0.003553 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1083/6000: loss=1.4 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1083: 1.424699, 1.995344 avg loss, 0.001000 rate, 5.364976 seconds, 69312 images, 9.204986 hours left\n",
            "Loaded: 0.000058 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.742740), count: 12, class_loss = 1.348970, iou_loss = 27.434298, total_loss = 28.783268 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763153), count: 16, class_loss = 2.018547, iou_loss = 4.759377, total_loss = 6.777925 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.718891), count: 7, class_loss = 0.697373, iou_loss = 0.569853, total_loss = 1.267226 \n",
            " total_bbox = 731778, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.149481, iou_loss = 0.000000, total_loss = 0.149481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.825295), count: 11, class_loss = 2.108963, iou_loss = 1.696513, total_loss = 3.805476 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728654), count: 13, class_loss = 1.676863, iou_loss = 0.513022, total_loss = 2.189885 \n",
            " total_bbox = 731802, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728606), count: 1, class_loss = 0.204050, iou_loss = 0.327453, total_loss = 0.531503 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783503), count: 5, class_loss = 0.222756, iou_loss = 0.776535, total_loss = 0.999291 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725777), count: 10, class_loss = 0.798397, iou_loss = 0.261795, total_loss = 1.060192 \n",
            " total_bbox = 731818, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.681807), count: 21, class_loss = 3.461651, iou_loss = 28.524334, total_loss = 31.985985 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.675986), count: 14, class_loss = 0.805006, iou_loss = 4.016532, total_loss = 4.821538 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.815218), count: 7, class_loss = 0.132306, iou_loss = 0.174425, total_loss = 0.306731 \n",
            " total_bbox = 731860, rewritten_bbox = 0.003553 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.680291), count: 16, class_loss = 2.907214, iou_loss = 30.140833, total_loss = 33.048046 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744745), count: 27, class_loss = 4.411334, iou_loss = 7.576931, total_loss = 11.988265 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751342), count: 15, class_loss = 2.526526, iou_loss = 0.702071, total_loss = 3.228596 \n",
            " total_bbox = 731918, rewritten_bbox = 0.003552 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.657238), count: 2, class_loss = 0.451487, iou_loss = 2.830506, total_loss = 3.281993 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.777722), count: 9, class_loss = 1.346853, iou_loss = 2.059849, total_loss = 3.406702 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785896), count: 20, class_loss = 1.276670, iou_loss = 0.809923, total_loss = 2.086593 \n",
            " total_bbox = 731949, rewritten_bbox = 0.003552 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.758453), count: 2, class_loss = 0.488757, iou_loss = 2.507258, total_loss = 2.996015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795249), count: 20, class_loss = 2.677217, iou_loss = 3.684171, total_loss = 6.361388 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775951), count: 25, class_loss = 2.167401, iou_loss = 1.391905, total_loss = 3.559305 \n",
            " total_bbox = 731996, rewritten_bbox = 0.003552 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711246), count: 8, class_loss = 1.382020, iou_loss = 16.551764, total_loss = 17.933784 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771403), count: 23, class_loss = 4.493094, iou_loss = 5.874295, total_loss = 10.367390 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756030), count: 24, class_loss = 2.537249, iou_loss = 1.077394, total_loss = 3.614643 \n",
            " total_bbox = 732051, rewritten_bbox = 0.003552 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.656418), count: 22, class_loss = 4.267027, iou_loss = 22.604950, total_loss = 26.871977 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755088), count: 46, class_loss = 7.914717, iou_loss = 17.363171, total_loss = 25.277887 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765660), count: 26, class_loss = 2.404021, iou_loss = 1.151572, total_loss = 3.555593 \n",
            " total_bbox = 732145, rewritten_bbox = 0.003551 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.617264), count: 15, class_loss = 3.130365, iou_loss = 17.609150, total_loss = 20.739515 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740630), count: 41, class_loss = 5.271117, iou_loss = 7.975808, total_loss = 13.246924 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763604), count: 28, class_loss = 2.360555, iou_loss = 1.381987, total_loss = 3.742542 \n",
            " total_bbox = 732229, rewritten_bbox = 0.003551 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.701625), count: 2, class_loss = 0.553224, iou_loss = 1.893494, total_loss = 2.446719 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.688695), count: 20, class_loss = 3.176427, iou_loss = 2.754308, total_loss = 5.930734 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737451), count: 23, class_loss = 1.794613, iou_loss = 1.206933, total_loss = 3.001546 \n",
            " total_bbox = 732274, rewritten_bbox = 0.003551 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.667463), count: 5, class_loss = 1.197915, iou_loss = 3.901401, total_loss = 5.099316 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.684984), count: 12, class_loss = 1.451033, iou_loss = 2.500763, total_loss = 3.951797 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.776146), count: 8, class_loss = 0.433791, iou_loss = 0.354901, total_loss = 0.788692 \n",
            " total_bbox = 732299, rewritten_bbox = 0.003550 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.629076), count: 17, class_loss = 4.049503, iou_loss = 20.528845, total_loss = 24.578348 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.620993), count: 8, class_loss = 1.900564, iou_loss = 3.583033, total_loss = 5.483596 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777440), count: 7, class_loss = 0.266707, iou_loss = 0.249144, total_loss = 0.515851 \n",
            " total_bbox = 732331, rewritten_bbox = 0.003550 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.715032), count: 4, class_loss = 0.295353, iou_loss = 4.657372, total_loss = 4.952725 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752583), count: 15, class_loss = 2.195297, iou_loss = 3.970285, total_loss = 6.165583 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797042), count: 19, class_loss = 1.333704, iou_loss = 0.916391, total_loss = 2.250094 \n",
            " total_bbox = 732369, rewritten_bbox = 0.003550 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.646580), count: 4, class_loss = 1.228878, iou_loss = 10.373707, total_loss = 11.602586 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775217), count: 19, class_loss = 4.072515, iou_loss = 5.225402, total_loss = 9.297917 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748079), count: 25, class_loss = 3.585238, iou_loss = 0.863029, total_loss = 4.448267 \n",
            " total_bbox = 732417, rewritten_bbox = 0.003550 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.644436), count: 8, class_loss = 2.336866, iou_loss = 5.154215, total_loss = 7.491082 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.754298), count: 33, class_loss = 5.546862, iou_loss = 7.361149, total_loss = 12.908010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758593), count: 26, class_loss = 2.359980, iou_loss = 1.108192, total_loss = 3.468172 \n",
            " total_bbox = 732484, rewritten_bbox = 0.003550 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1084/6000: loss=2.2 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1084: 2.159129, 2.011723 avg loss, 0.001000 rate, 5.403717 seconds, 69376 images, 9.186214 hours left\n",
            "Loaded: 0.000066 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.640907), count: 14, class_loss = 3.534582, iou_loss = 14.257793, total_loss = 17.792376 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730248), count: 31, class_loss = 5.737548, iou_loss = 7.407350, total_loss = 13.144898 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750353), count: 21, class_loss = 1.612545, iou_loss = 0.910253, total_loss = 2.522798 \n",
            " total_bbox = 732550, rewritten_bbox = 0.003549 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.708273), count: 4, class_loss = 0.767117, iou_loss = 3.121453, total_loss = 3.888570 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.790914), count: 35, class_loss = 5.254226, iou_loss = 8.921686, total_loss = 14.175912 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774180), count: 25, class_loss = 2.602302, iou_loss = 1.941381, total_loss = 4.543684 \n",
            " total_bbox = 732614, rewritten_bbox = 0.003549 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.606343), count: 3, class_loss = 0.775042, iou_loss = 1.008971, total_loss = 1.784013 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723842), count: 17, class_loss = 2.702216, iou_loss = 3.634320, total_loss = 6.336536 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770336), count: 18, class_loss = 1.664424, iou_loss = 1.099082, total_loss = 2.763506 \n",
            " total_bbox = 732652, rewritten_bbox = 0.003549 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000086, iou_loss = 0.000000, total_loss = 0.000086 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.788241), count: 4, class_loss = 0.288917, iou_loss = 0.789468, total_loss = 1.078385 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731677), count: 9, class_loss = 0.834373, iou_loss = 0.289884, total_loss = 1.124257 \n",
            " total_bbox = 732665, rewritten_bbox = 0.003549 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.842365), count: 4, class_loss = 0.346277, iou_loss = 0.612424, total_loss = 0.958700 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730858), count: 10, class_loss = 0.934724, iou_loss = 0.358992, total_loss = 1.293716 \n",
            " total_bbox = 732679, rewritten_bbox = 0.003549 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.827755), count: 1, class_loss = 0.255819, iou_loss = 0.933801, total_loss = 1.189620 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.819059), count: 11, class_loss = 1.899485, iou_loss = 1.835942, total_loss = 3.735428 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760927), count: 18, class_loss = 1.492823, iou_loss = 0.845285, total_loss = 2.338108 \n",
            " total_bbox = 732709, rewritten_bbox = 0.003548 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.749218), count: 5, class_loss = 0.925513, iou_loss = 5.532934, total_loss = 6.458447 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.779177), count: 23, class_loss = 3.434007, iou_loss = 4.890475, total_loss = 8.324482 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779542), count: 22, class_loss = 1.341522, iou_loss = 0.984812, total_loss = 2.326334 \n",
            " total_bbox = 732759, rewritten_bbox = 0.003548 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.649933), count: 24, class_loss = 3.438996, iou_loss = 30.551334, total_loss = 33.990330 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733404), count: 42, class_loss = 4.766650, iou_loss = 11.316472, total_loss = 16.083122 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.732364), count: 24, class_loss = 1.240496, iou_loss = 1.020837, total_loss = 2.261333 \n",
            " total_bbox = 732849, rewritten_bbox = 0.003548 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.761297), count: 6, class_loss = 1.329887, iou_loss = 7.208685, total_loss = 8.538571 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.699354), count: 27, class_loss = 4.965974, iou_loss = 6.866800, total_loss = 11.832774 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762106), count: 11, class_loss = 1.714766, iou_loss = 0.546999, total_loss = 2.261765 \n",
            " total_bbox = 732893, rewritten_bbox = 0.003548 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.705302), count: 4, class_loss = 0.163069, iou_loss = 3.602132, total_loss = 3.765201 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.641672), count: 5, class_loss = 0.194141, iou_loss = 1.307064, total_loss = 1.501205 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797669), count: 8, class_loss = 0.629877, iou_loss = 0.282565, total_loss = 0.912442 \n",
            " total_bbox = 732910, rewritten_bbox = 0.003548 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756204), count: 4, class_loss = 0.882708, iou_loss = 0.387484, total_loss = 1.270193 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762367), count: 10, class_loss = 0.648392, iou_loss = 0.410667, total_loss = 1.059059 \n",
            " total_bbox = 732924, rewritten_bbox = 0.003547 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000511, iou_loss = 0.000000, total_loss = 0.000511 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743459), count: 4, class_loss = 0.299804, iou_loss = 0.635280, total_loss = 0.935084 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715621), count: 10, class_loss = 1.607236, iou_loss = 0.260178, total_loss = 1.867414 \n",
            " total_bbox = 732938, rewritten_bbox = 0.003547 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740594), count: 5, class_loss = 0.696311, iou_loss = 0.523317, total_loss = 1.219628 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.841341), count: 9, class_loss = 0.157245, iou_loss = 0.427387, total_loss = 0.584632 \n",
            " total_bbox = 732952, rewritten_bbox = 0.003547 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.609377), count: 8, class_loss = 2.053886, iou_loss = 5.277413, total_loss = 7.331300 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.673167), count: 12, class_loss = 1.977461, iou_loss = 4.106425, total_loss = 6.083886 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778900), count: 7, class_loss = 0.555787, iou_loss = 0.217602, total_loss = 0.773390 \n",
            " total_bbox = 732979, rewritten_bbox = 0.003547 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660137), count: 17, class_loss = 4.138288, iou_loss = 24.739748, total_loss = 28.878036 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.754359), count: 10, class_loss = 2.424370, iou_loss = 4.503641, total_loss = 6.928011 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.715207), count: 6, class_loss = 0.833745, iou_loss = 0.133349, total_loss = 0.967093 \n",
            " total_bbox = 733012, rewritten_bbox = 0.003547 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.750978), count: 12, class_loss = 2.300196, iou_loss = 12.165849, total_loss = 14.466044 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775804), count: 21, class_loss = 2.348229, iou_loss = 6.456377, total_loss = 8.804605 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.685945), count: 11, class_loss = 0.763967, iou_loss = 0.267495, total_loss = 1.031463 \n",
            " total_bbox = 733056, rewritten_bbox = 0.003547 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1085/6000: loss=1.6 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1085: 1.598592, 1.970410 avg loss, 0.001000 rate, 5.387534 seconds, 69440 images, 9.168144 hours left\n",
            "Loaded: 0.000072 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.774455), count: 2, class_loss = 0.492224, iou_loss = 2.183496, total_loss = 2.675719 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786854), count: 22, class_loss = 5.172183, iou_loss = 3.844361, total_loss = 9.016544 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803434), count: 27, class_loss = 2.969912, iou_loss = 1.426391, total_loss = 4.396303 \n",
            " total_bbox = 733107, rewritten_bbox = 0.003547 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.697447), count: 10, class_loss = 1.852933, iou_loss = 10.208326, total_loss = 12.061259 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762898), count: 26, class_loss = 3.585915, iou_loss = 7.012510, total_loss = 10.598425 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762454), count: 23, class_loss = 2.768134, iou_loss = 0.829714, total_loss = 3.597848 \n",
            " total_bbox = 733166, rewritten_bbox = 0.003546 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.490412), count: 2, class_loss = 0.497703, iou_loss = 4.440505, total_loss = 4.938209 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.793498), count: 20, class_loss = 3.014264, iou_loss = 3.828238, total_loss = 6.842502 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771598), count: 27, class_loss = 2.992948, iou_loss = 1.616074, total_loss = 4.609022 \n",
            " total_bbox = 733215, rewritten_bbox = 0.003546 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.665140), count: 5, class_loss = 1.075555, iou_loss = 3.459411, total_loss = 4.534966 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.790913), count: 23, class_loss = 3.134706, iou_loss = 5.957344, total_loss = 9.092051 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789227), count: 24, class_loss = 2.404769, iou_loss = 1.334397, total_loss = 3.739166 \n",
            " total_bbox = 733267, rewritten_bbox = 0.003546 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.719760), count: 2, class_loss = 0.477968, iou_loss = 7.522310, total_loss = 8.000278 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.810819), count: 25, class_loss = 3.127523, iou_loss = 4.283113, total_loss = 7.410636 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.798945), count: 28, class_loss = 1.999208, iou_loss = 1.414731, total_loss = 3.413939 \n",
            " total_bbox = 733322, rewritten_bbox = 0.003546 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.566732), count: 12, class_loss = 2.601052, iou_loss = 17.448471, total_loss = 20.049522 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751609), count: 36, class_loss = 5.562233, iou_loss = 9.743277, total_loss = 15.305511 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741736), count: 22, class_loss = 1.747055, iou_loss = 1.037226, total_loss = 2.784280 \n",
            " total_bbox = 733392, rewritten_bbox = 0.003545 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.756026), count: 13, class_loss = 2.517605, iou_loss = 15.436989, total_loss = 17.954594 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755899), count: 38, class_loss = 5.183242, iou_loss = 9.797197, total_loss = 14.980439 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775218), count: 25, class_loss = 2.822731, iou_loss = 1.091580, total_loss = 3.914311 \n",
            " total_bbox = 733468, rewritten_bbox = 0.003545 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.676111), count: 2, class_loss = 0.727410, iou_loss = 1.917902, total_loss = 2.645312 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.801326), count: 23, class_loss = 3.936336, iou_loss = 4.956717, total_loss = 8.893053 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760215), count: 30, class_loss = 2.650012, iou_loss = 1.396168, total_loss = 4.046180 \n",
            " total_bbox = 733523, rewritten_bbox = 0.003545 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805177), count: 3, class_loss = 0.113787, iou_loss = 0.362961, total_loss = 0.476749 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.707110), count: 9, class_loss = 0.626195, iou_loss = 0.243838, total_loss = 0.870032 \n",
            " total_bbox = 733535, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.870830), count: 2, class_loss = 0.517516, iou_loss = 0.221502, total_loss = 0.739019 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.824071), count: 10, class_loss = 1.157351, iou_loss = 0.398582, total_loss = 1.555933 \n",
            " total_bbox = 733547, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.601381), count: 1, class_loss = 0.323113, iou_loss = 0.073550, total_loss = 0.396663 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748011), count: 10, class_loss = 0.556724, iou_loss = 0.208253, total_loss = 0.764977 \n",
            " total_bbox = 733558, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763740), count: 3, class_loss = 0.128910, iou_loss = 0.409009, total_loss = 0.537920 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.826168), count: 9, class_loss = 0.534441, iou_loss = 0.319123, total_loss = 0.853563 \n",
            " total_bbox = 733570, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.712216), count: 8, class_loss = 1.997808, iou_loss = 11.627646, total_loss = 13.625454 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792702), count: 36, class_loss = 4.753741, iou_loss = 8.481437, total_loss = 13.235178 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.749676), count: 15, class_loss = 1.641003, iou_loss = 0.944397, total_loss = 2.585400 \n",
            " total_bbox = 733629, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.534491), count: 5, class_loss = 1.235279, iou_loss = 10.553225, total_loss = 11.788504 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.818791), count: 5, class_loss = 0.203974, iou_loss = 1.097130, total_loss = 1.301103 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.792615), count: 8, class_loss = 0.289187, iou_loss = 0.487317, total_loss = 0.776505 \n",
            " total_bbox = 733647, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.726235), count: 3, class_loss = 0.670129, iou_loss = 0.282777, total_loss = 0.952906 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.806248), count: 10, class_loss = 0.834515, iou_loss = 0.362160, total_loss = 1.196674 \n",
            " total_bbox = 733660, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734899), count: 2, class_loss = 0.274958, iou_loss = 0.197110, total_loss = 0.472068 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764658), count: 10, class_loss = 1.039360, iou_loss = 0.295618, total_loss = 1.334978 \n",
            " total_bbox = 733672, rewritten_bbox = 0.003544 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1086/6000: loss=1.7 map=0.69 best=0.69 hours left=9.2\u0007\n",
            " 1086: 1.674947, 1.940863 avg loss, 0.001000 rate, 5.488854 seconds, 69504 images, 9.150018 hours left\n",
            "Loaded: 0.000101 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003828, iou_loss = 0.000000, total_loss = 0.003828 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.703111), count: 9, class_loss = 1.759937, iou_loss = 1.460074, total_loss = 3.220011 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748548), count: 11, class_loss = 0.693363, iou_loss = 0.301755, total_loss = 0.995118 \n",
            " total_bbox = 733692, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.473490), count: 1, class_loss = 0.302321, iou_loss = 0.361316, total_loss = 0.663637 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.692586), count: 9, class_loss = 2.175828, iou_loss = 1.796778, total_loss = 3.972606 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.809242), count: 9, class_loss = 0.784884, iou_loss = 0.532871, total_loss = 1.317755 \n",
            " total_bbox = 733711, rewritten_bbox = 0.003544 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.812015), count: 1, class_loss = 0.237448, iou_loss = 0.408031, total_loss = 0.645479 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761864), count: 11, class_loss = 1.547767, iou_loss = 1.960276, total_loss = 3.508043 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743207), count: 16, class_loss = 1.893071, iou_loss = 0.912572, total_loss = 2.805643 \n",
            " total_bbox = 733739, rewritten_bbox = 0.003543 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.842398), count: 1, class_loss = 0.117890, iou_loss = 0.696234, total_loss = 0.814124 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795950), count: 39, class_loss = 5.381453, iou_loss = 9.244840, total_loss = 14.626292 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734403), count: 25, class_loss = 4.085634, iou_loss = 1.523131, total_loss = 5.608765 \n",
            " total_bbox = 733804, rewritten_bbox = 0.003543 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.630100), count: 4, class_loss = 0.976314, iou_loss = 6.288571, total_loss = 7.264885 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.807181), count: 28, class_loss = 3.538023, iou_loss = 6.246021, total_loss = 9.784044 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.801669), count: 26, class_loss = 3.140709, iou_loss = 1.519054, total_loss = 4.659763 \n",
            " total_bbox = 733862, rewritten_bbox = 0.003543 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.632952), count: 1, class_loss = 0.247645, iou_loss = 4.592443, total_loss = 4.840087 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753118), count: 9, class_loss = 1.724778, iou_loss = 4.642124, total_loss = 6.366902 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773801), count: 16, class_loss = 1.623504, iou_loss = 0.625164, total_loss = 2.248668 \n",
            " total_bbox = 733888, rewritten_bbox = 0.003543 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000146, iou_loss = 0.000000, total_loss = 0.000146 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700900), count: 2, class_loss = 0.214725, iou_loss = 0.165469, total_loss = 0.380194 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774292), count: 10, class_loss = 0.640993, iou_loss = 0.285009, total_loss = 0.926001 \n",
            " total_bbox = 733900, rewritten_bbox = 0.003543 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660994), count: 7, class_loss = 1.189994, iou_loss = 5.493524, total_loss = 6.683517 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729141), count: 12, class_loss = 0.576469, iou_loss = 2.740320, total_loss = 3.316789 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753851), count: 9, class_loss = 0.417872, iou_loss = 0.386597, total_loss = 0.804470 \n",
            " total_bbox = 733928, rewritten_bbox = 0.003543 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.720735), count: 31, class_loss = 6.036803, iou_loss = 52.636375, total_loss = 58.673180 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733439), count: 50, class_loss = 9.429012, iou_loss = 15.588720, total_loss = 25.017733 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795989), count: 21, class_loss = 2.491712, iou_loss = 1.440868, total_loss = 3.932580 \n",
            " total_bbox = 734030, rewritten_bbox = 0.003542 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.572609), count: 11, class_loss = 2.690175, iou_loss = 21.193178, total_loss = 23.883352 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.672110), count: 17, class_loss = 4.241778, iou_loss = 3.967199, total_loss = 8.208977 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.719029), count: 16, class_loss = 2.195892, iou_loss = 0.645406, total_loss = 2.841297 \n",
            " total_bbox = 734074, rewritten_bbox = 0.003542 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.650967), count: 24, class_loss = 5.733400, iou_loss = 27.734327, total_loss = 33.467728 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761749), count: 45, class_loss = 5.643923, iou_loss = 15.034885, total_loss = 20.678808 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725665), count: 24, class_loss = 2.455050, iou_loss = 1.138829, total_loss = 3.593879 \n",
            " total_bbox = 734167, rewritten_bbox = 0.003541 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.647755), count: 26, class_loss = 8.955921, iou_loss = 23.769268, total_loss = 32.725189 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.698023), count: 47, class_loss = 9.989390, iou_loss = 11.762385, total_loss = 21.751776 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743523), count: 22, class_loss = 1.369816, iou_loss = 1.453257, total_loss = 2.823073 \n",
            " total_bbox = 734262, rewritten_bbox = 0.003541 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.735106), count: 14, class_loss = 2.240396, iou_loss = 13.574943, total_loss = 15.815338 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768157), count: 37, class_loss = 5.069544, iou_loss = 10.434464, total_loss = 15.504007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764633), count: 24, class_loss = 2.966547, iou_loss = 1.171183, total_loss = 4.137730 \n",
            " total_bbox = 734337, rewritten_bbox = 0.003541 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684809), count: 2, class_loss = 0.488439, iou_loss = 1.839440, total_loss = 2.327879 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.784062), count: 21, class_loss = 5.149896, iou_loss = 4.324641, total_loss = 9.474537 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743789), count: 23, class_loss = 3.979404, iou_loss = 0.925554, total_loss = 4.904957 \n",
            " total_bbox = 734383, rewritten_bbox = 0.003540 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000147, iou_loss = 0.000000, total_loss = 0.000147 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.844127), count: 3, class_loss = 0.373184, iou_loss = 0.489371, total_loss = 0.862556 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803339), count: 9, class_loss = 0.301203, iou_loss = 0.317234, total_loss = 0.618437 \n",
            " total_bbox = 734395, rewritten_bbox = 0.003540 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000032, iou_loss = 0.000000, total_loss = 0.000032 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761533), count: 3, class_loss = 0.321024, iou_loss = 0.493385, total_loss = 0.814409 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750154), count: 9, class_loss = 0.745490, iou_loss = 0.244077, total_loss = 0.989567 \n",
            " total_bbox = 734407, rewritten_bbox = 0.003540 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1087/6000: loss=2.4 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1087: 2.423937, 1.989171 avg loss, 0.001000 rate, 5.431235 seconds, 69568 images, 9.133442 hours left\n",
            "Loaded: 0.000076 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.680944), count: 5, class_loss = 1.196724, iou_loss = 2.733605, total_loss = 3.930329 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795091), count: 32, class_loss = 3.907517, iou_loss = 7.022476, total_loss = 10.929993 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768311), count: 26, class_loss = 2.016669, iou_loss = 0.993412, total_loss = 3.010081 \n",
            " total_bbox = 734470, rewritten_bbox = 0.003540 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.689666), count: 5, class_loss = 1.032588, iou_loss = 2.909785, total_loss = 3.942373 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.724074), count: 22, class_loss = 4.115389, iou_loss = 4.591149, total_loss = 8.706538 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736067), count: 14, class_loss = 1.761246, iou_loss = 0.759178, total_loss = 2.520425 \n",
            " total_bbox = 734511, rewritten_bbox = 0.003540 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.765705), count: 15, class_loss = 2.275935, iou_loss = 14.456020, total_loss = 16.731955 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773362), count: 35, class_loss = 4.049821, iou_loss = 9.835779, total_loss = 13.885601 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750097), count: 21, class_loss = 1.158075, iou_loss = 1.489692, total_loss = 2.647767 \n",
            " total_bbox = 734582, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.865447), count: 1, class_loss = 0.085686, iou_loss = 0.042230, total_loss = 0.127915 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.666873), count: 9, class_loss = 1.883615, iou_loss = 0.173048, total_loss = 2.056663 \n",
            " total_bbox = 734592, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789303), count: 2, class_loss = 0.175580, iou_loss = 0.218787, total_loss = 0.394367 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751365), count: 11, class_loss = 0.161783, iou_loss = 0.333009, total_loss = 0.494792 \n",
            " total_bbox = 734605, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.777861), count: 3, class_loss = 0.765191, iou_loss = 5.694110, total_loss = 6.459301 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.839060), count: 12, class_loss = 1.935414, iou_loss = 1.863461, total_loss = 3.798875 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752129), count: 20, class_loss = 3.103763, iou_loss = 0.711118, total_loss = 3.814882 \n",
            " total_bbox = 734640, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.534001), count: 4, class_loss = 1.015544, iou_loss = 5.908640, total_loss = 6.924184 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771452), count: 22, class_loss = 2.714970, iou_loss = 3.665156, total_loss = 6.380126 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793679), count: 23, class_loss = 1.324585, iou_loss = 1.068646, total_loss = 2.393230 \n",
            " total_bbox = 734689, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.475346), count: 2, class_loss = 0.772390, iou_loss = 0.654522, total_loss = 1.426912 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.777744), count: 19, class_loss = 2.317061, iou_loss = 3.642910, total_loss = 5.959971 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788881), count: 19, class_loss = 3.338515, iou_loss = 0.953836, total_loss = 4.292351 \n",
            " total_bbox = 734729, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.713569), count: 3, class_loss = 0.503597, iou_loss = 2.320992, total_loss = 2.824589 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.731133), count: 17, class_loss = 1.123238, iou_loss = 3.533314, total_loss = 4.656552 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713282), count: 10, class_loss = 0.723514, iou_loss = 0.533420, total_loss = 1.256934 \n",
            " total_bbox = 734759, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778348), count: 4, class_loss = 0.284233, iou_loss = 0.449420, total_loss = 0.733652 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.807588), count: 9, class_loss = 0.348226, iou_loss = 0.364056, total_loss = 0.712282 \n",
            " total_bbox = 734772, rewritten_bbox = 0.003539 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.743002), count: 4, class_loss = 0.609646, iou_loss = 3.751637, total_loss = 4.361283 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745964), count: 11, class_loss = 1.731878, iou_loss = 4.676147, total_loss = 6.408024 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774154), count: 12, class_loss = 1.728432, iou_loss = 0.561761, total_loss = 2.290193 \n",
            " total_bbox = 734799, rewritten_bbox = 0.003538 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.778711), count: 2, class_loss = 0.392923, iou_loss = 1.345133, total_loss = 1.738056 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768915), count: 30, class_loss = 4.749643, iou_loss = 6.143164, total_loss = 10.892807 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779048), count: 32, class_loss = 2.665242, iou_loss = 1.936233, total_loss = 4.601475 \n",
            " total_bbox = 734863, rewritten_bbox = 0.003538 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.600503), count: 7, class_loss = 1.865728, iou_loss = 5.343171, total_loss = 7.208899 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795102), count: 29, class_loss = 4.311707, iou_loss = 6.395279, total_loss = 10.706986 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770256), count: 25, class_loss = 1.846812, iou_loss = 1.457155, total_loss = 3.303967 \n",
            " total_bbox = 734924, rewritten_bbox = 0.003538 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000060, iou_loss = 0.000000, total_loss = 0.000060 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.803774), count: 9, class_loss = 1.610528, iou_loss = 1.570969, total_loss = 3.181497 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785770), count: 19, class_loss = 2.158191, iou_loss = 0.788540, total_loss = 2.946731 \n",
            " total_bbox = 734952, rewritten_bbox = 0.003538 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.001337, iou_loss = 0.000000, total_loss = 0.001337 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763961), count: 11, class_loss = 0.674169, iou_loss = 0.240002, total_loss = 0.914172 \n",
            " total_bbox = 734963, rewritten_bbox = 0.003538 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.280675, iou_loss = 0.000000, total_loss = 0.280675 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763095), count: 11, class_loss = 1.485051, iou_loss = 0.284472, total_loss = 1.769524 \n",
            " total_bbox = 734974, rewritten_bbox = 0.003538 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1088/6000: loss=1.5 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1088: 1.466249, 1.936879 avg loss, 0.001000 rate, 5.401831 seconds, 69632 images, 9.116230 hours left\n",
            "Loaded: 0.000068 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.846482), count: 5, class_loss = 0.837163, iou_loss = 0.833997, total_loss = 1.671160 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739263), count: 9, class_loss = 0.203503, iou_loss = 0.289243, total_loss = 0.492746 \n",
            " total_bbox = 734988, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.614987), count: 4, class_loss = 0.940339, iou_loss = 2.877078, total_loss = 3.817417 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.619389), count: 10, class_loss = 0.758417, iou_loss = 1.180183, total_loss = 1.938600 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748490), count: 9, class_loss = 0.430600, iou_loss = 0.292593, total_loss = 0.723193 \n",
            " total_bbox = 735011, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.740135), count: 13, class_loss = 2.147238, iou_loss = 12.860753, total_loss = 15.007991 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789212), count: 23, class_loss = 2.064953, iou_loss = 10.127998, total_loss = 12.192951 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.688262), count: 11, class_loss = 1.017414, iou_loss = 0.533725, total_loss = 1.551139 \n",
            " total_bbox = 735058, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004935, iou_loss = 0.000000, total_loss = 0.004935 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.860502), count: 5, class_loss = 0.075955, iou_loss = 0.842580, total_loss = 0.918535 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762993), count: 12, class_loss = 1.823299, iou_loss = 0.460092, total_loss = 2.283391 \n",
            " total_bbox = 735075, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.894448), count: 1, class_loss = 0.040847, iou_loss = 0.146783, total_loss = 0.187631 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.776188), count: 10, class_loss = 1.144131, iou_loss = 0.211018, total_loss = 1.355149 \n",
            " total_bbox = 735086, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000016, iou_loss = 0.000000, total_loss = 0.000016 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.801581), count: 2, class_loss = 0.442128, iou_loss = 0.145458, total_loss = 0.587586 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779825), count: 10, class_loss = 0.521844, iou_loss = 0.262159, total_loss = 0.784003 \n",
            " total_bbox = 735098, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.723061), count: 3, class_loss = 0.314520, iou_loss = 2.808728, total_loss = 3.123248 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.821823), count: 7, class_loss = 0.087580, iou_loss = 1.566470, total_loss = 1.654049 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.703058), count: 8, class_loss = 0.457932, iou_loss = 0.224896, total_loss = 0.682828 \n",
            " total_bbox = 735116, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.878352), count: 2, class_loss = 0.492488, iou_loss = 1.708343, total_loss = 2.200831 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.579543), count: 5, class_loss = 0.647250, iou_loss = 0.568257, total_loss = 1.215506 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728071), count: 7, class_loss = 0.618870, iou_loss = 0.228334, total_loss = 0.847204 \n",
            " total_bbox = 735130, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003343, iou_loss = 0.000000, total_loss = 0.003343 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742134), count: 30, class_loss = 4.890227, iou_loss = 5.029462, total_loss = 9.919689 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759398), count: 30, class_loss = 3.899925, iou_loss = 1.429523, total_loss = 5.329448 \n",
            " total_bbox = 735190, rewritten_bbox = 0.003537 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.529508), count: 1, class_loss = 0.293756, iou_loss = 6.107176, total_loss = 6.400932 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755461), count: 22, class_loss = 3.033124, iou_loss = 2.980586, total_loss = 6.013710 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803123), count: 28, class_loss = 1.553008, iou_loss = 1.408242, total_loss = 2.961250 \n",
            " total_bbox = 735241, rewritten_bbox = 0.003536 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.647305), count: 7, class_loss = 2.412019, iou_loss = 5.441271, total_loss = 7.853290 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725826), count: 19, class_loss = 3.664485, iou_loss = 3.768844, total_loss = 7.433329 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768988), count: 14, class_loss = 1.866864, iou_loss = 0.541482, total_loss = 2.408346 \n",
            " total_bbox = 735281, rewritten_bbox = 0.003536 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.870557), count: 2, class_loss = 0.103043, iou_loss = 0.270538, total_loss = 0.373581 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.704470), count: 10, class_loss = 1.604947, iou_loss = 0.253182, total_loss = 1.858129 \n",
            " total_bbox = 735293, rewritten_bbox = 0.003536 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.774477), count: 5, class_loss = 1.154887, iou_loss = 4.056892, total_loss = 5.211780 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744837), count: 22, class_loss = 2.617364, iou_loss = 5.441249, total_loss = 8.058613 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721887), count: 15, class_loss = 0.959956, iou_loss = 1.012870, total_loss = 1.972825 \n",
            " total_bbox = 735335, rewritten_bbox = 0.003536 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.016089, iou_loss = 0.000000, total_loss = 0.016089 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.856458), count: 7, class_loss = 1.104953, iou_loss = 0.916955, total_loss = 2.021908 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751103), count: 15, class_loss = 0.481324, iou_loss = 0.536468, total_loss = 1.017792 \n",
            " total_bbox = 735357, rewritten_bbox = 0.003536 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722494), count: 5, class_loss = 0.937832, iou_loss = 5.255409, total_loss = 6.193242 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.705937), count: 32, class_loss = 4.506370, iou_loss = 7.163332, total_loss = 11.669702 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762883), count: 20, class_loss = 1.936910, iou_loss = 0.940696, total_loss = 2.877605 \n",
            " total_bbox = 735414, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664641), count: 8, class_loss = 2.103634, iou_loss = 6.302360, total_loss = 8.405993 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778155), count: 33, class_loss = 6.697721, iou_loss = 8.031178, total_loss = 14.728899 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745846), count: 27, class_loss = 3.100565, iou_loss = 1.456591, total_loss = 4.557156 \n",
            " total_bbox = 735482, rewritten_bbox = 0.003535 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1089/6000: loss=1.3 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1089: 1.337401, 1.876931 avg loss, 0.001000 rate, 5.343205 seconds, 69696 images, 9.098774 hours left\n",
            "Loaded: 0.000067 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004012, iou_loss = 0.000000, total_loss = 0.004012 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745622), count: 9, class_loss = 1.626034, iou_loss = 1.279598, total_loss = 2.905631 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754575), count: 12, class_loss = 0.958792, iou_loss = 0.486451, total_loss = 1.445243 \n",
            " total_bbox = 735503, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.828885), count: 3, class_loss = 0.175307, iou_loss = 0.294247, total_loss = 0.469554 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742210), count: 11, class_loss = 1.024536, iou_loss = 0.354742, total_loss = 1.379278 \n",
            " total_bbox = 735517, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.817495), count: 4, class_loss = 0.138991, iou_loss = 0.563479, total_loss = 0.702470 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761996), count: 9, class_loss = 0.477915, iou_loss = 0.343968, total_loss = 0.821883 \n",
            " total_bbox = 735530, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.886700), count: 4, class_loss = 0.222779, iou_loss = 0.388919, total_loss = 0.611697 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780388), count: 9, class_loss = 0.028001, iou_loss = 0.276621, total_loss = 0.304622 \n",
            " total_bbox = 735543, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.818525), count: 2, class_loss = 0.165785, iou_loss = 0.145204, total_loss = 0.310989 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742165), count: 11, class_loss = 1.396662, iou_loss = 0.258089, total_loss = 1.654752 \n",
            " total_bbox = 735556, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795889), count: 2, class_loss = 0.099416, iou_loss = 0.257685, total_loss = 0.357101 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.730210), count: 10, class_loss = 0.807431, iou_loss = 0.320097, total_loss = 1.127528 \n",
            " total_bbox = 735568, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723572), count: 4, class_loss = 0.143344, iou_loss = 0.643761, total_loss = 0.787105 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716539), count: 9, class_loss = 0.318048, iou_loss = 0.295760, total_loss = 0.613807 \n",
            " total_bbox = 735581, rewritten_bbox = 0.003535 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.736634), count: 13, class_loss = 1.602395, iou_loss = 15.521861, total_loss = 17.124256 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773866), count: 21, class_loss = 1.282830, iou_loss = 6.806665, total_loss = 8.089495 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.708735), count: 8, class_loss = 0.284137, iou_loss = 0.551950, total_loss = 0.836086 \n",
            " total_bbox = 735623, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.753037), count: 24, class_loss = 4.099482, iou_loss = 25.448519, total_loss = 29.548000 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.798824), count: 51, class_loss = 4.279665, iou_loss = 15.438881, total_loss = 19.718546 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743120), count: 16, class_loss = 2.414560, iou_loss = 1.516988, total_loss = 3.931548 \n",
            " total_bbox = 735714, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.004168, iou_loss = 0.000000, total_loss = 0.004168 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712358), count: 9, class_loss = 1.043409, iou_loss = 0.144392, total_loss = 1.187801 \n",
            " total_bbox = 735723, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765664), count: 2, class_loss = 0.060702, iou_loss = 0.141982, total_loss = 0.202684 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747228), count: 9, class_loss = 0.301549, iou_loss = 0.254910, total_loss = 0.556460 \n",
            " total_bbox = 735734, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.708783), count: 9, class_loss = 2.932317, iou_loss = 12.800507, total_loss = 15.732823 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.698527), count: 15, class_loss = 5.746936, iou_loss = 3.550423, total_loss = 9.297359 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.677114), count: 9, class_loss = 1.787869, iou_loss = 0.356665, total_loss = 2.144534 \n",
            " total_bbox = 735767, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000049, iou_loss = 0.000000, total_loss = 0.000049 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.867237), count: 3, class_loss = 0.856611, iou_loss = 0.493792, total_loss = 1.350403 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.717951), count: 9, class_loss = 0.552328, iou_loss = 0.227616, total_loss = 0.779945 \n",
            " total_bbox = 735779, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.141088, iou_loss = 0.000000, total_loss = 0.141088 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.798543), count: 4, class_loss = 2.203718, iou_loss = 0.741921, total_loss = 2.945639 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734228), count: 11, class_loss = 0.930702, iou_loss = 0.270761, total_loss = 1.201463 \n",
            " total_bbox = 735794, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000552, iou_loss = 0.000000, total_loss = 0.000552 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.783462), count: 10, class_loss = 0.347169, iou_loss = 0.248740, total_loss = 0.595908 \n",
            " total_bbox = 735804, rewritten_bbox = 0.003534 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684981), count: 19, class_loss = 1.786479, iou_loss = 20.025808, total_loss = 21.812286 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707604), count: 25, class_loss = 2.358965, iou_loss = 8.410957, total_loss = 10.769922 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.688621), count: 7, class_loss = 1.482488, iou_loss = 0.374117, total_loss = 1.856605 \n",
            " total_bbox = 735855, rewritten_bbox = 0.003533 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1090/6000: loss=0.9 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1090: 0.921528, 1.781391 avg loss, 0.001000 rate, 5.402965 seconds, 69760 images, 9.080678 hours left\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 512 x 512 \n",
            " try to allocate additional workspace_size = 168.20 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 0.000044 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.514431), count: 6, class_loss = 1.315208, iou_loss = 5.156590, total_loss = 6.471798 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.776565), count: 26, class_loss = 2.845084, iou_loss = 9.292315, total_loss = 12.137399 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731251), count: 26, class_loss = 2.705965, iou_loss = 1.775120, total_loss = 4.481085 \n",
            " total_bbox = 735913, rewritten_bbox = 0.003533 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.731772), count: 4, class_loss = 0.993308, iou_loss = 5.248185, total_loss = 6.241494 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771963), count: 32, class_loss = 5.189236, iou_loss = 11.104673, total_loss = 16.293909 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744546), count: 27, class_loss = 3.505659, iou_loss = 1.824667, total_loss = 5.330325 \n",
            " total_bbox = 735976, rewritten_bbox = 0.003533 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.552365), count: 5, class_loss = 1.253642, iou_loss = 7.305480, total_loss = 8.559122 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707557), count: 21, class_loss = 3.824981, iou_loss = 6.756370, total_loss = 10.581351 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.705743), count: 30, class_loss = 5.368898, iou_loss = 1.335628, total_loss = 6.704526 \n",
            " total_bbox = 736032, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.547288), count: 2, class_loss = 0.826601, iou_loss = 1.302581, total_loss = 2.129182 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741443), count: 21, class_loss = 5.187871, iou_loss = 8.785151, total_loss = 13.973022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716618), count: 24, class_loss = 2.093969, iou_loss = 1.654816, total_loss = 3.748785 \n",
            " total_bbox = 736079, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.740719), count: 10, class_loss = 1.905287, iou_loss = 19.731691, total_loss = 21.636978 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719137), count: 32, class_loss = 7.036891, iou_loss = 14.331308, total_loss = 21.368198 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.709261), count: 25, class_loss = 4.532674, iou_loss = 1.914782, total_loss = 6.447456 \n",
            " total_bbox = 736146, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.607770), count: 2, class_loss = 0.185984, iou_loss = 1.865658, total_loss = 2.051642 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787642), count: 6, class_loss = 3.045467, iou_loss = 2.690338, total_loss = 5.735806 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.679391), count: 22, class_loss = 4.002417, iou_loss = 0.822610, total_loss = 4.825027 \n",
            " total_bbox = 736176, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760194), count: 2, class_loss = 0.471197, iou_loss = 0.347878, total_loss = 0.819075 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748005), count: 11, class_loss = 0.589557, iou_loss = 0.421797, total_loss = 1.011354 \n",
            " total_bbox = 736189, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.897014), count: 1, class_loss = 0.028548, iou_loss = 0.247802, total_loss = 0.276350 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754156), count: 8, class_loss = 0.817948, iou_loss = 0.312950, total_loss = 1.130898 \n",
            " total_bbox = 736198, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.681712), count: 6, class_loss = 1.552317, iou_loss = 8.834859, total_loss = 10.387177 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.503147), count: 8, class_loss = 2.114481, iou_loss = 2.069775, total_loss = 4.184256 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.636248), count: 6, class_loss = 1.539971, iou_loss = 0.148101, total_loss = 1.688072 \n",
            " total_bbox = 736218, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.081133, iou_loss = 0.000000, total_loss = 0.081133 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.515175), count: 3, class_loss = 0.194073, iou_loss = 0.497411, total_loss = 0.691484 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.603875), count: 10, class_loss = 1.664627, iou_loss = 0.268079, total_loss = 1.932706 \n",
            " total_bbox = 736231, rewritten_bbox = 0.003532 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.823756), count: 1, class_loss = 0.001416, iou_loss = 0.187086, total_loss = 0.188502 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746877), count: 8, class_loss = 0.727704, iou_loss = 0.238396, total_loss = 0.966100 \n",
            " total_bbox = 736240, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.705371), count: 6, class_loss = 1.017874, iou_loss = 6.246926, total_loss = 7.264800 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745806), count: 18, class_loss = 2.567549, iou_loss = 7.380110, total_loss = 9.947659 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.676868), count: 10, class_loss = 1.225799, iou_loss = 1.332561, total_loss = 2.558360 \n",
            " total_bbox = 736274, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.497183), count: 2, class_loss = 0.479478, iou_loss = 1.877275, total_loss = 2.356753 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755592), count: 9, class_loss = 2.236768, iou_loss = 2.228240, total_loss = 4.465008 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.693623), count: 10, class_loss = 0.773049, iou_loss = 0.545496, total_loss = 1.318545 \n",
            " total_bbox = 736295, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.656519), count: 11, class_loss = 2.525078, iou_loss = 13.248082, total_loss = 15.773160 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713898), count: 17, class_loss = 4.321738, iou_loss = 8.917275, total_loss = 13.239014 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.704465), count: 7, class_loss = 1.459621, iou_loss = 0.155859, total_loss = 1.615480 \n",
            " total_bbox = 736330, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000040, iou_loss = 0.000000, total_loss = 0.000040 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.806757), count: 8, class_loss = 3.110816, iou_loss = 1.638152, total_loss = 4.748968 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740032), count: 14, class_loss = 2.169530, iou_loss = 0.738421, total_loss = 2.907951 \n",
            " total_bbox = 736352, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.644654), count: 3, class_loss = 1.072512, iou_loss = 5.081530, total_loss = 6.154042 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.726799), count: 13, class_loss = 3.404417, iou_loss = 4.357126, total_loss = 7.761542 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.657250), count: 12, class_loss = 1.176599, iou_loss = 0.657976, total_loss = 1.834575 \n",
            " total_bbox = 736380, rewritten_bbox = 0.003531 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1091/6000: loss=1.9 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1091: 1.945262, 1.797778 avg loss, 0.001000 rate, 7.238402 seconds, 69824 images, 9.063563 hours left\n",
            "Loaded: 0.000053 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.551989), count: 11, class_loss = 2.932740, iou_loss = 12.913231, total_loss = 15.845971 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722206), count: 18, class_loss = 6.085681, iou_loss = 6.454617, total_loss = 12.540298 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785717), count: 9, class_loss = 1.426968, iou_loss = 0.599186, total_loss = 2.026154 \n",
            " total_bbox = 736418, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.894364), count: 1, class_loss = 0.003055, iou_loss = 0.216740, total_loss = 0.219794 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.828264), count: 9, class_loss = 0.968211, iou_loss = 0.320620, total_loss = 1.288831 \n",
            " total_bbox = 736428, rewritten_bbox = 0.003531 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.551557), count: 3, class_loss = 0.664826, iou_loss = 4.451676, total_loss = 5.116502 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746536), count: 9, class_loss = 1.908248, iou_loss = 4.982273, total_loss = 6.890521 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756886), count: 13, class_loss = 1.907902, iou_loss = 0.634658, total_loss = 2.542560 \n",
            " total_bbox = 736453, rewritten_bbox = 0.003530 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.829817), count: 1, class_loss = 0.271439, iou_loss = 0.775298, total_loss = 1.046738 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.726709), count: 17, class_loss = 3.635312, iou_loss = 3.747663, total_loss = 7.382975 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764211), count: 31, class_loss = 3.503356, iou_loss = 1.955379, total_loss = 5.458736 \n",
            " total_bbox = 736502, rewritten_bbox = 0.003530 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.656473), count: 4, class_loss = 0.893455, iou_loss = 10.266627, total_loss = 11.160082 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.712365), count: 29, class_loss = 4.751692, iou_loss = 9.484573, total_loss = 14.236265 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.710329), count: 23, class_loss = 2.516137, iou_loss = 1.905479, total_loss = 4.421616 \n",
            " total_bbox = 736558, rewritten_bbox = 0.003530 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.371712), count: 1, class_loss = 0.268150, iou_loss = 1.587744, total_loss = 1.855894 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737089), count: 21, class_loss = 4.172895, iou_loss = 6.267248, total_loss = 10.440144 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747768), count: 33, class_loss = 4.180206, iou_loss = 2.044793, total_loss = 6.224998 \n",
            " total_bbox = 736613, rewritten_bbox = 0.003530 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.818041), count: 4, class_loss = 0.757035, iou_loss = 7.189309, total_loss = 7.946344 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767109), count: 25, class_loss = 2.416901, iou_loss = 7.293007, total_loss = 9.709908 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762625), count: 29, class_loss = 1.196258, iou_loss = 1.872545, total_loss = 3.068803 \n",
            " total_bbox = 736671, rewritten_bbox = 0.003529 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.736732), count: 15, class_loss = 3.701956, iou_loss = 30.689501, total_loss = 34.391457 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730573), count: 28, class_loss = 5.952508, iou_loss = 11.083812, total_loss = 17.036320 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728002), count: 24, class_loss = 3.430461, iou_loss = 1.402742, total_loss = 4.833203 \n",
            " total_bbox = 736738, rewritten_bbox = 0.003529 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.775419), count: 5, class_loss = 0.305622, iou_loss = 6.678085, total_loss = 6.983707 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.840484), count: 9, class_loss = 0.120265, iou_loss = 4.576518, total_loss = 4.696782 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.645032), count: 8, class_loss = 1.034991, iou_loss = 0.309500, total_loss = 1.344492 \n",
            " total_bbox = 736760, rewritten_bbox = 0.003529 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.798472), count: 2, class_loss = 0.103503, iou_loss = 2.071254, total_loss = 2.174757 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.825310), count: 6, class_loss = 0.165346, iou_loss = 2.023515, total_loss = 2.188860 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.614682), count: 8, class_loss = 1.827239, iou_loss = 0.369312, total_loss = 2.196551 \n",
            " total_bbox = 736776, rewritten_bbox = 0.003529 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.729098), count: 1, class_loss = 0.250772, iou_loss = 3.583909, total_loss = 3.834681 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722566), count: 2, class_loss = 0.347167, iou_loss = 0.566693, total_loss = 0.913860 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.616097), count: 11, class_loss = 1.830730, iou_loss = 0.363256, total_loss = 2.193986 \n",
            " total_bbox = 736790, rewritten_bbox = 0.003529 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.591519), count: 6, class_loss = 2.186357, iou_loss = 9.840673, total_loss = 12.027030 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737990), count: 33, class_loss = 5.624087, iou_loss = 10.160955, total_loss = 15.785042 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750358), count: 28, class_loss = 3.285520, iou_loss = 2.276937, total_loss = 5.562456 \n",
            " total_bbox = 736857, rewritten_bbox = 0.003529 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.456597), count: 1, class_loss = 0.247848, iou_loss = 4.922185, total_loss = 5.170033 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767106), count: 10, class_loss = 2.285291, iou_loss = 3.228330, total_loss = 5.513621 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773454), count: 17, class_loss = 2.200141, iou_loss = 0.883805, total_loss = 3.083946 \n",
            " total_bbox = 736885, rewritten_bbox = 0.003528 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.651255), count: 9, class_loss = 0.597722, iou_loss = 12.581946, total_loss = 13.179668 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749841), count: 35, class_loss = 3.626042, iou_loss = 15.198019, total_loss = 18.824060 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737597), count: 33, class_loss = 2.522507, iou_loss = 2.233953, total_loss = 4.756460 \n",
            " total_bbox = 736962, rewritten_bbox = 0.003528 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.638308), count: 2, class_loss = 0.379102, iou_loss = 1.724180, total_loss = 2.103282 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781173), count: 21, class_loss = 1.583132, iou_loss = 7.785956, total_loss = 9.369088 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780014), count: 34, class_loss = 3.100034, iou_loss = 2.020473, total_loss = 5.120508 \n",
            " total_bbox = 737019, rewritten_bbox = 0.003528 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.045217, iou_loss = 0.000000, total_loss = 0.045217 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761969), count: 18, class_loss = 3.287953, iou_loss = 5.856706, total_loss = 9.144659 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748877), count: 32, class_loss = 2.897966, iou_loss = 2.765917, total_loss = 5.663883 \n",
            " total_bbox = 737069, rewritten_bbox = 0.003527 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1092/6000: loss=2.0 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1092: 2.033858, 1.821386 avg loss, 0.001000 rate, 7.292325 seconds, 69888 images, 9.071631 hours left\n",
            "Loaded: 0.000049 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.478162), count: 2, class_loss = 0.811556, iou_loss = 2.451434, total_loss = 3.262990 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.691700), count: 18, class_loss = 4.516084, iou_loss = 5.570893, total_loss = 10.086977 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735812), count: 27, class_loss = 4.419081, iou_loss = 2.115197, total_loss = 6.534278 \n",
            " total_bbox = 737116, rewritten_bbox = 0.003527 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.697177), count: 6, class_loss = 1.267739, iou_loss = 9.253471, total_loss = 10.521211 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.803006), count: 39, class_loss = 3.113034, iou_loss = 16.303755, total_loss = 19.416788 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.737332), count: 29, class_loss = 2.996045, iou_loss = 3.185097, total_loss = 6.181142 \n",
            " total_bbox = 737190, rewritten_bbox = 0.003527 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.587157), count: 3, class_loss = 0.751770, iou_loss = 3.262092, total_loss = 4.013862 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755078), count: 25, class_loss = 4.406212, iou_loss = 9.937658, total_loss = 14.343871 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790474), count: 25, class_loss = 3.686083, iou_loss = 1.669451, total_loss = 5.355534 \n",
            " total_bbox = 737243, rewritten_bbox = 0.003527 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000011, iou_loss = 0.000000, total_loss = 0.000011 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.840402), count: 1, class_loss = 0.533333, iou_loss = 0.081948, total_loss = 0.615281 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.637641), count: 11, class_loss = 2.519940, iou_loss = 0.230394, total_loss = 2.750334 \n",
            " total_bbox = 737255, rewritten_bbox = 0.003527 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000083, iou_loss = 0.000000, total_loss = 0.000083 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.815675), count: 3, class_loss = 0.239532, iou_loss = 0.666600, total_loss = 0.906132 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790165), count: 9, class_loss = 0.642639, iou_loss = 0.441406, total_loss = 1.084045 \n",
            " total_bbox = 737267, rewritten_bbox = 0.003527 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759987), count: 5, class_loss = 1.143749, iou_loss = 13.018141, total_loss = 14.161890 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758280), count: 16, class_loss = 2.424598, iou_loss = 7.110662, total_loss = 9.535260 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770464), count: 15, class_loss = 1.617210, iou_loss = 1.073487, total_loss = 2.690697 \n",
            " total_bbox = 737303, rewritten_bbox = 0.003526 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.898195), count: 1, class_loss = 0.383002, iou_loss = 1.360723, total_loss = 1.743725 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736739), count: 18, class_loss = 4.072524, iou_loss = 3.833599, total_loss = 7.906123 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743863), count: 27, class_loss = 3.083835, iou_loss = 1.809081, total_loss = 4.892916 \n",
            " total_bbox = 737349, rewritten_bbox = 0.003526 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.733297), count: 22, class_loss = 4.994934, iou_loss = 51.424164, total_loss = 56.419098 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748666), count: 78, class_loss = 12.205243, iou_loss = 31.327034, total_loss = 43.532276 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.727649), count: 41, class_loss = 5.419821, iou_loss = 3.993860, total_loss = 9.413681 \n",
            " total_bbox = 737490, rewritten_bbox = 0.003525 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.613986), count: 8, class_loss = 2.002601, iou_loss = 12.973134, total_loss = 14.975735 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.697921), count: 13, class_loss = 2.815903, iou_loss = 3.003923, total_loss = 5.819826 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.794096), count: 22, class_loss = 2.083091, iou_loss = 1.071026, total_loss = 3.154117 \n",
            " total_bbox = 737533, rewritten_bbox = 0.003525 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.707551), count: 10, class_loss = 2.389317, iou_loss = 17.777706, total_loss = 20.167023 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.665670), count: 34, class_loss = 6.373189, iou_loss = 14.839301, total_loss = 21.212490 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.723939), count: 31, class_loss = 3.466155, iou_loss = 1.685935, total_loss = 5.152090 \n",
            " total_bbox = 737608, rewritten_bbox = 0.003525 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.725990), count: 4, class_loss = 0.829098, iou_loss = 8.298306, total_loss = 9.127404 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.731170), count: 15, class_loss = 3.203748, iou_loss = 4.809346, total_loss = 8.013094 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725283), count: 27, class_loss = 5.360571, iou_loss = 1.292462, total_loss = 6.653033 \n",
            " total_bbox = 737654, rewritten_bbox = 0.003525 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.737818), count: 12, class_loss = 2.881543, iou_loss = 39.699100, total_loss = 42.580643 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.722665), count: 13, class_loss = 1.641755, iou_loss = 3.892224, total_loss = 5.533979 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767600), count: 13, class_loss = 0.842380, iou_loss = 1.081805, total_loss = 1.924185 \n",
            " total_bbox = 737692, rewritten_bbox = 0.003525 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.006806, iou_loss = 0.000000, total_loss = 0.006806 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.782999), count: 9, class_loss = 0.810520, iou_loss = 0.244220, total_loss = 1.054740 \n",
            " total_bbox = 737701, rewritten_bbox = 0.003524 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000013, iou_loss = 0.000000, total_loss = 0.000013 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787695), count: 1, class_loss = 0.011423, iou_loss = 0.191065, total_loss = 0.202489 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739301), count: 9, class_loss = 1.009125, iou_loss = 0.308842, total_loss = 1.317967 \n",
            " total_bbox = 737711, rewritten_bbox = 0.003524 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.863808), count: 3, class_loss = 0.578591, iou_loss = 0.654042, total_loss = 1.232633 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793808), count: 11, class_loss = 1.094415, iou_loss = 0.601783, total_loss = 1.696198 \n",
            " total_bbox = 737725, rewritten_bbox = 0.003524 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.011961, iou_loss = 0.000000, total_loss = 0.011961 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753774), count: 10, class_loss = 2.102623, iou_loss = 3.156089, total_loss = 5.258713 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720418), count: 12, class_loss = 1.166834, iou_loss = 0.628110, total_loss = 1.794944 \n",
            " total_bbox = 737747, rewritten_bbox = 0.003524 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1093/6000: loss=2.2 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1093: 2.210773, 1.860324 avg loss, 0.001000 rate, 7.338580 seconds, 69952 images, 9.080335 hours left\n",
            "Loaded: 0.000049 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.702220), count: 2, class_loss = 0.902204, iou_loss = 7.927432, total_loss = 8.829636 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.721049), count: 15, class_loss = 2.995203, iou_loss = 2.853488, total_loss = 5.848691 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720910), count: 26, class_loss = 3.286514, iou_loss = 1.271785, total_loss = 4.558299 \n",
            " total_bbox = 737790, rewritten_bbox = 0.003524 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.677590), count: 29, class_loss = 5.739650, iou_loss = 38.382862, total_loss = 44.122513 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737814), count: 56, class_loss = 9.610740, iou_loss = 22.218918, total_loss = 31.829659 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746135), count: 32, class_loss = 3.302714, iou_loss = 1.806488, total_loss = 5.109202 \n",
            " total_bbox = 737907, rewritten_bbox = 0.003523 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.639448), count: 1, class_loss = 0.238347, iou_loss = 1.659083, total_loss = 1.897430 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.732817), count: 15, class_loss = 3.592780, iou_loss = 3.489523, total_loss = 7.082303 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785255), count: 27, class_loss = 3.325955, iou_loss = 1.742183, total_loss = 5.068138 \n",
            " total_bbox = 737950, rewritten_bbox = 0.003523 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759921), count: 10, class_loss = 2.900642, iou_loss = 17.979151, total_loss = 20.879793 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.556531), count: 10, class_loss = 3.929347, iou_loss = 3.924290, total_loss = 7.853636 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722922), count: 6, class_loss = 0.611270, iou_loss = 0.095983, total_loss = 0.707252 \n",
            " total_bbox = 737976, rewritten_bbox = 0.003523 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.651302), count: 1, class_loss = 0.443662, iou_loss = 0.130673, total_loss = 0.574335 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781384), count: 9, class_loss = 2.121545, iou_loss = 0.357705, total_loss = 2.479249 \n",
            " total_bbox = 737986, rewritten_bbox = 0.003523 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000353, iou_loss = 0.000000, total_loss = 0.000353 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.845736), count: 13, class_loss = 2.649061, iou_loss = 4.538431, total_loss = 7.187492 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775269), count: 18, class_loss = 2.705897, iou_loss = 1.623444, total_loss = 4.329341 \n",
            " total_bbox = 738017, rewritten_bbox = 0.003523 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.618447), count: 1, class_loss = 0.323643, iou_loss = 0.573534, total_loss = 0.897178 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.707622), count: 16, class_loss = 3.431565, iou_loss = 3.217090, total_loss = 6.648655 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770354), count: 38, class_loss = 3.508516, iou_loss = 2.314164, total_loss = 5.822680 \n",
            " total_bbox = 738072, rewritten_bbox = 0.003523 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.773795), count: 6, class_loss = 1.244688, iou_loss = 9.066009, total_loss = 10.310697 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774215), count: 23, class_loss = 2.238803, iou_loss = 7.666050, total_loss = 9.904854 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793245), count: 33, class_loss = 2.407815, iou_loss = 2.605819, total_loss = 5.013634 \n",
            " total_bbox = 738134, rewritten_bbox = 0.003522 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000052, iou_loss = 0.000000, total_loss = 0.000052 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.829017), count: 13, class_loss = 1.330317, iou_loss = 4.215627, total_loss = 5.545943 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716258), count: 14, class_loss = 1.830694, iou_loss = 0.637059, total_loss = 2.467752 \n",
            " total_bbox = 738161, rewritten_bbox = 0.003522 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.538290), count: 1, class_loss = 0.688028, iou_loss = 1.338228, total_loss = 2.026256 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.654589), count: 5, class_loss = 2.281497, iou_loss = 1.593627, total_loss = 3.875124 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766671), count: 16, class_loss = 2.760207, iou_loss = 0.760461, total_loss = 3.520668 \n",
            " total_bbox = 738183, rewritten_bbox = 0.003522 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.006100, iou_loss = 0.000000, total_loss = 0.006100 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.717552), count: 7, class_loss = 2.062926, iou_loss = 1.513710, total_loss = 3.576636 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738343), count: 16, class_loss = 3.438891, iou_loss = 1.184716, total_loss = 4.623607 \n",
            " total_bbox = 738206, rewritten_bbox = 0.003522 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.598871), count: 10, class_loss = 3.626748, iou_loss = 15.346093, total_loss = 18.972841 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.721228), count: 23, class_loss = 4.372050, iou_loss = 6.708405, total_loss = 11.080455 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752799), count: 26, class_loss = 4.246837, iou_loss = 1.562248, total_loss = 5.809085 \n",
            " total_bbox = 738265, rewritten_bbox = 0.003522 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.718316), count: 4, class_loss = 1.555472, iou_loss = 7.717325, total_loss = 9.272798 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.735954), count: 29, class_loss = 4.673492, iou_loss = 10.704950, total_loss = 15.378443 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778942), count: 34, class_loss = 3.085181, iou_loss = 2.417064, total_loss = 5.502245 \n",
            " total_bbox = 738332, rewritten_bbox = 0.003521 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.692770), count: 9, class_loss = 2.425331, iou_loss = 19.967823, total_loss = 22.393154 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761697), count: 40, class_loss = 7.919441, iou_loss = 12.672693, total_loss = 20.592134 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751392), count: 32, class_loss = 4.758932, iou_loss = 1.891412, total_loss = 6.650343 \n",
            " total_bbox = 738413, rewritten_bbox = 0.003521 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.610243), count: 2, class_loss = 0.273904, iou_loss = 1.646911, total_loss = 1.920815 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783447), count: 15, class_loss = 1.275256, iou_loss = 4.188348, total_loss = 5.463604 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.751152), count: 28, class_loss = 1.788103, iou_loss = 1.487049, total_loss = 3.275152 \n",
            " total_bbox = 738458, rewritten_bbox = 0.003521 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.748565), count: 9, class_loss = 3.498839, iou_loss = 22.578333, total_loss = 26.077171 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.780849), count: 24, class_loss = 5.009375, iou_loss = 8.398702, total_loss = 13.408076 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797502), count: 29, class_loss = 2.452914, iou_loss = 1.867826, total_loss = 4.320739 \n",
            " total_bbox = 738520, rewritten_bbox = 0.003521 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1094/6000: loss=2.6 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1094: 2.647553, 1.939047 avg loss, 0.001000 rate, 7.316984 seconds, 70016 images, 9.089561 hours left\n",
            "Loaded: 0.000049 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.840779), count: 5, class_loss = 1.093370, iou_loss = 9.872276, total_loss = 10.965646 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700061), count: 22, class_loss = 4.880203, iou_loss = 7.294018, total_loss = 12.174221 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780118), count: 23, class_loss = 2.920295, iou_loss = 1.305140, total_loss = 4.225435 \n",
            " total_bbox = 738570, rewritten_bbox = 0.003520 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.705034), count: 10, class_loss = 1.370332, iou_loss = 14.831311, total_loss = 16.201643 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760829), count: 33, class_loss = 4.081382, iou_loss = 11.794605, total_loss = 15.875987 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757666), count: 31, class_loss = 3.906740, iou_loss = 1.937585, total_loss = 5.844325 \n",
            " total_bbox = 738644, rewritten_bbox = 0.003520 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.014108, iou_loss = 0.000000, total_loss = 0.014108 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746400), count: 20, class_loss = 6.678433, iou_loss = 6.140834, total_loss = 12.819267 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.698392), count: 17, class_loss = 3.401359, iou_loss = 1.107599, total_loss = 4.508958 \n",
            " total_bbox = 738681, rewritten_bbox = 0.003520 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000035, iou_loss = 0.000000, total_loss = 0.000035 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.808696), count: 1, class_loss = 0.012483, iou_loss = 0.155076, total_loss = 0.167559 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.782993), count: 9, class_loss = 0.117990, iou_loss = 0.352332, total_loss = 0.470321 \n",
            " total_bbox = 738691, rewritten_bbox = 0.003520 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000061, iou_loss = 0.000000, total_loss = 0.000061 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.647198), count: 1, class_loss = 0.091695, iou_loss = 0.085388, total_loss = 0.177083 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787411), count: 11, class_loss = 1.433518, iou_loss = 0.367576, total_loss = 1.801095 \n",
            " total_bbox = 738703, rewritten_bbox = 0.003520 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.750688), count: 4, class_loss = 0.484099, iou_loss = 7.286197, total_loss = 7.770295 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718034), count: 17, class_loss = 2.520090, iou_loss = 5.513507, total_loss = 8.033597 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.700460), count: 9, class_loss = 1.347354, iou_loss = 0.583874, total_loss = 1.931228 \n",
            " total_bbox = 738733, rewritten_bbox = 0.003520 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.662852), count: 1, class_loss = 0.059485, iou_loss = 1.072677, total_loss = 1.132162 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.750529), count: 4, class_loss = 0.262585, iou_loss = 1.174820, total_loss = 1.437406 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756799), count: 9, class_loss = 0.335094, iou_loss = 0.626280, total_loss = 0.961375 \n",
            " total_bbox = 738747, rewritten_bbox = 0.003519 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000022, iou_loss = 0.000000, total_loss = 0.000022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000082, iou_loss = 0.000000, total_loss = 0.000082 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735445), count: 8, class_loss = 1.209561, iou_loss = 0.208354, total_loss = 1.417915 \n",
            " total_bbox = 738755, rewritten_bbox = 0.003519 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.744142), count: 1, class_loss = 0.241261, iou_loss = 1.924139, total_loss = 2.165401 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771951), count: 12, class_loss = 2.188924, iou_loss = 4.057175, total_loss = 6.246099 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759885), count: 15, class_loss = 0.643994, iou_loss = 0.792790, total_loss = 1.436784 \n",
            " total_bbox = 738783, rewritten_bbox = 0.003519 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.016938, iou_loss = 0.000000, total_loss = 0.016938 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787003), count: 11, class_loss = 2.146554, iou_loss = 3.543766, total_loss = 5.690320 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753478), count: 13, class_loss = 1.583219, iou_loss = 1.166002, total_loss = 2.749222 \n",
            " total_bbox = 738807, rewritten_bbox = 0.003519 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.017066, iou_loss = 0.000000, total_loss = 0.017066 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.828436), count: 2, class_loss = 0.323514, iou_loss = 0.193236, total_loss = 0.516751 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754661), count: 13, class_loss = 1.244397, iou_loss = 0.387348, total_loss = 1.631746 \n",
            " total_bbox = 738822, rewritten_bbox = 0.003519 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.781029), count: 10, class_loss = 2.603035, iou_loss = 19.885433, total_loss = 22.488468 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772296), count: 32, class_loss = 4.977707, iou_loss = 9.155622, total_loss = 14.133329 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772718), count: 31, class_loss = 2.671881, iou_loss = 2.331980, total_loss = 5.003860 \n",
            " total_bbox = 738895, rewritten_bbox = 0.003519 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728796), count: 12, class_loss = 0.634625, iou_loss = 27.073017, total_loss = 27.707642 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783875), count: 18, class_loss = 3.081346, iou_loss = 9.254784, total_loss = 12.336129 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773869), count: 27, class_loss = 3.239481, iou_loss = 1.437438, total_loss = 4.676919 \n",
            " total_bbox = 738952, rewritten_bbox = 0.003518 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.774833), count: 1, class_loss = 0.251668, iou_loss = 1.106476, total_loss = 1.358144 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.810928), count: 14, class_loss = 2.750792, iou_loss = 3.447137, total_loss = 6.197928 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772211), count: 27, class_loss = 2.396376, iou_loss = 1.953723, total_loss = 4.350099 \n",
            " total_bbox = 738994, rewritten_bbox = 0.003518 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.862779), count: 1, class_loss = 0.247829, iou_loss = 0.229258, total_loss = 0.477087 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.685783), count: 9, class_loss = 0.782039, iou_loss = 0.224740, total_loss = 1.006778 \n",
            " total_bbox = 739004, rewritten_bbox = 0.003518 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000135, iou_loss = 0.000000, total_loss = 0.000135 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730456), count: 5, class_loss = 0.712719, iou_loss = 1.266772, total_loss = 1.979491 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.713779), count: 9, class_loss = 1.871164, iou_loss = 0.431210, total_loss = 2.302374 \n",
            " total_bbox = 739018, rewritten_bbox = 0.003518 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1095/6000: loss=1.5 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1095: 1.479461, 1.893089 avg loss, 0.001000 rate, 7.258327 seconds, 70080 images, 9.098381 hours left\n",
            "Loaded: 0.000060 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.784393), count: 17, class_loss = 2.921057, iou_loss = 31.888906, total_loss = 34.809963 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783449), count: 28, class_loss = 6.246768, iou_loss = 11.463726, total_loss = 17.710493 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.742180), count: 21, class_loss = 4.060839, iou_loss = 1.373170, total_loss = 5.434010 \n",
            " total_bbox = 739084, rewritten_bbox = 0.003518 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.673950), count: 21, class_loss = 5.829555, iou_loss = 57.574600, total_loss = 63.404156 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741395), count: 28, class_loss = 8.389441, iou_loss = 10.949535, total_loss = 19.338976 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765232), count: 22, class_loss = 3.646284, iou_loss = 1.267431, total_loss = 4.913715 \n",
            " total_bbox = 739155, rewritten_bbox = 0.003518 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.633818), count: 9, class_loss = 1.465261, iou_loss = 18.943794, total_loss = 20.409056 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737963), count: 18, class_loss = 2.721701, iou_loss = 5.260296, total_loss = 7.981997 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735495), count: 26, class_loss = 3.374156, iou_loss = 1.334501, total_loss = 4.708656 \n",
            " total_bbox = 739208, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000011, iou_loss = 0.000000, total_loss = 0.000011 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.862923), count: 1, class_loss = 0.290326, iou_loss = 0.116212, total_loss = 0.406538 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781107), count: 8, class_loss = 0.282030, iou_loss = 0.255727, total_loss = 0.537757 \n",
            " total_bbox = 739217, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000509, iou_loss = 0.000000, total_loss = 0.000509 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.808337), count: 1, class_loss = 0.128440, iou_loss = 0.068559, total_loss = 0.196999 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778294), count: 11, class_loss = 1.711427, iou_loss = 0.352736, total_loss = 2.064163 \n",
            " total_bbox = 739229, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000012, iou_loss = 0.000000, total_loss = 0.000012 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772726), count: 2, class_loss = 0.129852, iou_loss = 0.495063, total_loss = 0.624915 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763798), count: 9, class_loss = 0.730981, iou_loss = 0.336899, total_loss = 1.067880 \n",
            " total_bbox = 739240, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.012702, iou_loss = 0.000000, total_loss = 0.012702 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.820734), count: 23, class_loss = 3.055813, iou_loss = 7.423862, total_loss = 10.479674 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748534), count: 22, class_loss = 2.340825, iou_loss = 1.236233, total_loss = 3.577058 \n",
            " total_bbox = 739285, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000043, iou_loss = 0.000000, total_loss = 0.000043 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000107, iou_loss = 0.000000, total_loss = 0.000107 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.796767), count: 9, class_loss = 0.123645, iou_loss = 0.288052, total_loss = 0.411697 \n",
            " total_bbox = 739294, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000078, iou_loss = 0.000000, total_loss = 0.000078 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.869375), count: 1, class_loss = 0.019332, iou_loss = 0.232831, total_loss = 0.252163 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.793382), count: 8, class_loss = 0.720644, iou_loss = 0.231449, total_loss = 0.952092 \n",
            " total_bbox = 739303, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.015085, iou_loss = 0.000000, total_loss = 0.015085 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.757691), count: 9, class_loss = 1.785890, iou_loss = 3.877215, total_loss = 5.663105 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736431), count: 13, class_loss = 1.303659, iou_loss = 0.545443, total_loss = 1.849102 \n",
            " total_bbox = 739325, rewritten_bbox = 0.003517 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.700069), count: 41, class_loss = 3.887093, iou_loss = 105.195503, total_loss = 109.082596 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.691029), count: 32, class_loss = 4.409893, iou_loss = 16.931105, total_loss = 21.340998 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.696455), count: 14, class_loss = 2.946313, iou_loss = 0.923276, total_loss = 3.869589 \n",
            " total_bbox = 739412, rewritten_bbox = 0.003516 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004203, iou_loss = 0.000000, total_loss = 0.004203 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772220), count: 18, class_loss = 2.559378, iou_loss = 5.029645, total_loss = 7.589023 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785966), count: 28, class_loss = 2.067546, iou_loss = 1.918091, total_loss = 3.985636 \n",
            " total_bbox = 739458, rewritten_bbox = 0.003516 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.761629), count: 2, class_loss = 0.758744, iou_loss = 1.728470, total_loss = 2.487213 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.770250), count: 27, class_loss = 5.733963, iou_loss = 8.642548, total_loss = 14.376511 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773604), count: 31, class_loss = 4.563931, iou_loss = 2.613580, total_loss = 7.177511 \n",
            " total_bbox = 739518, rewritten_bbox = 0.003516 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.721667), count: 7, class_loss = 1.611191, iou_loss = 8.737328, total_loss = 10.348518 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753571), count: 30, class_loss = 5.308467, iou_loss = 10.521175, total_loss = 15.829643 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747758), count: 21, class_loss = 2.250461, iou_loss = 1.431304, total_loss = 3.681765 \n",
            " total_bbox = 739576, rewritten_bbox = 0.003516 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.787788), count: 7, class_loss = 1.216900, iou_loss = 10.848198, total_loss = 12.065098 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.788531), count: 12, class_loss = 2.315847, iou_loss = 6.783937, total_loss = 9.099783 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757047), count: 8, class_loss = 0.994959, iou_loss = 0.397539, total_loss = 1.392498 \n",
            " total_bbox = 739603, rewritten_bbox = 0.003515 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000035, iou_loss = 0.000000, total_loss = 0.000035 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.849074), count: 2, class_loss = 0.361930, iou_loss = 0.554218, total_loss = 0.916149 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787761), count: 8, class_loss = 0.927364, iou_loss = 0.242026, total_loss = 1.169389 \n",
            " total_bbox = 739613, rewritten_bbox = 0.003515 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1096/6000: loss=1.9 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1096: 1.945450, 1.898325 avg loss, 0.001000 rate, 7.276896 seconds, 70144 images, 9.106292 hours left\n",
            "Loaded: 0.000060 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664259), count: 1, class_loss = 0.718410, iou_loss = 0.844132, total_loss = 1.562542 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.803914), count: 21, class_loss = 4.041752, iou_loss = 5.520761, total_loss = 9.562513 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777235), count: 36, class_loss = 2.935960, iou_loss = 1.754950, total_loss = 4.690910 \n",
            " total_bbox = 739671, rewritten_bbox = 0.003515 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.527346), count: 8, class_loss = 2.369498, iou_loss = 16.800390, total_loss = 19.169888 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.804035), count: 25, class_loss = 4.013969, iou_loss = 7.332673, total_loss = 11.346642 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767503), count: 30, class_loss = 1.829590, iou_loss = 1.696032, total_loss = 3.525622 \n",
            " total_bbox = 739734, rewritten_bbox = 0.003515 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000050, iou_loss = 0.000000, total_loss = 0.000050 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.817350), count: 11, class_loss = 1.274856, iou_loss = 2.138207, total_loss = 3.413064 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787475), count: 28, class_loss = 2.623058, iou_loss = 1.421695, total_loss = 4.044754 \n",
            " total_bbox = 739773, rewritten_bbox = 0.003515 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000046, iou_loss = 0.000000, total_loss = 0.000046 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.729913), count: 6, class_loss = 1.124797, iou_loss = 1.659564, total_loss = 2.784362 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777835), count: 10, class_loss = 1.158948, iou_loss = 0.611910, total_loss = 1.770858 \n",
            " total_bbox = 739789, rewritten_bbox = 0.003515 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.859892), count: 3, class_loss = 0.731100, iou_loss = 0.846410, total_loss = 1.577510 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.701694), count: 10, class_loss = 1.255345, iou_loss = 0.242708, total_loss = 1.498054 \n",
            " total_bbox = 739802, rewritten_bbox = 0.003514 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.369717), count: 1, class_loss = 0.528146, iou_loss = 3.351930, total_loss = 3.880076 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761216), count: 7, class_loss = 0.987306, iou_loss = 2.385356, total_loss = 3.372662 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775347), count: 15, class_loss = 1.132172, iou_loss = 0.860976, total_loss = 1.993148 \n",
            " total_bbox = 739825, rewritten_bbox = 0.003514 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711555), count: 11, class_loss = 2.370600, iou_loss = 16.699291, total_loss = 19.069891 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.788671), count: 32, class_loss = 5.569234, iou_loss = 12.475093, total_loss = 18.044327 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765681), count: 33, class_loss = 3.848966, iou_loss = 1.801701, total_loss = 5.650667 \n",
            " total_bbox = 739901, rewritten_bbox = 0.003514 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.702285), count: 16, class_loss = 3.953453, iou_loss = 22.291267, total_loss = 26.244720 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781941), count: 41, class_loss = 6.138825, iou_loss = 15.356255, total_loss = 21.495079 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.792063), count: 29, class_loss = 1.873292, iou_loss = 1.756423, total_loss = 3.629716 \n",
            " total_bbox = 739987, rewritten_bbox = 0.003514 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.784188), count: 5, class_loss = 0.388611, iou_loss = 7.867984, total_loss = 8.256596 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765924), count: 13, class_loss = 1.611893, iou_loss = 4.885087, total_loss = 6.496981 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731822), count: 10, class_loss = 1.305340, iou_loss = 0.381150, total_loss = 1.686490 \n",
            " total_bbox = 740015, rewritten_bbox = 0.003513 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000080, iou_loss = 0.000000, total_loss = 0.000080 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.796195), count: 4, class_loss = 1.004135, iou_loss = 0.536193, total_loss = 1.540328 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720968), count: 17, class_loss = 2.362120, iou_loss = 0.721006, total_loss = 3.083126 \n",
            " total_bbox = 740036, rewritten_bbox = 0.003513 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.543718), count: 1, class_loss = 0.642015, iou_loss = 2.967496, total_loss = 3.609512 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792141), count: 6, class_loss = 1.046377, iou_loss = 1.268397, total_loss = 2.314775 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.783239), count: 16, class_loss = 0.450911, iou_loss = 0.690321, total_loss = 1.141233 \n",
            " total_bbox = 740059, rewritten_bbox = 0.003513 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.772640), count: 6, class_loss = 0.940246, iou_loss = 7.571842, total_loss = 8.512088 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766786), count: 28, class_loss = 4.256465, iou_loss = 8.121494, total_loss = 12.377959 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754325), count: 34, class_loss = 3.188951, iou_loss = 2.082063, total_loss = 5.271014 \n",
            " total_bbox = 740127, rewritten_bbox = 0.003513 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690270), count: 2, class_loss = 0.328236, iou_loss = 2.484567, total_loss = 2.812803 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.800908), count: 25, class_loss = 4.176972, iou_loss = 9.019756, total_loss = 13.196728 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712595), count: 30, class_loss = 3.755798, iou_loss = 1.809932, total_loss = 5.565730 \n",
            " total_bbox = 740184, rewritten_bbox = 0.003513 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.793921), count: 18, class_loss = 2.454688, iou_loss = 40.460526, total_loss = 42.915215 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775589), count: 27, class_loss = 3.363280, iou_loss = 13.162598, total_loss = 16.525877 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774327), count: 19, class_loss = 0.785455, iou_loss = 1.369467, total_loss = 2.154922 \n",
            " total_bbox = 740248, rewritten_bbox = 0.003512 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.928357), count: 1, class_loss = 0.089043, iou_loss = 0.265471, total_loss = 0.354514 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.833584), count: 8, class_loss = 0.867760, iou_loss = 0.297657, total_loss = 1.165417 \n",
            " total_bbox = 740257, rewritten_bbox = 0.003512 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000430, iou_loss = 0.000000, total_loss = 0.000430 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.875913), count: 3, class_loss = 0.410792, iou_loss = 0.615018, total_loss = 1.025810 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813834), count: 11, class_loss = 0.398580, iou_loss = 0.564707, total_loss = 0.963287 \n",
            " total_bbox = 740271, rewritten_bbox = 0.003512 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1097/6000: loss=1.8 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1097: 1.760171, 1.884509 avg loss, 0.001000 rate, 7.361637 seconds, 70208 images, 9.114358 hours left\n",
            "Loaded: 0.000059 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.815992), count: 1, class_loss = 0.281929, iou_loss = 1.439472, total_loss = 1.721401 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.769191), count: 24, class_loss = 3.984546, iou_loss = 7.840718, total_loss = 11.825264 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770692), count: 28, class_loss = 2.931298, iou_loss = 2.478287, total_loss = 5.409585 \n",
            " total_bbox = 740324, rewritten_bbox = 0.003512 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.716441), count: 6, class_loss = 1.932674, iou_loss = 7.255106, total_loss = 9.187779 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.792451), count: 44, class_loss = 7.789038, iou_loss = 14.497841, total_loss = 22.286879 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755675), count: 42, class_loss = 4.164467, iou_loss = 2.686552, total_loss = 6.851018 \n",
            " total_bbox = 740416, rewritten_bbox = 0.003512 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.539473), count: 24, class_loss = 5.749639, iou_loss = 42.771938, total_loss = 48.521576 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720534), count: 43, class_loss = 6.352837, iou_loss = 18.915442, total_loss = 25.268278 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750803), count: 21, class_loss = 2.870288, iou_loss = 1.268125, total_loss = 4.138413 \n",
            " total_bbox = 740504, rewritten_bbox = 0.003511 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.625648), count: 9, class_loss = 2.444172, iou_loss = 23.593952, total_loss = 26.038124 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765468), count: 18, class_loss = 4.308697, iou_loss = 5.367470, total_loss = 9.676167 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768476), count: 33, class_loss = 3.329890, iou_loss = 2.029662, total_loss = 5.359552 \n",
            " total_bbox = 740564, rewritten_bbox = 0.003511 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.562154), count: 3, class_loss = 1.048427, iou_loss = 4.228036, total_loss = 5.276464 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749797), count: 18, class_loss = 3.484652, iou_loss = 4.674417, total_loss = 8.159069 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752415), count: 23, class_loss = 2.599188, iou_loss = 1.525034, total_loss = 4.124222 \n",
            " total_bbox = 740608, rewritten_bbox = 0.003511 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000917, iou_loss = 0.000000, total_loss = 0.000917 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.821835), count: 9, class_loss = 1.489646, iou_loss = 1.856583, total_loss = 3.346228 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790773), count: 17, class_loss = 1.355504, iou_loss = 0.987385, total_loss = 2.342889 \n",
            " total_bbox = 740634, rewritten_bbox = 0.003511 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000008, iou_loss = 0.000000, total_loss = 0.000008 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000038, iou_loss = 0.000000, total_loss = 0.000038 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.791355), count: 9, class_loss = 0.409543, iou_loss = 0.255208, total_loss = 0.664751 \n",
            " total_bbox = 740643, rewritten_bbox = 0.003510 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.779761), count: 19, class_loss = 3.321691, iou_loss = 48.287613, total_loss = 51.609303 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.692009), count: 14, class_loss = 2.098010, iou_loss = 8.220661, total_loss = 10.318671 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767932), count: 6, class_loss = 0.405312, iou_loss = 0.133091, total_loss = 0.538403 \n",
            " total_bbox = 740682, rewritten_bbox = 0.003510 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.622646), count: 10, class_loss = 2.681974, iou_loss = 11.599148, total_loss = 14.281122 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767987), count: 32, class_loss = 6.414709, iou_loss = 11.816929, total_loss = 18.231638 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780229), count: 32, class_loss = 2.861510, iou_loss = 2.140308, total_loss = 5.001817 \n",
            " total_bbox = 740756, rewritten_bbox = 0.003510 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.661089), count: 3, class_loss = 0.896398, iou_loss = 6.448760, total_loss = 7.345157 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.766680), count: 25, class_loss = 5.319784, iou_loss = 8.620758, total_loss = 13.940541 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720994), count: 25, class_loss = 4.455241, iou_loss = 1.456103, total_loss = 5.911345 \n",
            " total_bbox = 740809, rewritten_bbox = 0.003510 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.816152), count: 10, class_loss = 0.875370, iou_loss = 25.207207, total_loss = 26.082577 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781917), count: 20, class_loss = 4.059735, iou_loss = 8.707421, total_loss = 12.767157 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.760049), count: 21, class_loss = 3.511584, iou_loss = 1.583408, total_loss = 5.094992 \n",
            " total_bbox = 740860, rewritten_bbox = 0.003509 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.707001), count: 6, class_loss = 0.874737, iou_loss = 17.146214, total_loss = 18.020950 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.743372), count: 24, class_loss = 4.022229, iou_loss = 6.740834, total_loss = 10.763062 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756628), count: 33, class_loss = 2.542721, iou_loss = 1.970082, total_loss = 4.512804 \n",
            " total_bbox = 740923, rewritten_bbox = 0.003509 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.028116, iou_loss = 0.000000, total_loss = 0.028116 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.803665), count: 20, class_loss = 3.546766, iou_loss = 5.594591, total_loss = 9.141357 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778305), count: 38, class_loss = 3.130007, iou_loss = 1.991372, total_loss = 5.121379 \n",
            " total_bbox = 740981, rewritten_bbox = 0.003509 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.625120), count: 2, class_loss = 0.597828, iou_loss = 1.550344, total_loss = 2.148172 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749916), count: 17, class_loss = 2.646923, iou_loss = 5.020473, total_loss = 7.667396 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745744), count: 19, class_loss = 1.662824, iou_loss = 1.108565, total_loss = 2.771389 \n",
            " total_bbox = 741019, rewritten_bbox = 0.003509 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.820257), count: 1, class_loss = 0.027704, iou_loss = 0.173661, total_loss = 0.201365 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.815302), count: 9, class_loss = 0.628660, iou_loss = 0.432473, total_loss = 1.061134 \n",
            " total_bbox = 741029, rewritten_bbox = 0.003509 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.914209), count: 1, class_loss = 0.170871, iou_loss = 0.215378, total_loss = 0.386248 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803455), count: 9, class_loss = 0.620715, iou_loss = 0.288384, total_loss = 0.909100 \n",
            " total_bbox = 741039, rewritten_bbox = 0.003509 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1098/6000: loss=2.4 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1098: 2.377367, 1.933795 avg loss, 0.001000 rate, 7.232786 seconds, 70272 images, 9.123477 hours left\n",
            "Loaded: 0.000062 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.001745, iou_loss = 0.000000, total_loss = 0.001745 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.729112), count: 11, class_loss = 2.281470, iou_loss = 0.241112, total_loss = 2.522582 \n",
            " total_bbox = 741050, rewritten_bbox = 0.003509 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.711535), count: 6, class_loss = 0.414621, iou_loss = 10.765686, total_loss = 11.180307 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753071), count: 10, class_loss = 0.419426, iou_loss = 7.463873, total_loss = 7.883299 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.735063), count: 8, class_loss = 0.289279, iou_loss = 0.237249, total_loss = 0.526528 \n",
            " total_bbox = 741074, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.635982), count: 5, class_loss = 1.406108, iou_loss = 13.977399, total_loss = 15.383507 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.687616), count: 23, class_loss = 4.320720, iou_loss = 7.046057, total_loss = 11.366777 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778269), count: 17, class_loss = 2.216134, iou_loss = 2.037475, total_loss = 4.253609 \n",
            " total_bbox = 741119, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.876696), count: 2, class_loss = 0.298587, iou_loss = 0.443865, total_loss = 0.742452 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.830132), count: 11, class_loss = 1.268277, iou_loss = 0.421202, total_loss = 1.689479 \n",
            " total_bbox = 741132, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.772899), count: 11, class_loss = 0.464900, iou_loss = 29.748354, total_loss = 30.213253 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.804826), count: 5, class_loss = 1.107352, iou_loss = 4.668096, total_loss = 5.775448 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757539), count: 8, class_loss = 1.160575, iou_loss = 0.297304, total_loss = 1.457879 \n",
            " total_bbox = 741156, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.576608), count: 12, class_loss = 3.656570, iou_loss = 15.142572, total_loss = 18.799143 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.688251), count: 40, class_loss = 4.858505, iou_loss = 13.605650, total_loss = 18.464155 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.716363), count: 24, class_loss = 2.104260, iou_loss = 3.718165, total_loss = 5.822424 \n",
            " total_bbox = 741232, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000117, iou_loss = 0.000000, total_loss = 0.000117 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.801503), count: 1, class_loss = 0.252334, iou_loss = 0.079252, total_loss = 0.331587 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790670), count: 8, class_loss = 0.476289, iou_loss = 0.266508, total_loss = 0.742797 \n",
            " total_bbox = 741241, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.005857, iou_loss = 0.000000, total_loss = 0.005857 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781305), count: 6, class_loss = 0.894537, iou_loss = 1.242766, total_loss = 2.137303 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772297), count: 11, class_loss = 1.749197, iou_loss = 0.722680, total_loss = 2.471876 \n",
            " total_bbox = 741258, rewritten_bbox = 0.003508 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.754554), count: 15, class_loss = 3.522574, iou_loss = 30.921551, total_loss = 34.444126 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759901), count: 16, class_loss = 2.543677, iou_loss = 8.859838, total_loss = 11.403515 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788930), count: 7, class_loss = 0.732533, iou_loss = 0.289293, total_loss = 1.021826 \n",
            " total_bbox = 741296, rewritten_bbox = 0.003507 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000117, iou_loss = 0.000000, total_loss = 0.000117 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750776), count: 10, class_loss = 0.422364, iou_loss = 0.326983, total_loss = 0.749347 \n",
            " total_bbox = 741306, rewritten_bbox = 0.003507 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000494, iou_loss = 0.000000, total_loss = 0.000494 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.796262), count: 13, class_loss = 2.123784, iou_loss = 4.130684, total_loss = 6.254467 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754698), count: 12, class_loss = 1.869180, iou_loss = 0.486197, total_loss = 2.355377 \n",
            " total_bbox = 741331, rewritten_bbox = 0.003507 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000022, iou_loss = 0.000000, total_loss = 0.000022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747182), count: 3, class_loss = 0.505340, iou_loss = 0.611808, total_loss = 1.117148 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747758), count: 10, class_loss = 2.527942, iou_loss = 0.428035, total_loss = 2.955977 \n",
            " total_bbox = 741344, rewritten_bbox = 0.003507 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.010711, iou_loss = 0.000000, total_loss = 0.010711 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.829689), count: 3, class_loss = 0.668280, iou_loss = 0.709723, total_loss = 1.378003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764355), count: 10, class_loss = 0.750129, iou_loss = 0.403603, total_loss = 1.153732 \n",
            " total_bbox = 741357, rewritten_bbox = 0.003507 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.710295), count: 21, class_loss = 3.047640, iou_loss = 46.776157, total_loss = 49.823799 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720252), count: 35, class_loss = 5.877059, iou_loss = 16.116711, total_loss = 21.993771 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.779811), count: 18, class_loss = 2.095152, iou_loss = 1.284947, total_loss = 3.380099 \n",
            " total_bbox = 741431, rewritten_bbox = 0.003507 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000697, iou_loss = 0.000000, total_loss = 0.000697 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739162), count: 27, class_loss = 4.239147, iou_loss = 6.015425, total_loss = 10.254572 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774836), count: 41, class_loss = 5.427905, iou_loss = 2.419573, total_loss = 7.847478 \n",
            " total_bbox = 741499, rewritten_bbox = 0.003506 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.605910), count: 5, class_loss = 1.465709, iou_loss = 14.537690, total_loss = 16.003399 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.781468), count: 36, class_loss = 5.954018, iou_loss = 11.081404, total_loss = 17.035421 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764209), count: 38, class_loss = 5.587818, iou_loss = 2.972325, total_loss = 8.560143 \n",
            " total_bbox = 741578, rewritten_bbox = 0.003506 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1099/6000: loss=1.6 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1099: 1.649598, 1.905375 avg loss, 0.001000 rate, 7.255055 seconds, 70336 images, 9.130729 hours left\n",
            "Loaded: 0.000069 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.626955), count: 2, class_loss = 0.623077, iou_loss = 4.274441, total_loss = 4.897518 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.700345), count: 20, class_loss = 4.414925, iou_loss = 5.406556, total_loss = 9.821481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759963), count: 29, class_loss = 4.367755, iou_loss = 1.463831, total_loss = 5.831586 \n",
            " total_bbox = 741629, rewritten_bbox = 0.003506 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690266), count: 1, class_loss = 0.498575, iou_loss = 0.650790, total_loss = 1.149365 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767271), count: 24, class_loss = 5.074564, iou_loss = 6.857155, total_loss = 11.931720 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.783083), count: 29, class_loss = 2.215950, iou_loss = 1.810635, total_loss = 4.026586 \n",
            " total_bbox = 741683, rewritten_bbox = 0.003506 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.726605), count: 1, class_loss = 0.303865, iou_loss = 6.567728, total_loss = 6.871593 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.874640), count: 9, class_loss = 1.100044, iou_loss = 2.550537, total_loss = 3.650581 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813310), count: 26, class_loss = 1.558630, iou_loss = 1.374476, total_loss = 2.933106 \n",
            " total_bbox = 741719, rewritten_bbox = 0.003505 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787505), count: 1, class_loss = 0.244157, iou_loss = 0.190983, total_loss = 0.435139 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755884), count: 10, class_loss = 1.943447, iou_loss = 0.313384, total_loss = 2.256830 \n",
            " total_bbox = 741730, rewritten_bbox = 0.003505 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.657699), count: 1, class_loss = 0.219111, iou_loss = 0.117524, total_loss = 0.336635 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720782), count: 10, class_loss = 0.797332, iou_loss = 0.307380, total_loss = 1.104712 \n",
            " total_bbox = 741741, rewritten_bbox = 0.003505 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.797244), count: 4, class_loss = 0.821151, iou_loss = 8.283823, total_loss = 9.104974 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.799271), count: 9, class_loss = 1.230935, iou_loss = 4.007502, total_loss = 5.238436 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787145), count: 20, class_loss = 1.932047, iou_loss = 0.922491, total_loss = 2.854538 \n",
            " total_bbox = 741774, rewritten_bbox = 0.003505 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.062881, iou_loss = 0.000000, total_loss = 0.062881 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778799), count: 8, class_loss = 2.092861, iou_loss = 1.529602, total_loss = 3.622463 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756022), count: 30, class_loss = 4.810517, iou_loss = 1.171702, total_loss = 5.982219 \n",
            " total_bbox = 741812, rewritten_bbox = 0.003505 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.687856), count: 27, class_loss = 7.636235, iou_loss = 60.402584, total_loss = 68.038818 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759239), count: 54, class_loss = 10.756716, iou_loss = 25.417788, total_loss = 36.174503 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.758817), count: 33, class_loss = 3.588481, iou_loss = 2.769268, total_loss = 6.357749 \n",
            " total_bbox = 741926, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.772786), count: 1, class_loss = 0.219601, iou_loss = 0.156379, total_loss = 0.375981 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764072), count: 11, class_loss = 1.336200, iou_loss = 0.406313, total_loss = 1.742513 \n",
            " total_bbox = 741938, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.002225, iou_loss = 0.000000, total_loss = 0.002225 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.854433), count: 5, class_loss = 0.696657, iou_loss = 0.828278, total_loss = 1.524936 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.767127), count: 13, class_loss = 0.766635, iou_loss = 0.692224, total_loss = 1.458858 \n",
            " total_bbox = 741956, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.908802), count: 1, class_loss = 0.073953, iou_loss = 0.254396, total_loss = 0.328350 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736852), count: 9, class_loss = 0.698145, iou_loss = 0.229362, total_loss = 0.927507 \n",
            " total_bbox = 741966, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000011, iou_loss = 0.000000, total_loss = 0.000011 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.818123), count: 1, class_loss = 0.051961, iou_loss = 0.079418, total_loss = 0.131379 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.809614), count: 9, class_loss = 0.841931, iou_loss = 0.388426, total_loss = 1.230356 \n",
            " total_bbox = 741976, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.750711), count: 22, class_loss = 4.338557, iou_loss = 36.054535, total_loss = 40.393093 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.741363), count: 40, class_loss = 5.733922, iou_loss = 16.690744, total_loss = 22.424665 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.743501), count: 12, class_loss = 1.063514, iou_loss = 0.839512, total_loss = 1.903027 \n",
            " total_bbox = 742050, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.667237), count: 1, class_loss = 0.169902, iou_loss = 1.086858, total_loss = 1.256760 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749218), count: 17, class_loss = 2.267940, iou_loss = 4.955154, total_loss = 7.223094 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747328), count: 25, class_loss = 3.733217, iou_loss = 1.327991, total_loss = 5.061208 \n",
            " total_bbox = 742093, rewritten_bbox = 0.003504 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.630366), count: 2, class_loss = 0.735723, iou_loss = 2.907897, total_loss = 3.643620 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778087), count: 15, class_loss = 2.371663, iou_loss = 3.863166, total_loss = 6.234829 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813895), count: 29, class_loss = 2.166802, iou_loss = 1.913366, total_loss = 4.080168 \n",
            " total_bbox = 742139, rewritten_bbox = 0.003503 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.660305), count: 8, class_loss = 1.853736, iou_loss = 24.265505, total_loss = 26.119242 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767879), count: 28, class_loss = 5.111125, iou_loss = 8.892960, total_loss = 14.004084 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765062), count: 28, class_loss = 2.415937, iou_loss = 1.893853, total_loss = 4.309791 \n",
            " total_bbox = 742203, rewritten_bbox = 0.003503 % \n",
            "\n",
            " (next mAP calculation at 1100 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 68.81 %, best = 68.81 % \u001b]2;1100/6000: loss=1.9 map=0.69 best=0.69 hours left=9.1\u0007\n",
            " 1100: 1.939938, 1.908832 avg loss, 0.001000 rate, 7.324237 seconds, 70400 images, 9.138193 hours left\n",
            "Resizing to initial size: 416 x 416  try to allocate additional workspace_size = 111.05 MB \n",
            " CUDA allocate done! \n",
            "\n",
            " calculation mAP (mean average precision)...\n",
            " Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "152\n",
            " detections_count = 1699, unique_truth_count = 329  \n",
            "class_id = 0, name = with_mask, ap = 86.22%   \t (TP = 222, FP = 71) \n",
            "class_id = 1, name = without_mask, ap = 85.88%   \t (TP = 51, FP = 12) \n",
            "\n",
            " for conf_thresh = 0.25, precision = 0.77, recall = 0.83, F1-score = 0.80 \n",
            " for conf_thresh = 0.25, TP = 273, FP = 83, FN = 56, average IoU = 55.69 % \n",
            "\n",
            " IoU threshold = 50 %, used Area-Under-Curve for each unique Recall \n",
            " mean average precision (mAP@0.50) = 0.860494, or 86.05 % \n",
            "Total Detection Time: 5 Seconds\n",
            "\n",
            "Set -points flag:\n",
            " `-points 101` for MS COCO \n",
            " `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) \n",
            " `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset\n",
            "\n",
            " mean_average_precision (mAP@0.50) = 0.860494 \n",
            "New best mAP!\n",
            "Saving weights to /mydrive/yolov4/training/yolov4-custom_best.weights\n",
            "Saving weights to /mydrive/yolov4/training/yolov4-custom_last.weights\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 448 x 448 \n",
            " try to allocate additional workspace_size = 128.79 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 0.000050 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.700160), count: 8, class_loss = 1.247167, iou_loss = 11.779332, total_loss = 13.026499 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755472), count: 28, class_loss = 4.989623, iou_loss = 5.876132, total_loss = 10.865755 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800531), count: 25, class_loss = 3.637878, iou_loss = 1.585331, total_loss = 5.223210 \n",
            " total_bbox = 742264, rewritten_bbox = 0.003503 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.705558), count: 26, class_loss = 5.906338, iou_loss = 41.819813, total_loss = 47.726151 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.714474), count: 43, class_loss = 7.748743, iou_loss = 14.499426, total_loss = 22.248169 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788596), count: 16, class_loss = 1.321248, iou_loss = 1.104386, total_loss = 2.425634 \n",
            " total_bbox = 742349, rewritten_bbox = 0.003502 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.672254), count: 24, class_loss = 8.482393, iou_loss = 37.474846, total_loss = 45.957237 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.701919), count: 33, class_loss = 6.772678, iou_loss = 8.788610, total_loss = 15.561288 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738906), count: 29, class_loss = 3.187040, iou_loss = 1.361315, total_loss = 4.548355 \n",
            " total_bbox = 742435, rewritten_bbox = 0.003502 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.689290), count: 1, class_loss = 0.230661, iou_loss = 0.657617, total_loss = 0.888278 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.770556), count: 22, class_loss = 3.502476, iou_loss = 4.210232, total_loss = 7.712708 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.804723), count: 32, class_loss = 4.615884, iou_loss = 1.679814, total_loss = 6.295699 \n",
            " total_bbox = 742490, rewritten_bbox = 0.003502 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.690263), count: 4, class_loss = 1.114307, iou_loss = 6.443534, total_loss = 7.557840 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.796032), count: 24, class_loss = 3.495211, iou_loss = 5.725678, total_loss = 9.220889 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.775298), count: 23, class_loss = 2.385833, iou_loss = 1.569141, total_loss = 3.954974 \n",
            " total_bbox = 742541, rewritten_bbox = 0.003501 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000803, iou_loss = 0.000000, total_loss = 0.000803 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774042), count: 12, class_loss = 3.340557, iou_loss = 2.224264, total_loss = 5.564820 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788743), count: 18, class_loss = 2.096111, iou_loss = 0.706572, total_loss = 2.802682 \n",
            " total_bbox = 742571, rewritten_bbox = 0.003501 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.840485), count: 2, class_loss = 0.119001, iou_loss = 0.172714, total_loss = 0.291716 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787435), count: 9, class_loss = 1.198555, iou_loss = 0.249210, total_loss = 1.447765 \n",
            " total_bbox = 742582, rewritten_bbox = 0.003501 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.837710), count: 5, class_loss = 0.236093, iou_loss = 1.059891, total_loss = 1.295985 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756693), count: 8, class_loss = 0.623944, iou_loss = 0.283978, total_loss = 0.907923 \n",
            " total_bbox = 742595, rewritten_bbox = 0.003501 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.699319), count: 20, class_loss = 3.884219, iou_loss = 50.686234, total_loss = 54.570454 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736634), count: 22, class_loss = 2.334987, iou_loss = 5.909399, total_loss = 8.244386 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787021), count: 25, class_loss = 1.820085, iou_loss = 1.235663, total_loss = 3.055748 \n",
            " total_bbox = 742662, rewritten_bbox = 0.003501 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.839900), count: 11, class_loss = 2.693879, iou_loss = 17.177368, total_loss = 19.871248 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.734499), count: 30, class_loss = 5.863205, iou_loss = 7.318704, total_loss = 13.181909 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747119), count: 26, class_loss = 2.975991, iou_loss = 1.095583, total_loss = 4.071574 \n",
            " total_bbox = 742729, rewritten_bbox = 0.003501 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.505726), count: 5, class_loss = 1.634249, iou_loss = 9.828441, total_loss = 11.462690 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752426), count: 20, class_loss = 4.171740, iou_loss = 3.506242, total_loss = 7.677982 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773261), count: 26, class_loss = 3.207656, iou_loss = 1.100705, total_loss = 4.308362 \n",
            " total_bbox = 742780, rewritten_bbox = 0.003500 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.825273), count: 2, class_loss = 0.474531, iou_loss = 2.284586, total_loss = 2.759117 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740003), count: 37, class_loss = 5.874754, iou_loss = 8.564774, total_loss = 14.439528 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744297), count: 30, class_loss = 2.087803, iou_loss = 1.577213, total_loss = 3.665016 \n",
            " total_bbox = 742849, rewritten_bbox = 0.003500 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.596845), count: 16, class_loss = 4.282873, iou_loss = 27.416052, total_loss = 31.698925 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.713668), count: 29, class_loss = 4.351582, iou_loss = 7.418974, total_loss = 11.770556 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745284), count: 21, class_loss = 3.682613, iou_loss = 1.485501, total_loss = 5.168114 \n",
            " total_bbox = 742915, rewritten_bbox = 0.003500 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.001187, iou_loss = 0.000000, total_loss = 0.001187 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.745575), count: 7, class_loss = 1.061150, iou_loss = 1.290551, total_loss = 2.351701 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.771885), count: 16, class_loss = 1.447540, iou_loss = 0.513465, total_loss = 1.961005 \n",
            " total_bbox = 742938, rewritten_bbox = 0.003500 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000198, iou_loss = 0.000000, total_loss = 0.000198 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787009), count: 9, class_loss = 0.783330, iou_loss = 0.194763, total_loss = 0.978093 \n",
            " total_bbox = 742947, rewritten_bbox = 0.003500 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.765293), count: 3, class_loss = 0.489816, iou_loss = 0.448445, total_loss = 0.938261 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.726141), count: 10, class_loss = 0.592658, iou_loss = 0.273538, total_loss = 0.866197 \n",
            " total_bbox = 742960, rewritten_bbox = 0.003500 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1101/6000: loss=2.5 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1101: 2.503128, 1.968261 avg loss, 0.001000 rate, 5.963664 seconds, 70464 images, 9.247267 hours left\n",
            "Loaded: 0.000052 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000091, iou_loss = 0.000000, total_loss = 0.000091 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.735807), count: 4, class_loss = 0.418642, iou_loss = 0.550216, total_loss = 0.968858 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.868777), count: 10, class_loss = 0.750372, iou_loss = 0.581708, total_loss = 1.332080 \n",
            " total_bbox = 742974, rewritten_bbox = 0.003499 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.843940), count: 1, class_loss = 0.128779, iou_loss = 0.148965, total_loss = 0.277744 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769756), count: 9, class_loss = 1.073502, iou_loss = 0.143109, total_loss = 1.216610 \n",
            " total_bbox = 742984, rewritten_bbox = 0.003499 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000019, iou_loss = 0.000000, total_loss = 0.000019 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.812621), count: 11, class_loss = 0.970372, iou_loss = 3.061109, total_loss = 4.031481 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.830343), count: 10, class_loss = 1.291999, iou_loss = 0.626941, total_loss = 1.918940 \n",
            " total_bbox = 743005, rewritten_bbox = 0.003499 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.795380), count: 4, class_loss = 1.398559, iou_loss = 3.746058, total_loss = 5.144617 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.815718), count: 21, class_loss = 3.845558, iou_loss = 6.462306, total_loss = 10.307864 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764711), count: 15, class_loss = 1.668388, iou_loss = 1.043099, total_loss = 2.711488 \n",
            " total_bbox = 743045, rewritten_bbox = 0.003499 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000029, iou_loss = 0.000000, total_loss = 0.000029 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.258647, iou_loss = 0.000000, total_loss = 0.258647 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756419), count: 9, class_loss = 1.218839, iou_loss = 0.199790, total_loss = 1.418629 \n",
            " total_bbox = 743054, rewritten_bbox = 0.003499 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.668279), count: 13, class_loss = 2.945303, iou_loss = 19.025042, total_loss = 21.970345 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752922), count: 20, class_loss = 2.440136, iou_loss = 6.040862, total_loss = 8.480998 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772662), count: 17, class_loss = 1.631313, iou_loss = 0.772905, total_loss = 2.404218 \n",
            " total_bbox = 743104, rewritten_bbox = 0.003499 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759119), count: 11, class_loss = 2.165993, iou_loss = 13.212105, total_loss = 15.378098 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.767305), count: 37, class_loss = 6.102992, iou_loss = 10.356275, total_loss = 16.459267 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.750566), count: 24, class_loss = 2.961246, iou_loss = 1.133453, total_loss = 4.094699 \n",
            " total_bbox = 743176, rewritten_bbox = 0.003498 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.617521), count: 5, class_loss = 2.550857, iou_loss = 6.912029, total_loss = 9.462886 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.733004), count: 33, class_loss = 6.677690, iou_loss = 7.715756, total_loss = 14.393446 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.791324), count: 31, class_loss = 2.016768, iou_loss = 1.583613, total_loss = 3.600381 \n",
            " total_bbox = 743245, rewritten_bbox = 0.003498 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.777801), count: 15, class_loss = 4.769210, iou_loss = 25.804646, total_loss = 30.573856 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.776989), count: 36, class_loss = 3.783279, iou_loss = 11.302511, total_loss = 15.085790 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752430), count: 13, class_loss = 0.738146, iou_loss = 1.065312, total_loss = 1.803458 \n",
            " total_bbox = 743309, rewritten_bbox = 0.003498 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000009, iou_loss = 0.000000, total_loss = 0.000009 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.860834), count: 1, class_loss = 0.067993, iou_loss = 0.058272, total_loss = 0.126265 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.798979), count: 9, class_loss = 1.107142, iou_loss = 0.268053, total_loss = 1.375195 \n",
            " total_bbox = 743319, rewritten_bbox = 0.003498 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.015246, iou_loss = 0.000000, total_loss = 0.015246 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.831097), count: 6, class_loss = 1.094291, iou_loss = 1.260862, total_loss = 2.355153 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777066), count: 15, class_loss = 1.470750, iou_loss = 0.494577, total_loss = 1.965328 \n",
            " total_bbox = 743340, rewritten_bbox = 0.003498 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.003896, iou_loss = 0.000000, total_loss = 0.003896 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782809), count: 20, class_loss = 2.393743, iou_loss = 3.642114, total_loss = 6.035857 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.812893), count: 30, class_loss = 2.228966, iou_loss = 1.513834, total_loss = 3.742799 \n",
            " total_bbox = 743390, rewritten_bbox = 0.003497 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.727895), count: 3, class_loss = 0.520424, iou_loss = 2.794169, total_loss = 3.314593 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747225), count: 23, class_loss = 3.858202, iou_loss = 4.030428, total_loss = 7.888630 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.733251), count: 29, class_loss = 3.105574, iou_loss = 1.354432, total_loss = 4.460006 \n",
            " total_bbox = 743445, rewritten_bbox = 0.003497 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.002446, iou_loss = 0.000000, total_loss = 0.002446 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.740164), count: 13, class_loss = 4.261774, iou_loss = 1.771843, total_loss = 6.033617 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746125), count: 21, class_loss = 2.149408, iou_loss = 0.801855, total_loss = 2.951263 \n",
            " total_bbox = 743479, rewritten_bbox = 0.003497 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000020, iou_loss = 0.000000, total_loss = 0.000020 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.834662), count: 2, class_loss = 0.066088, iou_loss = 0.304537, total_loss = 0.370625 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.809070), count: 8, class_loss = 0.663479, iou_loss = 0.216616, total_loss = 0.880095 \n",
            " total_bbox = 743489, rewritten_bbox = 0.003497 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.740063), count: 12, class_loss = 1.692688, iou_loss = 18.401440, total_loss = 20.094128 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.760871), count: 21, class_loss = 2.586502, iou_loss = 7.056986, total_loss = 9.643488 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.776057), count: 13, class_loss = 0.754915, iou_loss = 0.513462, total_loss = 1.268376 \n",
            " total_bbox = 743535, rewritten_bbox = 0.003497 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1102/6000: loss=1.7 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1102: 1.666686, 1.938104 avg loss, 0.001000 rate, 5.943128 seconds, 70528 images, 9.235951 hours left\n",
            "Loaded: 0.000064 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.677613), count: 15, class_loss = 3.873997, iou_loss = 20.594543, total_loss = 24.468540 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725914), count: 29, class_loss = 5.115204, iou_loss = 7.509458, total_loss = 12.624662 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770646), count: 22, class_loss = 2.622329, iou_loss = 1.057980, total_loss = 3.680309 \n",
            " total_bbox = 743601, rewritten_bbox = 0.003496 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.644169), count: 7, class_loss = 1.740380, iou_loss = 5.785395, total_loss = 7.525774 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727422), count: 22, class_loss = 5.278227, iou_loss = 4.397836, total_loss = 9.676064 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.804802), count: 22, class_loss = 3.189864, iou_loss = 1.348027, total_loss = 4.537891 \n",
            " total_bbox = 743652, rewritten_bbox = 0.003496 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.756986), count: 2, class_loss = 0.535197, iou_loss = 6.530670, total_loss = 7.065866 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.779868), count: 11, class_loss = 2.326334, iou_loss = 1.809461, total_loss = 4.135794 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.808277), count: 23, class_loss = 1.632566, iou_loss = 0.970163, total_loss = 2.602729 \n",
            " total_bbox = 743688, rewritten_bbox = 0.003496 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.078825, iou_loss = 0.000000, total_loss = 0.078825 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772150), count: 10, class_loss = 0.813008, iou_loss = 0.272051, total_loss = 1.085059 \n",
            " total_bbox = 743698, rewritten_bbox = 0.003496 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.776251), count: 1, class_loss = 0.058823, iou_loss = 0.142065, total_loss = 0.200888 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785759), count: 10, class_loss = 0.264091, iou_loss = 0.275189, total_loss = 0.539280 \n",
            " total_bbox = 743709, rewritten_bbox = 0.003496 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.693121), count: 15, class_loss = 2.812636, iou_loss = 15.649962, total_loss = 18.462599 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749220), count: 32, class_loss = 4.527869, iou_loss = 9.324940, total_loss = 13.852809 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781525), count: 17, class_loss = 1.914238, iou_loss = 0.913985, total_loss = 2.828223 \n",
            " total_bbox = 743773, rewritten_bbox = 0.003496 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.777387), count: 1, class_loss = 0.457522, iou_loss = 0.782429, total_loss = 1.239950 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.759925), count: 21, class_loss = 4.082808, iou_loss = 3.582113, total_loss = 7.664921 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.777535), count: 23, class_loss = 2.532443, iou_loss = 1.226453, total_loss = 3.758896 \n",
            " total_bbox = 743818, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.802122), count: 14, class_loss = 2.500662, iou_loss = 19.443960, total_loss = 21.944622 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755372), count: 46, class_loss = 5.967259, iou_loss = 14.249516, total_loss = 20.216776 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.759413), count: 21, class_loss = 2.730101, iou_loss = 1.765463, total_loss = 4.495564 \n",
            " total_bbox = 743899, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.802691), count: 8, class_loss = 0.592430, iou_loss = 10.025775, total_loss = 10.618205 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.812988), count: 22, class_loss = 2.450706, iou_loss = 7.864849, total_loss = 10.315555 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761415), count: 10, class_loss = 1.130876, iou_loss = 0.812324, total_loss = 1.943201 \n",
            " total_bbox = 743939, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.777295), count: 11, class_loss = 0.968465, iou_loss = 17.387726, total_loss = 18.356190 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.770482), count: 17, class_loss = 0.448790, iou_loss = 5.731085, total_loss = 6.179875 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797393), count: 10, class_loss = 0.186978, iou_loss = 0.370842, total_loss = 0.557820 \n",
            " total_bbox = 743977, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.004203, iou_loss = 0.000000, total_loss = 0.004203 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.243821, iou_loss = 0.000000, total_loss = 0.243821 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.803500), count: 11, class_loss = 0.547843, iou_loss = 0.345937, total_loss = 0.893779 \n",
            " total_bbox = 743988, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000015, iou_loss = 0.000000, total_loss = 0.000015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.826338), count: 4, class_loss = 0.261979, iou_loss = 0.719680, total_loss = 0.981659 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797908), count: 9, class_loss = 0.397358, iou_loss = 0.390729, total_loss = 0.788087 \n",
            " total_bbox = 744001, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000067, iou_loss = 0.000000, total_loss = 0.000067 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747114), count: 1, class_loss = 0.214753, iou_loss = 0.131644, total_loss = 0.346397 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788478), count: 9, class_loss = 0.475353, iou_loss = 0.247767, total_loss = 0.723120 \n",
            " total_bbox = 744011, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000005, iou_loss = 0.000000, total_loss = 0.000005 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.835024), count: 1, class_loss = 0.082273, iou_loss = 0.164437, total_loss = 0.246710 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.835855), count: 8, class_loss = 0.244304, iou_loss = 0.198092, total_loss = 0.442396 \n",
            " total_bbox = 744020, rewritten_bbox = 0.003495 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.682082), count: 2, class_loss = 0.266528, iou_loss = 1.739782, total_loss = 2.006310 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782190), count: 15, class_loss = 1.329005, iou_loss = 3.410352, total_loss = 4.739357 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754475), count: 15, class_loss = 2.227600, iou_loss = 0.541959, total_loss = 2.769559 \n",
            " total_bbox = 744052, rewritten_bbox = 0.003494 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.802987), count: 7, class_loss = 0.875148, iou_loss = 17.803959, total_loss = 18.679108 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.822234), count: 12, class_loss = 1.074606, iou_loss = 3.835135, total_loss = 4.909741 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.862295), count: 13, class_loss = 1.982895, iou_loss = 1.451793, total_loss = 3.434688 \n",
            " total_bbox = 744084, rewritten_bbox = 0.003494 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1103/6000: loss=1.5 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1103: 1.483725, 1.892666 avg loss, 0.001000 rate, 6.117718 seconds, 70592 images, 9.224452 hours left\n",
            "Loaded: 0.000066 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.737885), count: 90, class_loss = 8.934620, iou_loss = 207.809464, total_loss = 216.744080 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.658149), count: 40, class_loss = 7.885404, iou_loss = 10.531826, total_loss = 18.417231 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753984), count: 22, class_loss = 1.595781, iou_loss = 1.023500, total_loss = 2.619280 \n",
            " total_bbox = 744236, rewritten_bbox = 0.003494 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.645731), count: 3, class_loss = 1.308301, iou_loss = 3.455660, total_loss = 4.763961 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.709844), count: 14, class_loss = 2.921802, iou_loss = 2.363026, total_loss = 5.284828 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778940), count: 24, class_loss = 2.122952, iou_loss = 0.970794, total_loss = 3.093746 \n",
            " total_bbox = 744277, rewritten_bbox = 0.003493 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722819), count: 14, class_loss = 2.639371, iou_loss = 18.949776, total_loss = 21.589148 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749578), count: 50, class_loss = 6.301237, iou_loss = 14.412977, total_loss = 20.714214 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.718619), count: 25, class_loss = 3.331458, iou_loss = 1.580311, total_loss = 4.911769 \n",
            " total_bbox = 744366, rewritten_bbox = 0.003493 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.696031), count: 7, class_loss = 1.681331, iou_loss = 10.679171, total_loss = 12.360501 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.784780), count: 41, class_loss = 6.342511, iou_loss = 11.352504, total_loss = 17.695015 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769232), count: 25, class_loss = 2.955062, iou_loss = 1.895043, total_loss = 4.850105 \n",
            " total_bbox = 744439, rewritten_bbox = 0.003493 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.621953), count: 6, class_loss = 1.773457, iou_loss = 7.411021, total_loss = 9.184478 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795150), count: 27, class_loss = 4.641699, iou_loss = 6.326189, total_loss = 10.967888 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.745122), count: 25, class_loss = 2.421208, iou_loss = 1.330632, total_loss = 3.751840 \n",
            " total_bbox = 744497, rewritten_bbox = 0.003492 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728859), count: 1, class_loss = 0.246349, iou_loss = 0.871620, total_loss = 1.117969 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753178), count: 15, class_loss = 2.764984, iou_loss = 2.971091, total_loss = 5.736075 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.783803), count: 17, class_loss = 2.323968, iou_loss = 0.958298, total_loss = 3.282265 \n",
            " total_bbox = 744530, rewritten_bbox = 0.003492 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.519478), count: 1, class_loss = 0.621068, iou_loss = 0.668110, total_loss = 1.289178 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.819906), count: 12, class_loss = 1.327864, iou_loss = 3.282884, total_loss = 4.610748 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.728465), count: 16, class_loss = 1.646342, iou_loss = 0.748046, total_loss = 2.394388 \n",
            " total_bbox = 744559, rewritten_bbox = 0.003492 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000010, iou_loss = 0.000000, total_loss = 0.000010 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.815508), count: 12, class_loss = 0.750564, iou_loss = 3.514853, total_loss = 4.265417 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.802111), count: 13, class_loss = 1.024285, iou_loss = 0.789616, total_loss = 1.813901 \n",
            " total_bbox = 744584, rewritten_bbox = 0.003492 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.772625), count: 4, class_loss = 1.198602, iou_loss = 6.310815, total_loss = 7.509418 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.788989), count: 16, class_loss = 2.979932, iou_loss = 3.386213, total_loss = 6.366145 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739870), count: 19, class_loss = 2.406638, iou_loss = 0.755954, total_loss = 3.162592 \n",
            " total_bbox = 744623, rewritten_bbox = 0.003492 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.765316), count: 19, class_loss = 1.942946, iou_loss = 30.208708, total_loss = 32.151653 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786946), count: 56, class_loss = 7.694576, iou_loss = 17.485884, total_loss = 25.180460 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.731379), count: 36, class_loss = 4.004427, iou_loss = 1.662961, total_loss = 5.667388 \n",
            " total_bbox = 744734, rewritten_bbox = 0.003491 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.700911), count: 14, class_loss = 4.657549, iou_loss = 17.215492, total_loss = 21.873041 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756388), count: 40, class_loss = 7.075050, iou_loss = 9.965092, total_loss = 17.040142 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.740840), count: 31, class_loss = 3.334126, iou_loss = 1.408890, total_loss = 4.743016 \n",
            " total_bbox = 744819, rewritten_bbox = 0.003491 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.716575), count: 5, class_loss = 1.148320, iou_loss = 6.885293, total_loss = 8.033613 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.723979), count: 20, class_loss = 2.623313, iou_loss = 3.504992, total_loss = 6.128305 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.812096), count: 27, class_loss = 2.671166, iou_loss = 1.319608, total_loss = 3.990774 \n",
            " total_bbox = 744871, rewritten_bbox = 0.003491 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.673647), count: 13, class_loss = 2.222254, iou_loss = 17.801851, total_loss = 20.024105 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.752541), count: 28, class_loss = 4.560667, iou_loss = 9.477619, total_loss = 14.038286 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.762324), count: 21, class_loss = 1.127021, iou_loss = 0.972457, total_loss = 2.099478 \n",
            " total_bbox = 744933, rewritten_bbox = 0.003490 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684418), count: 7, class_loss = 0.623309, iou_loss = 13.990848, total_loss = 14.614157 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.799812), count: 16, class_loss = 2.048951, iou_loss = 4.143055, total_loss = 6.192006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765322), count: 19, class_loss = 0.937579, iou_loss = 0.875510, total_loss = 1.813089 \n",
            " total_bbox = 744975, rewritten_bbox = 0.003490 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.780296), count: 6, class_loss = 0.314130, iou_loss = 7.734520, total_loss = 8.048651 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746729), count: 9, class_loss = 0.620607, iou_loss = 5.234060, total_loss = 5.854667 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797632), count: 6, class_loss = 0.354391, iou_loss = 0.227767, total_loss = 0.582158 \n",
            " total_bbox = 744996, rewritten_bbox = 0.003490 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.374518), count: 1, class_loss = 0.289250, iou_loss = 0.387981, total_loss = 0.677231 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.799334), count: 5, class_loss = 0.538117, iou_loss = 1.339185, total_loss = 1.877301 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.816454), count: 8, class_loss = 0.797026, iou_loss = 0.393764, total_loss = 1.190791 \n",
            " total_bbox = 745010, rewritten_bbox = 0.003490 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1104/6000: loss=2.6 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1104: 2.582252, 1.961625 avg loss, 0.001000 rate, 6.130251 seconds, 70656 images, 9.215426 hours left\n",
            "Loaded: 0.000056 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.797338), count: 10, class_loss = 0.886393, iou_loss = 10.642816, total_loss = 11.529209 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762670), count: 23, class_loss = 1.878008, iou_loss = 9.071811, total_loss = 10.949819 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.794379), count: 9, class_loss = 0.436675, iou_loss = 0.629416, total_loss = 1.066091 \n",
            " total_bbox = 745052, rewritten_bbox = 0.003490 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.850448), count: 5, class_loss = 0.921075, iou_loss = 7.622502, total_loss = 8.543577 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.770943), count: 13, class_loss = 0.989330, iou_loss = 3.537775, total_loss = 4.527105 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774627), count: 9, class_loss = 0.278118, iou_loss = 0.714733, total_loss = 0.992850 \n",
            " total_bbox = 745079, rewritten_bbox = 0.003490 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.763410), count: 2, class_loss = 0.479240, iou_loss = 2.488614, total_loss = 2.967854 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730845), count: 7, class_loss = 0.488223, iou_loss = 1.380233, total_loss = 1.868456 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.804771), count: 14, class_loss = 0.463229, iou_loss = 0.583134, total_loss = 1.046363 \n",
            " total_bbox = 745102, rewritten_bbox = 0.003489 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.698394), count: 10, class_loss = 2.179691, iou_loss = 11.468571, total_loss = 13.648261 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.764295), count: 31, class_loss = 4.785684, iou_loss = 9.297461, total_loss = 14.083144 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795485), count: 23, class_loss = 2.436451, iou_loss = 1.478269, total_loss = 3.914720 \n",
            " total_bbox = 745166, rewritten_bbox = 0.003489 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.776440), count: 4, class_loss = 0.952608, iou_loss = 2.385392, total_loss = 3.338000 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.797457), count: 31, class_loss = 4.794464, iou_loss = 6.510787, total_loss = 11.305251 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768497), count: 24, class_loss = 2.017017, iou_loss = 1.920450, total_loss = 3.937467 \n",
            " total_bbox = 745225, rewritten_bbox = 0.003489 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.755896), count: 16, class_loss = 2.147154, iou_loss = 28.037212, total_loss = 30.184366 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773491), count: 20, class_loss = 2.530859, iou_loss = 7.753032, total_loss = 10.283891 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.784527), count: 14, class_loss = 1.817113, iou_loss = 0.746362, total_loss = 2.563476 \n",
            " total_bbox = 745275, rewritten_bbox = 0.003489 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000936, iou_loss = 0.000000, total_loss = 0.000936 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.857118), count: 9, class_loss = 1.169878, iou_loss = 2.712868, total_loss = 3.882746 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800306), count: 13, class_loss = 1.141900, iou_loss = 0.725215, total_loss = 1.867114 \n",
            " total_bbox = 745297, rewritten_bbox = 0.003489 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.789429), count: 13, class_loss = 1.461409, iou_loss = 17.603426, total_loss = 19.064835 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.748316), count: 27, class_loss = 3.790600, iou_loss = 9.515673, total_loss = 13.306273 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.788775), count: 12, class_loss = 0.946697, iou_loss = 0.792241, total_loss = 1.738938 \n",
            " total_bbox = 745349, rewritten_bbox = 0.003488 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.614902), count: 14, class_loss = 4.360512, iou_loss = 13.529951, total_loss = 17.890463 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.764408), count: 53, class_loss = 7.002590, iou_loss = 14.694525, total_loss = 21.697115 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752271), count: 33, class_loss = 3.418018, iou_loss = 2.146533, total_loss = 5.564551 \n",
            " total_bbox = 745449, rewritten_bbox = 0.003488 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.722000), count: 2, class_loss = 0.509415, iou_loss = 2.008678, total_loss = 2.518092 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.746075), count: 20, class_loss = 3.799455, iou_loss = 6.757167, total_loss = 10.556623 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744857), count: 22, class_loss = 1.760974, iou_loss = 0.977355, total_loss = 2.738329 \n",
            " total_bbox = 745493, rewritten_bbox = 0.003488 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.718111), count: 10, class_loss = 3.255815, iou_loss = 13.504044, total_loss = 16.759859 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.716159), count: 25, class_loss = 5.063025, iou_loss = 4.889668, total_loss = 9.952692 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.724752), count: 29, class_loss = 2.564595, iou_loss = 1.332602, total_loss = 3.897197 \n",
            " total_bbox = 745556, rewritten_bbox = 0.003487 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.638635), count: 9, class_loss = 3.313022, iou_loss = 15.777789, total_loss = 19.090811 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.699773), count: 28, class_loss = 4.482334, iou_loss = 5.924242, total_loss = 10.406576 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746233), count: 28, class_loss = 1.457209, iou_loss = 1.112241, total_loss = 2.569449 \n",
            " total_bbox = 745621, rewritten_bbox = 0.003487 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.762946), count: 2, class_loss = 0.107936, iou_loss = 2.476997, total_loss = 2.584934 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.762909), count: 19, class_loss = 3.545061, iou_loss = 3.178422, total_loss = 6.723483 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.764400), count: 26, class_loss = 1.637412, iou_loss = 1.190702, total_loss = 2.828114 \n",
            " total_bbox = 745668, rewritten_bbox = 0.003487 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.767440), count: 25, class_loss = 5.410936, iou_loss = 29.300009, total_loss = 34.710945 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787762), count: 80, class_loss = 10.636873, iou_loss = 27.992357, total_loss = 38.629230 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.685095), count: 30, class_loss = 3.581874, iou_loss = 1.772342, total_loss = 5.354216 \n",
            " total_bbox = 745803, rewritten_bbox = 0.003486 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000023, iou_loss = 0.000000, total_loss = 0.000023 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.869567), count: 1, class_loss = 0.513900, iou_loss = 0.146377, total_loss = 0.660277 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.817149), count: 14, class_loss = 1.682948, iou_loss = 0.573453, total_loss = 2.256401 \n",
            " total_bbox = 745818, rewritten_bbox = 0.003486 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.820381), count: 2, class_loss = 0.473705, iou_loss = 3.050685, total_loss = 3.524390 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.683009), count: 4, class_loss = 0.746548, iou_loss = 0.829494, total_loss = 1.576042 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.864157), count: 6, class_loss = 0.664674, iou_loss = 0.202245, total_loss = 0.866919 \n",
            " total_bbox = 745830, rewritten_bbox = 0.003486 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1105/6000: loss=2.3 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1105: 2.274417, 1.992904 avg loss, 0.001000 rate, 6.144357 seconds, 70720 images, 9.206645 hours left\n",
            "Loaded: 0.000059 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.742176), count: 4, class_loss = 1.008799, iou_loss = 4.324274, total_loss = 5.333072 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.768053), count: 40, class_loss = 6.318761, iou_loss = 8.331905, total_loss = 14.650666 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.720879), count: 31, class_loss = 3.999335, iou_loss = 1.306392, total_loss = 5.305727 \n",
            " total_bbox = 745905, rewritten_bbox = 0.003486 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.750566), count: 17, class_loss = 3.568380, iou_loss = 28.671606, total_loss = 32.239986 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.744570), count: 30, class_loss = 4.614406, iou_loss = 6.976812, total_loss = 11.591218 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780605), count: 24, class_loss = 3.625739, iou_loss = 1.161680, total_loss = 4.787419 \n",
            " total_bbox = 745976, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.809928), count: 8, class_loss = 0.474821, iou_loss = 11.739592, total_loss = 12.214413 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783807), count: 22, class_loss = 2.112131, iou_loss = 7.833190, total_loss = 9.945321 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.722708), count: 17, class_loss = 2.301108, iou_loss = 0.859728, total_loss = 3.160836 \n",
            " total_bbox = 746023, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706743), count: 1, class_loss = 0.213926, iou_loss = 0.095115, total_loss = 0.309041 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795630), count: 9, class_loss = 0.570298, iou_loss = 0.178436, total_loss = 0.748734 \n",
            " total_bbox = 746033, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.781483), count: 9, class_loss = 0.802108, iou_loss = 10.611126, total_loss = 11.413235 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789480), count: 21, class_loss = 1.230124, iou_loss = 7.180188, total_loss = 8.410313 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.712144), count: 7, class_loss = 1.267472, iou_loss = 0.712202, total_loss = 1.979675 \n",
            " total_bbox = 746070, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.837903), count: 5, class_loss = 0.716932, iou_loss = 0.762957, total_loss = 1.479890 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756547), count: 9, class_loss = 0.417738, iou_loss = 0.381285, total_loss = 0.799023 \n",
            " total_bbox = 746084, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.758051), count: 1, class_loss = 0.087991, iou_loss = 0.046306, total_loss = 0.134297 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.835686), count: 9, class_loss = 0.980548, iou_loss = 0.229375, total_loss = 1.209923 \n",
            " total_bbox = 746094, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.036173, iou_loss = 0.000000, total_loss = 0.036173 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747388), count: 10, class_loss = 0.778026, iou_loss = 0.176499, total_loss = 0.954525 \n",
            " total_bbox = 746104, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.650994), count: 3, class_loss = 0.848505, iou_loss = 3.246980, total_loss = 4.095485 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771553), count: 26, class_loss = 2.827238, iou_loss = 5.220066, total_loss = 8.047303 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768046), count: 22, class_loss = 0.871139, iou_loss = 1.254679, total_loss = 2.125818 \n",
            " total_bbox = 746155, rewritten_bbox = 0.003485 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.573337), count: 6, class_loss = 1.653744, iou_loss = 4.260610, total_loss = 5.914353 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.742769), count: 23, class_loss = 4.129315, iou_loss = 6.106973, total_loss = 10.236288 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761595), count: 21, class_loss = 1.895962, iou_loss = 1.010993, total_loss = 2.906954 \n",
            " total_bbox = 746205, rewritten_bbox = 0.003484 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.301442), count: 1, class_loss = 0.278584, iou_loss = 0.966201, total_loss = 1.244785 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.832947), count: 17, class_loss = 1.778650, iou_loss = 4.294935, total_loss = 6.073585 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.801602), count: 27, class_loss = 2.236785, iou_loss = 1.525926, total_loss = 3.762711 \n",
            " total_bbox = 746250, rewritten_bbox = 0.003484 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.545294), count: 4, class_loss = 1.132311, iou_loss = 2.568377, total_loss = 3.700689 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736471), count: 23, class_loss = 4.557524, iou_loss = 5.050036, total_loss = 9.607560 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.727347), count: 27, class_loss = 2.273359, iou_loss = 0.976220, total_loss = 3.249580 \n",
            " total_bbox = 746304, rewritten_bbox = 0.003484 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.613399), count: 2, class_loss = 0.405918, iou_loss = 1.221025, total_loss = 1.626943 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786648), count: 19, class_loss = 2.357730, iou_loss = 3.537432, total_loss = 5.895162 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766036), count: 26, class_loss = 3.393501, iou_loss = 1.476737, total_loss = 4.870238 \n",
            " total_bbox = 746351, rewritten_bbox = 0.003484 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.644871), count: 2, class_loss = 0.488713, iou_loss = 1.579645, total_loss = 2.068357 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.789602), count: 7, class_loss = 1.450606, iou_loss = 1.587194, total_loss = 3.037800 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768357), count: 17, class_loss = 1.584995, iou_loss = 0.686654, total_loss = 2.271649 \n",
            " total_bbox = 746377, rewritten_bbox = 0.003483 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.799480), count: 7, class_loss = 0.689933, iou_loss = 8.871932, total_loss = 9.561865 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.805849), count: 10, class_loss = 0.984339, iou_loss = 5.131011, total_loss = 6.115350 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785083), count: 6, class_loss = 0.616749, iou_loss = 0.160439, total_loss = 0.777187 \n",
            " total_bbox = 746400, rewritten_bbox = 0.003483 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000006, iou_loss = 0.000000, total_loss = 0.000006 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.786218), count: 1, class_loss = 0.423870, iou_loss = 0.145762, total_loss = 0.569632 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.797180), count: 12, class_loss = 1.314671, iou_loss = 0.276131, total_loss = 1.590802 \n",
            " total_bbox = 746413, rewritten_bbox = 0.003483 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1106/6000: loss=1.5 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1106: 1.531452, 1.946759 avg loss, 0.001000 rate, 6.106594 seconds, 70784 images, 9.198125 hours left\n",
            "Loaded: 0.000071 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000060, iou_loss = 0.000000, total_loss = 0.000060 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.660583), count: 5, class_loss = 0.925077, iou_loss = 0.728975, total_loss = 1.654052 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770706), count: 7, class_loss = 0.450649, iou_loss = 0.229436, total_loss = 0.680085 \n",
            " total_bbox = 746425, rewritten_bbox = 0.003483 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.846406), count: 9, class_loss = 1.565310, iou_loss = 1.781388, total_loss = 3.346698 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763247), count: 16, class_loss = 1.766459, iou_loss = 0.647636, total_loss = 2.414095 \n",
            " total_bbox = 746450, rewritten_bbox = 0.003483 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.701139), count: 5, class_loss = 0.944738, iou_loss = 7.912721, total_loss = 8.857459 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.833063), count: 10, class_loss = 2.841912, iou_loss = 3.630710, total_loss = 6.472622 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770832), count: 11, class_loss = 1.152872, iou_loss = 0.429379, total_loss = 1.582250 \n",
            " total_bbox = 746476, rewritten_bbox = 0.003483 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.747674), count: 25, class_loss = 4.180528, iou_loss = 39.209236, total_loss = 43.389763 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.738222), count: 49, class_loss = 8.059695, iou_loss = 15.296311, total_loss = 23.356007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.748095), count: 24, class_loss = 3.429476, iou_loss = 1.301391, total_loss = 4.730867 \n",
            " total_bbox = 746574, rewritten_bbox = 0.003483 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.626416), count: 5, class_loss = 1.330230, iou_loss = 5.055389, total_loss = 6.385619 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.719326), count: 46, class_loss = 7.814619, iou_loss = 10.476622, total_loss = 18.291241 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.757390), count: 31, class_loss = 4.794430, iou_loss = 1.985617, total_loss = 6.780046 \n",
            " total_bbox = 746656, rewritten_bbox = 0.003482 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.397424), count: 1, class_loss = 0.280990, iou_loss = 0.189100, total_loss = 0.470090 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.770532), count: 23, class_loss = 3.772180, iou_loss = 5.035191, total_loss = 8.807371 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.734257), count: 25, class_loss = 2.914213, iou_loss = 1.244800, total_loss = 4.159014 \n",
            " total_bbox = 746705, rewritten_bbox = 0.003482 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.773696), count: 45, class_loss = 2.936422, iou_loss = 96.486580, total_loss = 99.423004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.725849), count: 36, class_loss = 5.386030, iou_loss = 13.510256, total_loss = 18.896286 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746659), count: 27, class_loss = 1.652110, iou_loss = 1.329805, total_loss = 2.981915 \n",
            " total_bbox = 746813, rewritten_bbox = 0.003481 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.905737), count: 1, class_loss = 0.296685, iou_loss = 0.540310, total_loss = 0.836995 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755778), count: 20, class_loss = 4.242053, iou_loss = 4.959254, total_loss = 9.201307 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.721561), count: 18, class_loss = 1.665063, iou_loss = 0.929587, total_loss = 2.594650 \n",
            " total_bbox = 746852, rewritten_bbox = 0.003481 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.022142, iou_loss = 0.000000, total_loss = 0.022142 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.788992), count: 25, class_loss = 1.684912, iou_loss = 5.465315, total_loss = 7.150227 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795653), count: 31, class_loss = 1.819092, iou_loss = 1.607015, total_loss = 3.426107 \n",
            " total_bbox = 746908, rewritten_bbox = 0.003481 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.599429), count: 3, class_loss = 1.372963, iou_loss = 2.676178, total_loss = 4.049140 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.773871), count: 24, class_loss = 3.785275, iou_loss = 5.753432, total_loss = 9.538707 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781181), count: 26, class_loss = 1.289736, iou_loss = 1.224437, total_loss = 2.514173 \n",
            " total_bbox = 746961, rewritten_bbox = 0.003481 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.730006), count: 19, class_loss = 3.161628, iou_loss = 38.860126, total_loss = 42.021755 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.750239), count: 27, class_loss = 4.610228, iou_loss = 8.360235, total_loss = 12.970463 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.747304), count: 17, class_loss = 1.430781, iou_loss = 1.029816, total_loss = 2.460596 \n",
            " total_bbox = 747024, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.761734), count: 20, class_loss = 3.899456, iou_loss = 26.625454, total_loss = 30.524910 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.756807), count: 44, class_loss = 5.901689, iou_loss = 14.344449, total_loss = 20.246138 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.754565), count: 16, class_loss = 2.267693, iou_loss = 1.428968, total_loss = 3.696661 \n",
            " total_bbox = 747104, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.795821), count: 2, class_loss = 0.371828, iou_loss = 0.263983, total_loss = 0.635811 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.802250), count: 10, class_loss = 0.980988, iou_loss = 0.421638, total_loss = 1.402626 \n",
            " total_bbox = 747116, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.097024, iou_loss = 0.000000, total_loss = 0.097024 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.839106), count: 8, class_loss = 0.435676, iou_loss = 2.016552, total_loss = 2.452228 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.811104), count: 10, class_loss = 0.509789, iou_loss = 0.451044, total_loss = 0.960833 \n",
            " total_bbox = 747134, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000001, iou_loss = 0.000000, total_loss = 0.000001 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.800504), count: 4, class_loss = 0.374951, iou_loss = 0.615627, total_loss = 0.990578 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789663), count: 11, class_loss = 0.411730, iou_loss = 0.325938, total_loss = 0.737669 \n",
            " total_bbox = 747149, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.802427), count: 2, class_loss = 0.190772, iou_loss = 0.260668, total_loss = 0.451441 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.844498), count: 11, class_loss = 0.381239, iou_loss = 0.404926, total_loss = 0.786164 \n",
            " total_bbox = 747162, rewritten_bbox = 0.003480 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1107/6000: loss=2.0 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1107: 2.032864, 1.955369 avg loss, 0.001000 rate, 6.188560 seconds, 70848 images, 9.189161 hours left\n",
            "Loaded: 0.000048 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.658868), count: 10, class_loss = 2.111303, iou_loss = 9.574752, total_loss = 11.686055 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.620442), count: 14, class_loss = 3.696962, iou_loss = 3.037509, total_loss = 6.734471 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.821419), count: 7, class_loss = 1.085925, iou_loss = 0.328047, total_loss = 1.413973 \n",
            " total_bbox = 747193, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775695), count: 2, class_loss = 0.126699, iou_loss = 0.279018, total_loss = 0.405718 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.765320), count: 9, class_loss = 0.501316, iou_loss = 0.264936, total_loss = 0.766253 \n",
            " total_bbox = 747204, rewritten_bbox = 0.003480 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.760241), count: 5, class_loss = 0.758409, iou_loss = 5.266611, total_loss = 6.025021 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.814010), count: 23, class_loss = 2.796927, iou_loss = 8.530740, total_loss = 11.327667 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789431), count: 16, class_loss = 1.583904, iou_loss = 0.856272, total_loss = 2.440176 \n",
            " total_bbox = 747248, rewritten_bbox = 0.003479 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.667459), count: 16, class_loss = 3.525312, iou_loss = 23.614361, total_loss = 27.139673 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.727073), count: 27, class_loss = 5.175539, iou_loss = 8.021969, total_loss = 13.197507 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787315), count: 17, class_loss = 2.118405, iou_loss = 1.163460, total_loss = 3.281866 \n",
            " total_bbox = 747308, rewritten_bbox = 0.003479 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.762182), count: 23, class_loss = 5.313752, iou_loss = 32.834629, total_loss = 38.148380 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.739668), count: 66, class_loss = 10.831437, iou_loss = 19.244522, total_loss = 30.075958 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.724596), count: 25, class_loss = 2.330511, iou_loss = 1.487757, total_loss = 3.818268 \n",
            " total_bbox = 747422, rewritten_bbox = 0.003479 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.568297), count: 1, class_loss = 0.183313, iou_loss = 0.603668, total_loss = 0.786981 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.806547), count: 30, class_loss = 3.093416, iou_loss = 6.861757, total_loss = 9.955173 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.753874), count: 34, class_loss = 2.797821, iou_loss = 1.782818, total_loss = 4.580639 \n",
            " total_bbox = 747487, rewritten_bbox = 0.003478 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.679156), count: 3, class_loss = 0.801873, iou_loss = 2.858428, total_loss = 3.660300 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787190), count: 23, class_loss = 3.502264, iou_loss = 5.145596, total_loss = 8.647860 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768620), count: 28, class_loss = 2.104277, iou_loss = 1.720510, total_loss = 3.824787 \n",
            " total_bbox = 747541, rewritten_bbox = 0.003478 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.534996), count: 4, class_loss = 1.129038, iou_loss = 2.674573, total_loss = 3.803612 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.718561), count: 27, class_loss = 4.679757, iou_loss = 5.674335, total_loss = 10.354092 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.769923), count: 23, class_loss = 2.547588, iou_loss = 1.099786, total_loss = 3.647374 \n",
            " total_bbox = 747595, rewritten_bbox = 0.003478 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.625149), count: 2, class_loss = 0.488505, iou_loss = 1.504191, total_loss = 1.992696 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.774979), count: 17, class_loss = 2.565760, iou_loss = 4.587431, total_loss = 7.153191 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.799037), count: 26, class_loss = 1.734508, iou_loss = 1.217347, total_loss = 2.951855 \n",
            " total_bbox = 747640, rewritten_bbox = 0.003478 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.819156), count: 21, class_loss = 2.856425, iou_loss = 36.666340, total_loss = 39.522766 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787227), count: 42, class_loss = 6.127657, iou_loss = 17.450768, total_loss = 23.578424 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778993), count: 20, class_loss = 2.467289, iou_loss = 1.200752, total_loss = 3.668042 \n",
            " total_bbox = 747723, rewritten_bbox = 0.003477 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.664771), count: 4, class_loss = 0.980693, iou_loss = 7.785598, total_loss = 8.766291 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778414), count: 15, class_loss = 3.551450, iou_loss = 2.964264, total_loss = 6.515714 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774906), count: 24, class_loss = 3.160449, iou_loss = 1.020164, total_loss = 4.180614 \n",
            " total_bbox = 747766, rewritten_bbox = 0.003477 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.730927), count: 8, class_loss = 1.615387, iou_loss = 10.142983, total_loss = 11.758370 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.755301), count: 29, class_loss = 4.611080, iou_loss = 7.344582, total_loss = 11.955662 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.770236), count: 27, class_loss = 2.282639, iou_loss = 1.739890, total_loss = 4.022529 \n",
            " total_bbox = 747830, rewritten_bbox = 0.003477 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000745, iou_loss = 0.000000, total_loss = 0.000745 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.710170), count: 19, class_loss = 2.130236, iou_loss = 3.556133, total_loss = 5.686369 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.774549), count: 23, class_loss = 1.736614, iou_loss = 1.354934, total_loss = 3.091547 \n",
            " total_bbox = 747872, rewritten_bbox = 0.003477 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.777425), count: 1, class_loss = 0.506073, iou_loss = 0.860765, total_loss = 1.366838 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.778301), count: 33, class_loss = 5.658368, iou_loss = 6.524578, total_loss = 12.182946 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780733), count: 33, class_loss = 3.412614, iou_loss = 2.061756, total_loss = 5.474370 \n",
            " total_bbox = 747939, rewritten_bbox = 0.003476 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.728175), count: 34, class_loss = 6.671866, iou_loss = 41.293461, total_loss = 47.965328 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.747956), count: 58, class_loss = 7.623364, iou_loss = 21.753689, total_loss = 29.377052 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.724949), count: 21, class_loss = 2.927953, iou_loss = 1.123909, total_loss = 4.051862 \n",
            " total_bbox = 748052, rewritten_bbox = 0.003476 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.735963), count: 28, class_loss = 5.562727, iou_loss = 44.055176, total_loss = 49.617905 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.790266), count: 36, class_loss = 5.186878, iou_loss = 14.760851, total_loss = 19.947729 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780712), count: 23, class_loss = 2.000739, iou_loss = 1.647301, total_loss = 3.648041 \n",
            " total_bbox = 748139, rewritten_bbox = 0.003475 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1108/6000: loss=2.9 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1108: 2.892968, 2.049129 avg loss, 0.001000 rate, 6.144307 seconds, 70912 images, 9.181383 hours left\n",
            "Loaded: 0.000056 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.719236), count: 2, class_loss = 0.490222, iou_loss = 3.717532, total_loss = 4.207754 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.737251), count: 21, class_loss = 3.991866, iou_loss = 3.633606, total_loss = 7.625472 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.755452), count: 27, class_loss = 2.375877, iou_loss = 1.310015, total_loss = 3.685892 \n",
            " total_bbox = 748189, rewritten_bbox = 0.003475 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.704525), count: 5, class_loss = 0.965180, iou_loss = 8.292637, total_loss = 9.257816 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.782249), count: 26, class_loss = 3.906399, iou_loss = 7.362599, total_loss = 11.268998 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741254), count: 23, class_loss = 1.550663, iou_loss = 1.271454, total_loss = 2.822117 \n",
            " total_bbox = 748243, rewritten_bbox = 0.003475 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.629240), count: 11, class_loss = 1.943527, iou_loss = 9.450712, total_loss = 11.394239 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.825017), count: 19, class_loss = 1.328678, iou_loss = 6.258824, total_loss = 7.587502 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.798691), count: 22, class_loss = 1.908242, iou_loss = 2.127996, total_loss = 4.036237 \n",
            " total_bbox = 748295, rewritten_bbox = 0.003475 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000004, iou_loss = 0.000000, total_loss = 0.000004 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.836279), count: 2, class_loss = 0.235463, iou_loss = 0.511919, total_loss = 0.747381 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.833817), count: 10, class_loss = 0.568711, iou_loss = 0.360366, total_loss = 0.929077 \n",
            " total_bbox = 748307, rewritten_bbox = 0.003475 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000007, iou_loss = 0.000000, total_loss = 0.000007 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.703858), count: 3, class_loss = 0.275088, iou_loss = 0.320163, total_loss = 0.595251 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.800242), count: 8, class_loss = 0.091210, iou_loss = 0.287230, total_loss = 0.378440 \n",
            " total_bbox = 748318, rewritten_bbox = 0.003474 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.759501), count: 5, class_loss = 1.138337, iou_loss = 9.817997, total_loss = 10.956333 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.771470), count: 22, class_loss = 3.853735, iou_loss = 6.430737, total_loss = 10.284472 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.778593), count: 15, class_loss = 2.127353, iou_loss = 0.895252, total_loss = 3.022606 \n",
            " total_bbox = 748360, rewritten_bbox = 0.003474 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.800294), count: 2, class_loss = 0.597037, iou_loss = 2.955198, total_loss = 3.552235 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.730529), count: 25, class_loss = 4.917422, iou_loss = 4.871897, total_loss = 9.789319 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.744232), count: 27, class_loss = 3.039258, iou_loss = 1.280875, total_loss = 4.320134 \n",
            " total_bbox = 748414, rewritten_bbox = 0.003474 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.553952), count: 7, class_loss = 1.864267, iou_loss = 16.964422, total_loss = 18.828690 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.666437), count: 21, class_loss = 5.300132, iou_loss = 3.725520, total_loss = 9.025652 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.780259), count: 26, class_loss = 2.473578, iou_loss = 1.663025, total_loss = 4.136604 \n",
            " total_bbox = 748468, rewritten_bbox = 0.003474 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.763316), count: 3, class_loss = 0.978872, iou_loss = 7.603517, total_loss = 8.582389 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.783318), count: 19, class_loss = 3.466840, iou_loss = 3.905179, total_loss = 7.372019 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.785278), count: 24, class_loss = 2.500255, iou_loss = 1.255792, total_loss = 3.756047 \n",
            " total_bbox = 748514, rewritten_bbox = 0.003474 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.674496), count: 10, class_loss = 1.610337, iou_loss = 18.355404, total_loss = 19.965742 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.803420), count: 28, class_loss = 3.552624, iou_loss = 8.880672, total_loss = 12.433296 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.790499), count: 24, class_loss = 2.362443, iou_loss = 1.434499, total_loss = 3.796942 \n",
            " total_bbox = 748576, rewritten_bbox = 0.003473 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.799556), count: 7, class_loss = 1.425407, iou_loss = 14.466886, total_loss = 15.892293 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.764071), count: 26, class_loss = 3.411018, iou_loss = 6.834544, total_loss = 10.245562 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.761141), count: 27, class_loss = 2.124924, iou_loss = 1.558482, total_loss = 3.683406 \n",
            " total_bbox = 748636, rewritten_bbox = 0.003473 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.710677), count: 8, class_loss = 2.026806, iou_loss = 15.874176, total_loss = 17.900982 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.810649), count: 35, class_loss = 5.778823, iou_loss = 11.887994, total_loss = 17.666817 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.768837), count: 25, class_loss = 3.102956, iou_loss = 2.150185, total_loss = 5.253141 \n",
            " total_bbox = 748704, rewritten_bbox = 0.003473 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.684771), count: 6, class_loss = 1.146281, iou_loss = 9.166640, total_loss = 10.312922 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.751616), count: 30, class_loss = 6.116136, iou_loss = 7.528806, total_loss = 13.644942 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736256), count: 21, class_loss = 2.955175, iou_loss = 1.479107, total_loss = 4.434282 \n",
            " total_bbox = 748761, rewritten_bbox = 0.003472 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.771806), count: 22, class_loss = 3.654643, iou_loss = 31.791996, total_loss = 35.446640 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.754940), count: 50, class_loss = 9.959876, iou_loss = 15.814528, total_loss = 25.774405 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.738757), count: 30, class_loss = 4.067137, iou_loss = 1.941752, total_loss = 6.008889 \n",
            " total_bbox = 748863, rewritten_bbox = 0.003472 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.615372), count: 4, class_loss = 1.304166, iou_loss = 3.888795, total_loss = 5.192961 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.736376), count: 23, class_loss = 3.730850, iou_loss = 4.715100, total_loss = 8.445950 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.795195), count: 23, class_loss = 1.703905, iou_loss = 1.276090, total_loss = 2.979995 \n",
            " total_bbox = 748913, rewritten_bbox = 0.003472 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.704536), count: 20, class_loss = 6.241121, iou_loss = 33.785744, total_loss = 40.026863 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.764720), count: 40, class_loss = 5.537987, iou_loss = 13.168091, total_loss = 18.706078 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.763756), count: 33, class_loss = 2.656251, iou_loss = 1.856251, total_loss = 4.512502 \n",
            " total_bbox = 749006, rewritten_bbox = 0.003471 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1109/6000: loss=2.6 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1109: 2.636637, 2.107880 avg loss, 0.001000 rate, 6.301717 seconds, 70976 images, 9.173064 hours left\n",
            "Loaded: 0.000061 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000000, iou_loss = 0.000000, total_loss = 0.000000 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.691343), count: 2, class_loss = 0.707265, iou_loss = 0.231189, total_loss = 0.938454 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.766566), count: 12, class_loss = 3.108606, iou_loss = 0.233025, total_loss = 3.341631 \n",
            " total_bbox = 749020, rewritten_bbox = 0.003471 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000002, iou_loss = 0.000000, total_loss = 0.000002 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.000000), count: 1, class_loss = 0.000022, iou_loss = 0.000000, total_loss = 0.000022 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813554), count: 10, class_loss = 0.166902, iou_loss = 0.202101, total_loss = 0.369003 \n",
            " total_bbox = 749030, rewritten_bbox = 0.003471 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.709480), count: 10, class_loss = 2.173022, iou_loss = 14.042922, total_loss = 16.215944 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.720200), count: 16, class_loss = 1.948857, iou_loss = 4.853263, total_loss = 6.802121 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752075), count: 12, class_loss = 0.318283, iou_loss = 0.803210, total_loss = 1.121493 \n",
            " total_bbox = 749068, rewritten_bbox = 0.003471 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.643226), count: 2, class_loss = 0.580352, iou_loss = 2.849386, total_loss = 3.429739 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.784076), count: 21, class_loss = 2.392360, iou_loss = 5.261829, total_loss = 7.654189 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.783907), count: 16, class_loss = 1.295807, iou_loss = 0.909723, total_loss = 2.205529 \n",
            " total_bbox = 749107, rewritten_bbox = 0.003471 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.745415), count: 6, class_loss = 0.784103, iou_loss = 5.215003, total_loss = 5.999107 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753032), count: 30, class_loss = 3.049989, iou_loss = 6.565565, total_loss = 9.615555 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.772238), count: 27, class_loss = 2.119215, iou_loss = 1.514513, total_loss = 3.633728 \n",
            " total_bbox = 749170, rewritten_bbox = 0.003471 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.674840), count: 9, class_loss = 3.345520, iou_loss = 15.499926, total_loss = 18.845446 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.763177), count: 29, class_loss = 4.860363, iou_loss = 6.722945, total_loss = 11.583308 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.746749), count: 26, class_loss = 3.754380, iou_loss = 1.550452, total_loss = 5.304832 \n",
            " total_bbox = 749234, rewritten_bbox = 0.003470 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.656526), count: 10, class_loss = 1.960468, iou_loss = 12.631393, total_loss = 14.591862 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.761668), count: 27, class_loss = 3.229638, iou_loss = 6.582504, total_loss = 9.812142 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.739915), count: 22, class_loss = 1.872263, iou_loss = 1.546822, total_loss = 3.419085 \n",
            " total_bbox = 749293, rewritten_bbox = 0.003470 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.724571), count: 1, class_loss = 0.295871, iou_loss = 0.684023, total_loss = 0.979893 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.785795), count: 34, class_loss = 6.296982, iou_loss = 8.293970, total_loss = 14.590953 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.756448), count: 27, class_loss = 4.618907, iou_loss = 1.758547, total_loss = 6.377454 \n",
            " total_bbox = 749355, rewritten_bbox = 0.003470 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.826901), count: 3, class_loss = 0.652612, iou_loss = 4.000522, total_loss = 4.653134 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.753905), count: 22, class_loss = 3.688516, iou_loss = 5.505543, total_loss = 9.194059 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.752025), count: 32, class_loss = 4.144624, iou_loss = 1.731292, total_loss = 5.875916 \n",
            " total_bbox = 749412, rewritten_bbox = 0.003469 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.031075, iou_loss = 0.000000, total_loss = 0.031075 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775890), count: 21, class_loss = 5.260817, iou_loss = 4.387109, total_loss = 9.647925 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.773722), count: 27, class_loss = 2.173189, iou_loss = 1.233558, total_loss = 3.406748 \n",
            " total_bbox = 749460, rewritten_bbox = 0.003469 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.657281), count: 3, class_loss = 0.726731, iou_loss = 2.138030, total_loss = 2.864760 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.777856), count: 24, class_loss = 2.852618, iou_loss = 5.818604, total_loss = 8.671222 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.787497), count: 29, class_loss = 1.791613, iou_loss = 1.703999, total_loss = 3.495612 \n",
            " total_bbox = 749516, rewritten_bbox = 0.003469 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.712453), count: 16, class_loss = 2.645514, iou_loss = 33.364655, total_loss = 36.010170 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.787095), count: 22, class_loss = 3.927438, iou_loss = 9.516231, total_loss = 13.443668 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.725497), count: 16, class_loss = 1.327541, iou_loss = 0.908629, total_loss = 2.236169 \n",
            " total_bbox = 749570, rewritten_bbox = 0.003469 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.492106), count: 6, class_loss = 1.570696, iou_loss = 13.840316, total_loss = 15.411012 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.706592), count: 19, class_loss = 2.881195, iou_loss = 3.474233, total_loss = 6.355429 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.741519), count: 22, class_loss = 2.180362, iou_loss = 1.056353, total_loss = 3.236715 \n",
            " total_bbox = 749617, rewritten_bbox = 0.003468 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000748, iou_loss = 0.000000, total_loss = 0.000748 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.819157), count: 14, class_loss = 2.943167, iou_loss = 3.459074, total_loss = 6.402241 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.813811), count: 14, class_loss = 2.218724, iou_loss = 0.673922, total_loss = 2.892645 \n",
            " total_bbox = 749645, rewritten_bbox = 0.003468 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000255, iou_loss = 0.000000, total_loss = 0.000255 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.749989), count: 5, class_loss = 0.952555, iou_loss = 0.749020, total_loss = 1.701575 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.736336), count: 12, class_loss = 1.072712, iou_loss = 0.430911, total_loss = 1.503624 \n",
            " total_bbox = 749662, rewritten_bbox = 0.003468 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.008357, iou_loss = 0.000000, total_loss = 0.008357 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.836018), count: 4, class_loss = 0.268628, iou_loss = 1.307709, total_loss = 1.576337 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.781355), count: 9, class_loss = 0.801348, iou_loss = 0.305713, total_loss = 1.107061 \n",
            " total_bbox = 749675, rewritten_bbox = 0.003468 % \n",
            "\n",
            " (next mAP calculation at 1200 iterations) \n",
            "\n",
            " Tensor Cores are disabled until the first 3000 iterations are reached.\n",
            " Last accuracy mAP@0.50 = 86.05 %, best = 86.05 % \u001b]2;1110/6000: loss=1.9 map=0.86 best=0.86 hours left=9.2\u0007\n",
            " 1110: 1.941314, 2.091223 avg loss, 0.001000 rate, 5.926411 seconds, 71040 images, 9.166951 hours left\n",
            "Resizing, random_coef = 1.40 \n",
            "\n",
            " 608 x 608 \n",
            " try to allocate additional workspace_size = 237.17 MB \n",
            " CUDA allocate done! \n",
            "Loaded: 0.000047 seconds\n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000003, iou_loss = 0.000000, total_loss = 0.000003 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.775237), count: 1, class_loss = 0.171669, iou_loss = 0.201531, total_loss = 0.373201 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.789296), count: 10, class_loss = 0.414059, iou_loss = 0.441288, total_loss = 0.855347 \n",
            " total_bbox = 749686, rewritten_bbox = 0.003468 % \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 139 Avg (IOU: 0.000000), count: 1, class_loss = 0.000013, iou_loss = 0.000000, total_loss = 0.000013 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 150 Avg (IOU: 0.687127), count: 5, class_loss = 0.991409, iou_loss = 2.264466, total_loss = 3.255874 \n",
            "v3 (iou loss, Normalizer: (iou: 0.07, obj: 1.00, cls: 1.00) Region 161 Avg (IOU: 0.709538), count: 9, class_loss = 0.864929, iou_loss = 0.508680, total_loss = 1.373609 \n",
            " total_bbox = 749700, rewritten_bbox = 0.003468 % \n",
            "^C\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# define helper function imShow\n",
        "def imShow(path):\n",
        "  import cv2\n",
        "  import matplotlib.pyplot as plt\n",
        "  %matplotlib inline\n",
        "\n",
        "  image = cv2.imread(path)\n",
        "  height, width = image.shape[:2]\n",
        "  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)\n",
        "\n",
        "  fig = plt.gcf()\n",
        "  fig.set_size_inches(18, 10)\n",
        "  plt.axis(\"off\")\n",
        "  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))\n",
        "  plt.show()"
      ],
      "metadata": {
        "id": "e6NPP3cUMCgf"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#only works if the training does not get interrupted\n",
        "imShow('chart.png')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "id": "ERPOSZsdMIwm",
        "outputId": "2988e530-bd70-4fb6-ded3-25f7c4c40b78"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1296x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!./darknet detector map data/obj.data cfg/yolov4-custom.cfg /mydrive/yolov4/training/yolov4-custom_4000.weights -points 0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ctbiwY7TMK6e",
        "outputId": "e1bde9ad-ece6-4d38-a742-ae8b04452a6d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " CUDA-version: 11010 (11020), cuDNN: 7.6.5, CUDNN_HALF=1, GPU count: 1  \n",
            " CUDNN_HALF=1 \n",
            " OpenCV version: 3.2.0\n",
            " 0 : compute_capability = 750, cudnn_half = 1, GPU: Tesla T4 \n",
            "net.optimized_memory = 0 \n",
            "mini_batch = 1, batch = 16, time_steps = 1, train = 0 \n",
            "   layer   filters  size/strd(dil)      input                output\n",
            "   0 Create CUDA-stream - 0 \n",
            " Create cudnn-handle 0 \n",
            "conv     32       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  32 0.299 BF\n",
            "   1 conv     64       3 x 3/ 2    416 x 416 x  32 ->  208 x 208 x  64 1.595 BF\n",
            "   2 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n",
            "   3 route  1 \t\t                           ->  208 x 208 x  64 \n",
            "   4 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n",
            "   5 conv     32       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  32 0.177 BF\n",
            "   6 conv     64       3 x 3/ 1    208 x 208 x  32 ->  208 x 208 x  64 1.595 BF\n",
            "   7 Shortcut Layer: 4,  wt = 0, wn = 0, outputs: 208 x 208 x  64 0.003 BF\n",
            "   8 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n",
            "   9 route  8 2 \t                           ->  208 x 208 x 128 \n",
            "  10 conv     64       1 x 1/ 1    208 x 208 x 128 ->  208 x 208 x  64 0.709 BF\n",
            "  11 conv    128       3 x 3/ 2    208 x 208 x  64 ->  104 x 104 x 128 1.595 BF\n",
            "  12 conv     64       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x  64 0.177 BF\n",
            "  13 route  11 \t\t                           ->  104 x 104 x 128 \n",
            "  14 conv     64       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x  64 0.177 BF\n",
            "  15 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n",
            "  16 conv     64       3 x 3/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.797 BF\n",
            "  17 Shortcut Layer: 14,  wt = 0, wn = 0, outputs: 104 x 104 x  64 0.001 BF\n",
            "  18 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n",
            "  19 conv     64       3 x 3/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.797 BF\n",
            "  20 Shortcut Layer: 17,  wt = 0, wn = 0, outputs: 104 x 104 x  64 0.001 BF\n",
            "  21 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n",
            "  22 route  21 12 \t                           ->  104 x 104 x 128 \n",
            "  23 conv    128       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x 128 0.354 BF\n",
            "  24 conv    256       3 x 3/ 2    104 x 104 x 128 ->   52 x  52 x 256 1.595 BF\n",
            "  25 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            "  26 route  24 \t\t                           ->   52 x  52 x 256 \n",
            "  27 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            "  28 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  29 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  30 Shortcut Layer: 27,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  31 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  32 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  33 Shortcut Layer: 30,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  34 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  35 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  36 Shortcut Layer: 33,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  37 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  38 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  39 Shortcut Layer: 36,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  40 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  41 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  42 Shortcut Layer: 39,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  43 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  44 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  45 Shortcut Layer: 42,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  46 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  47 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  48 Shortcut Layer: 45,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  49 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  50 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  51 Shortcut Layer: 48,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  52 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  53 route  52 25 \t                           ->   52 x  52 x 256 \n",
            "  54 conv    256       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 256 0.354 BF\n",
            "  55 conv    512       3 x 3/ 2     52 x  52 x 256 ->   26 x  26 x 512 1.595 BF\n",
            "  56 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            "  57 route  55 \t\t                           ->   26 x  26 x 512 \n",
            "  58 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            "  59 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  60 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  61 Shortcut Layer: 58,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  62 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  63 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  64 Shortcut Layer: 61,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  65 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  66 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  67 Shortcut Layer: 64,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  68 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  69 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  70 Shortcut Layer: 67,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  71 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  72 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  73 Shortcut Layer: 70,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  74 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  75 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  76 Shortcut Layer: 73,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  77 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  78 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  79 Shortcut Layer: 76,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  80 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  81 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  82 Shortcut Layer: 79,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  83 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  84 route  83 56 \t                           ->   26 x  26 x 512 \n",
            "  85 conv    512       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 512 0.354 BF\n",
            "  86 conv   1024       3 x 3/ 2     26 x  26 x 512 ->   13 x  13 x1024 1.595 BF\n",
            "  87 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            "  88 route  86 \t\t                           ->   13 x  13 x1024 \n",
            "  89 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            "  90 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            "  91 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            "  92 Shortcut Layer: 89,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            "  93 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            "  94 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            "  95 Shortcut Layer: 92,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            "  96 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            "  97 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            "  98 Shortcut Layer: 95,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            "  99 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            " 100 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            " 101 Shortcut Layer: 98,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            " 102 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            " 103 route  102 87 \t                           ->   13 x  13 x1024 \n",
            " 104 conv   1024       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x1024 0.354 BF\n",
            " 105 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 106 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 107 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 108 max                5x 5/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.002 BF\n",
            " 109 route  107 \t\t                           ->   13 x  13 x 512 \n",
            " 110 max                9x 9/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.007 BF\n",
            " 111 route  107 \t\t                           ->   13 x  13 x 512 \n",
            " 112 max               13x13/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.015 BF\n",
            " 113 route  112 110 108 107 \t                   ->   13 x  13 x2048 \n",
            " 114 conv    512       1 x 1/ 1     13 x  13 x2048 ->   13 x  13 x 512 0.354 BF\n",
            " 115 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 116 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 117 conv    256       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 256 0.044 BF\n",
            " 118 upsample                 2x    13 x  13 x 256 ->   26 x  26 x 256\n",
            " 119 route  85 \t\t                           ->   26 x  26 x 512 \n",
            " 120 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 121 route  120 118 \t                           ->   26 x  26 x 512 \n",
            " 122 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 123 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 124 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 125 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 126 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 127 conv    128       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 128 0.044 BF\n",
            " 128 upsample                 2x    26 x  26 x 128 ->   52 x  52 x 128\n",
            " 129 route  54 \t\t                           ->   52 x  52 x 256 \n",
            " 130 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 131 route  130 128 \t                           ->   52 x  52 x 256 \n",
            " 132 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 133 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n",
            " 134 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 135 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n",
            " 136 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 137 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n",
            " 138 conv     21       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x  21 0.029 BF\n",
            " 139 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.20\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            " 140 route  136 \t\t                           ->   52 x  52 x 128 \n",
            " 141 conv    256       3 x 3/ 2     52 x  52 x 128 ->   26 x  26 x 256 0.399 BF\n",
            " 142 route  141 126 \t                           ->   26 x  26 x 512 \n",
            " 143 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 144 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 145 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 146 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 147 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 148 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 149 conv     21       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x  21 0.015 BF\n",
            " 150 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.10\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            " 151 route  147 \t\t                           ->   26 x  26 x 256 \n",
            " 152 conv    512       3 x 3/ 2     26 x  26 x 256 ->   13 x  13 x 512 0.399 BF\n",
            " 153 route  152 116 \t                           ->   13 x  13 x1024 \n",
            " 154 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 155 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 156 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 157 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 158 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 159 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 160 conv     21       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x  21 0.007 BF\n",
            " 161 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.05\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            "Total BFLOPS 59.570 \n",
            "avg_outputs = 489910 \n",
            " Allocate additional workspace_size = 52.43 MB \n",
            "Loading weights from /mydrive/yolov4/training/yolov4-custom_4000.weights...Couldn't open file: /mydrive/yolov4/training/yolov4-custom_4000.weights\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#set your custom cfg to test mode \n",
        "%cd cfg\n",
        "!sed -i 's/batch=64/batch=1/' yolov4-custom.cfg\n",
        "!sed -i 's/subdivisions=16/subdivisions=1/' yolov4-custom.cfg\n",
        "%cd .."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4gvoibS4MP1W",
        "outputId": "50766499-62dd-45e5-dc84-76d88f629620"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/gdrive/My Drive/yolov4/darknet/cfg\n",
            "/content/gdrive/My Drive/yolov4/darknet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# run your custom detector with this command (upload an image to your google drive to test, the thresh flag sets the minimum accuracy required for object detection)\n",
        "\n",
        "!./darknet detector test data/obj.data cfg/yolov4-custom.cfg /mydrive/yolov4/training/yolov4-custom_best.weights /mydrive/images/image6.jpg -thresh 0.1\n",
        "imShow('predictions.jpg')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "xxuoEnmJMSeO",
        "outputId": "46f51698-5ce8-437f-956b-60587ad59c27"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " CUDA-version: 11010 (11020), cuDNN: 7.6.5, CUDNN_HALF=1, GPU count: 1  \n",
            " CUDNN_HALF=1 \n",
            " OpenCV version: 3.2.0\n",
            " 0 : compute_capability = 750, cudnn_half = 1, GPU: Tesla T4 \n",
            "net.optimized_memory = 0 \n",
            "mini_batch = 1, batch = 1, time_steps = 1, train = 0 \n",
            "   layer   filters  size/strd(dil)      input                output\n",
            "   0 Create CUDA-stream - 0 \n",
            " Create cudnn-handle 0 \n",
            "conv     32       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  32 0.299 BF\n",
            "   1 conv     64       3 x 3/ 2    416 x 416 x  32 ->  208 x 208 x  64 1.595 BF\n",
            "   2 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n",
            "   3 route  1 \t\t                           ->  208 x 208 x  64 \n",
            "   4 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n",
            "   5 conv     32       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  32 0.177 BF\n",
            "   6 conv     64       3 x 3/ 1    208 x 208 x  32 ->  208 x 208 x  64 1.595 BF\n",
            "   7 Shortcut Layer: 4,  wt = 0, wn = 0, outputs: 208 x 208 x  64 0.003 BF\n",
            "   8 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n",
            "   9 route  8 2 \t                           ->  208 x 208 x 128 \n",
            "  10 conv     64       1 x 1/ 1    208 x 208 x 128 ->  208 x 208 x  64 0.709 BF\n",
            "  11 conv    128       3 x 3/ 2    208 x 208 x  64 ->  104 x 104 x 128 1.595 BF\n",
            "  12 conv     64       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x  64 0.177 BF\n",
            "  13 route  11 \t\t                           ->  104 x 104 x 128 \n",
            "  14 conv     64       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x  64 0.177 BF\n",
            "  15 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n",
            "  16 conv     64       3 x 3/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.797 BF\n",
            "  17 Shortcut Layer: 14,  wt = 0, wn = 0, outputs: 104 x 104 x  64 0.001 BF\n",
            "  18 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n",
            "  19 conv     64       3 x 3/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.797 BF\n",
            "  20 Shortcut Layer: 17,  wt = 0, wn = 0, outputs: 104 x 104 x  64 0.001 BF\n",
            "  21 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n",
            "  22 route  21 12 \t                           ->  104 x 104 x 128 \n",
            "  23 conv    128       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x 128 0.354 BF\n",
            "  24 conv    256       3 x 3/ 2    104 x 104 x 128 ->   52 x  52 x 256 1.595 BF\n",
            "  25 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            "  26 route  24 \t\t                           ->   52 x  52 x 256 \n",
            "  27 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            "  28 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  29 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  30 Shortcut Layer: 27,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  31 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  32 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  33 Shortcut Layer: 30,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  34 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  35 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  36 Shortcut Layer: 33,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  37 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  38 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  39 Shortcut Layer: 36,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  40 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  41 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  42 Shortcut Layer: 39,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  43 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  44 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  45 Shortcut Layer: 42,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  46 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  47 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  48 Shortcut Layer: 45,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  49 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  50 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n",
            "  51 Shortcut Layer: 48,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n",
            "  52 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n",
            "  53 route  52 25 \t                           ->   52 x  52 x 256 \n",
            "  54 conv    256       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 256 0.354 BF\n",
            "  55 conv    512       3 x 3/ 2     52 x  52 x 256 ->   26 x  26 x 512 1.595 BF\n",
            "  56 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            "  57 route  55 \t\t                           ->   26 x  26 x 512 \n",
            "  58 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            "  59 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  60 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  61 Shortcut Layer: 58,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  62 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  63 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  64 Shortcut Layer: 61,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  65 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  66 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  67 Shortcut Layer: 64,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  68 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  69 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  70 Shortcut Layer: 67,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  71 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  72 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  73 Shortcut Layer: 70,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  74 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  75 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  76 Shortcut Layer: 73,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  77 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  78 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  79 Shortcut Layer: 76,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  80 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  81 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n",
            "  82 Shortcut Layer: 79,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n",
            "  83 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n",
            "  84 route  83 56 \t                           ->   26 x  26 x 512 \n",
            "  85 conv    512       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 512 0.354 BF\n",
            "  86 conv   1024       3 x 3/ 2     26 x  26 x 512 ->   13 x  13 x1024 1.595 BF\n",
            "  87 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            "  88 route  86 \t\t                           ->   13 x  13 x1024 \n",
            "  89 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            "  90 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            "  91 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            "  92 Shortcut Layer: 89,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            "  93 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            "  94 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            "  95 Shortcut Layer: 92,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            "  96 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            "  97 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            "  98 Shortcut Layer: 95,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            "  99 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            " 100 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n",
            " 101 Shortcut Layer: 98,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n",
            " 102 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n",
            " 103 route  102 87 \t                           ->   13 x  13 x1024 \n",
            " 104 conv   1024       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x1024 0.354 BF\n",
            " 105 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 106 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 107 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 108 max                5x 5/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.002 BF\n",
            " 109 route  107 \t\t                           ->   13 x  13 x 512 \n",
            " 110 max                9x 9/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.007 BF\n",
            " 111 route  107 \t\t                           ->   13 x  13 x 512 \n",
            " 112 max               13x13/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.015 BF\n",
            " 113 route  112 110 108 107 \t                   ->   13 x  13 x2048 \n",
            " 114 conv    512       1 x 1/ 1     13 x  13 x2048 ->   13 x  13 x 512 0.354 BF\n",
            " 115 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 116 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 117 conv    256       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 256 0.044 BF\n",
            " 118 upsample                 2x    13 x  13 x 256 ->   26 x  26 x 256\n",
            " 119 route  85 \t\t                           ->   26 x  26 x 512 \n",
            " 120 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 121 route  120 118 \t                           ->   26 x  26 x 512 \n",
            " 122 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 123 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 124 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 125 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 126 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 127 conv    128       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 128 0.044 BF\n",
            " 128 upsample                 2x    26 x  26 x 128 ->   52 x  52 x 128\n",
            " 129 route  54 \t\t                           ->   52 x  52 x 256 \n",
            " 130 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 131 route  130 128 \t                           ->   52 x  52 x 256 \n",
            " 132 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 133 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n",
            " 134 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 135 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n",
            " 136 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n",
            " 137 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n",
            " 138 conv     21       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x  21 0.029 BF\n",
            " 139 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.20\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            " 140 route  136 \t\t                           ->   52 x  52 x 128 \n",
            " 141 conv    256       3 x 3/ 2     52 x  52 x 128 ->   26 x  26 x 256 0.399 BF\n",
            " 142 route  141 126 \t                           ->   26 x  26 x 512 \n",
            " 143 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 144 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 145 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 146 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 147 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n",
            " 148 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n",
            " 149 conv     21       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x  21 0.015 BF\n",
            " 150 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.10\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            " 151 route  147 \t\t                           ->   26 x  26 x 256 \n",
            " 152 conv    512       3 x 3/ 2     26 x  26 x 256 ->   13 x  13 x 512 0.399 BF\n",
            " 153 route  152 116 \t                           ->   13 x  13 x1024 \n",
            " 154 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 155 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 156 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 157 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 158 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n",
            " 159 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n",
            " 160 conv     21       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x  21 0.007 BF\n",
            " 161 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.05\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            "Total BFLOPS 59.570 \n",
            "avg_outputs = 489910 \n",
            " Allocate additional workspace_size = 52.43 MB \n",
            "Loading weights from /mydrive/yolov4/training/yolov4-custom_best.weights...\n",
            " seen 64, trained: 70 K-images (1 Kilo-batches_64) \n",
            "Done! Loaded 162 layers from weights-file \n",
            " Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/mydrive/images/image6.jpg: Predicted in 32.929000 milli-seconds.\n",
            "without_mask: 41%\n",
            "with_mask: 20%\n",
            "without_mask: 39%\n",
            "without_mask: 41%\n",
            "without_mask: 74%\n",
            "without_mask: 59%\n",
            "with_mask: 11%\n",
            "without_mask: 68%\n",
            "without_mask: 15%\n",
            "without_mask: 54%\n",
            "without_mask: 19%\n",
            "without_mask: 59%\n",
            "with_mask: 12%\n",
            "Unable to init server: Could not connect: Connection refused\n",
            "\n",
            "(predictions:217794): Gtk-\u001b[1;33mWARNING\u001b[0m **: \u001b[34m02:36:45.874\u001b[0m: cannot open display: \n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1296x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}